[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Calcite parser for SparkSQL 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ spark-calcite-parser ---
[INFO] Deleting /home/cherry/spark-calcite-parser/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ spark-calcite-parser ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/cherry/spark-calcite-parser/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ spark-calcite-parser ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-scala-plugin:2.15.2:compile (default) @ spark-calcite-parser ---
[INFO] Checking for multiple versions of scala
[WARNING]  Expected all dependencies to require Scala version: 2.10.4
[WARNING]  com.intel.ssg.bdt:spark-calcite-parser:0.1.0-SNAPSHOT requires scala version: 2.10.4
[WARNING]  com.intel.ssg.bdt:spark-calcite-parser:0.1.0-SNAPSHOT requires scala version: 2.10.4
[WARNING]  org.scala-lang:scala-compiler:2.10.4 requires scala version: 2.10.4
[WARNING]  org.scala-lang:scala-reflect:2.10.4 requires scala version: 2.10.4
[WARNING]  com.fasterxml.jackson.module:jackson-module-scala_2.10:2.4.4 requires scala version: 2.10.4
[WARNING]  com.twitter:chill_2.10:0.5.0 requires scala version: 2.10.4
[WARNING]  com.typesafe.akka:akka-remote_2.10:2.3.11 requires scala version: 2.10.4
[WARNING]  com.typesafe.akka:akka-actor_2.10:2.3.11 requires scala version: 2.10.4
[WARNING]  com.typesafe.akka:akka-slf4j_2.10:2.3.11 requires scala version: 2.10.4
[WARNING]  org.apache.spark:spark-core_2.10:1.5.0 requires scala version: 2.10.4
[WARNING]  org.json4s:json4s-jackson_2.10:3.2.10 requires scala version: 2.10.0
[WARNING] Multiple versions of scala libraries detected!
[INFO] includes = [**/*.java,**/*.scala,]
[INFO] excludes = []
[INFO] /home/cherry/spark-calcite-parser/src/main/scala:-1: info: compiling
[INFO] Compiling 6 source files to /home/cherry/spark-calcite-parser/target/classes at 1445237179819
[INFO] prepare-compile in 0 s
[INFO] compile in 10 s
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ spark-calcite-parser ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 20493 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ spark-calcite-parser ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-scala-plugin:2.15.2:testCompile (default) @ spark-calcite-parser ---
[INFO] Checking for multiple versions of scala
[WARNING]  Expected all dependencies to require Scala version: 2.10.4
[WARNING]  com.intel.ssg.bdt:spark-calcite-parser:0.1.0-SNAPSHOT requires scala version: 2.10.4
[WARNING]  com.intel.ssg.bdt:spark-calcite-parser:0.1.0-SNAPSHOT requires scala version: 2.10.4
[WARNING]  org.scala-lang:scala-compiler:2.10.4 requires scala version: 2.10.4
[WARNING]  org.scala-lang:scala-reflect:2.10.4 requires scala version: 2.10.4
[WARNING]  com.fasterxml.jackson.module:jackson-module-scala_2.10:2.4.4 requires scala version: 2.10.4
[WARNING]  com.twitter:chill_2.10:0.5.0 requires scala version: 2.10.4
[WARNING]  com.typesafe.akka:akka-remote_2.10:2.3.11 requires scala version: 2.10.4
[WARNING]  com.typesafe.akka:akka-actor_2.10:2.3.11 requires scala version: 2.10.4
[WARNING]  com.typesafe.akka:akka-slf4j_2.10:2.3.11 requires scala version: 2.10.4
[WARNING]  org.apache.spark:spark-core_2.10:1.5.0 requires scala version: 2.10.4
[WARNING]  org.json4s:json4s-jackson_2.10:3.2.10 requires scala version: 2.10.0
[WARNING] Multiple versions of scala libraries detected!
[INFO] includes = [**/*.java,**/*.scala,]
[INFO] excludes = []
[INFO] /home/cherry/spark-calcite-parser/src/test/scala:-1: info: compiling
[INFO] Compiling 1 source files to /home/cherry/spark-calcite-parser/target/test-classes at 1445237194355
[INFO] prepare-compile in 0 s
[INFO] compile in 4 s
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ spark-calcite-parser ---
[INFO] 
[INFO] --- scalatest-maven-plugin:1.0:test (test) @ spark-calcite-parser ---
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
[36mDiscovery starting.[0m
[36mDiscovery completed in 16 seconds, 837 milliseconds.[0m
[36mRun starting. Expected test count is: 78[0m
[32mHiveCompSuite:[0m
[33m- 0000 !!! IGNORED !!![0m
[33m- 0001 !!! IGNORED !!![0m
[33m- 0002 !!! IGNORED !!![0m
[33m- 0003 !!! IGNORED !!![0m
[33m- 0004 !!! IGNORED !!![0m
[33m- 0005 !!! IGNORED !!![0m
[33m- 0006 !!! IGNORED !!![0m
[33m- 0007 !!! IGNORED !!![0m
[33m- 0008 !!! IGNORED !!![0m
[33m- 0009 !!! IGNORED !!![0m
[33m- 0010 !!! IGNORED !!![0m
[33m- 0011 !!! IGNORED !!![0m
[33m- 0012 !!! IGNORED !!![0m
[33m- 0013 !!! IGNORED !!![0m
[33m- 0014 !!! IGNORED !!![0m
[33m- 0015 !!! IGNORED !!![0m
[33m- 0016 !!! IGNORED !!![0m
[33m- 0017 !!! IGNORED !!![0m
[33m- 0018 !!! IGNORED !!![0m
[33m- 0019 !!! IGNORED !!![0m
[33m- 0020 !!! IGNORED !!![0m
[33m- 0021 !!! IGNORED !!![0m
[33m- 0022 !!! IGNORED !!![0m
[33m- 0023 !!! IGNORED !!![0m
[33m- 0024 !!! IGNORED !!![0m
[33m- 0025 !!! IGNORED !!![0m
[33m- 0026 !!! IGNORED !!![0m
[33m- 0027 !!! IGNORED !!![0m
[33m- 0028 !!! IGNORED !!![0m
[33m- 0029 !!! IGNORED !!![0m
[33m- 0030 !!! IGNORED !!![0m
[33m- 0031 !!! IGNORED !!![0m
[33m- 0032 !!! IGNORED !!![0m
[33m- 0033 !!! IGNORED !!![0m
[33m- 0034 !!! IGNORED !!![0m
[33m- 0035 !!! IGNORED !!![0m
[33m- 0036 !!! IGNORED !!![0m
[33m- 0037 !!! IGNORED !!![0m
[33m- 0038 !!! IGNORED !!![0m
[33m- 0039 !!! IGNORED !!![0m
[33m- 0040 !!! IGNORED !!![0m
[33m- 0041 !!! IGNORED !!![0m
[33m- 0042 !!! IGNORED !!![0m
[33m- 0043 !!! IGNORED !!![0m
[33m- 0044 !!! IGNORED !!![0m
[33m- 0045 !!! IGNORED !!![0m
[33m- 0046 !!! IGNORED !!![0m
[33m- 0047 !!! IGNORED !!![0m
[33m- 0048 !!! IGNORED !!![0m
[33m- 0049 !!! IGNORED !!![0m
[33m- 0050 !!! IGNORED !!![0m
[33m- 0051 !!! IGNORED !!![0m
[33m- 0052 !!! IGNORED !!![0m
[33m- 0053 !!! IGNORED !!![0m
[33m- 0054 !!! IGNORED !!![0m
[33m- 0055 !!! IGNORED !!![0m
[33m- 0056 !!! IGNORED !!![0m
[33m- 0057 !!! IGNORED !!![0m
[33m- 0058 !!! IGNORED !!![0m
[33m- 0059 !!! IGNORED !!![0m
[33m- 0060 !!! IGNORED !!![0m
[33m- 0061 !!! IGNORED !!![0m
[33m- 0063 !!! IGNORED !!![0m
[33m- 0064 !!! IGNORED !!![0m
[33m- 0065 !!! IGNORED !!![0m
[33m- 0066 !!! IGNORED !!![0m
[33m- 0067 !!! IGNORED !!![0m
[33m- 0068 !!! IGNORED !!![0m
[33m- 0069 !!! IGNORED !!![0m
[33m- 0070 !!! IGNORED !!![0m
[33m- 0071 !!! IGNORED !!![0m
[33m- 0072 !!! IGNORED !!![0m
[33m- 0073 !!! IGNORED !!![0m
[33m- 0074 !!! IGNORED !!![0m
[33m- 0075 !!! IGNORED !!![0m
[33m- 0076 !!! IGNORED !!![0m
[33m- 0077 !!! IGNORED !!![0m
[33m- 0078 !!! IGNORED !!![0m
[33m- 0079 !!! IGNORED !!![0m
[33m- 0080 !!! IGNORED !!![0m
[33m- 0081 !!! IGNORED !!![0m
[33m- 0082 !!! IGNORED !!![0m
[33m- 0083 !!! IGNORED !!![0m
[33m- 0084 !!! IGNORED !!![0m
[33m- 0085 !!! IGNORED !!![0m
[33m- 0086 !!! IGNORED !!![0m
[33m- 0087 !!! IGNORED !!![0m
[33m- 0088 !!! IGNORED !!![0m
[33m- 0089 !!! IGNORED !!![0m
[33m- 0090 !!! IGNORED !!![0m
[33m- 0091 !!! IGNORED !!![0m
[33m- 0092 !!! IGNORED !!![0m
[33m- 0093 !!! IGNORED !!![0m
[33m- 0094 !!! IGNORED !!![0m
[33m- 0095 !!! IGNORED !!![0m
[33m- 0096 !!! IGNORED !!![0m
[33m- 0097 !!! IGNORED !!![0m
[33m- 0098 !!! IGNORED !!![0m
[33m- 0099 !!! IGNORED !!![0m
[33m- 0100 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT ALL EMPNUM FROM WORKS WHERE HOURS = 12
[32m- 0101[0m
[33m- 0102 !!! IGNORED !!![0m
[33m- 0103 !!! IGNORED !!![0m
[33m- 0104 !!! IGNORED !!![0m
[33m- 0105 !!! IGNORED !!![0m
[33m- 0106 !!! IGNORED !!![0m
[33m- 0107 !!! IGNORED !!![0m
[33m- 0108 !!! IGNORED !!![0m
[33m- 0109 !!! IGNORED !!![0m
[33m- 0110 !!! IGNORED !!![0m
[33m- 0111 !!! IGNORED !!![0m
[33m- 0112 !!! IGNORED !!![0m
[33m- 0113 !!! IGNORED !!![0m
[33m- 0114 !!! IGNORED !!![0m
[33m- 0115 !!! IGNORED !!![0m
[33m- 0116 !!! IGNORED !!![0m
[33m- 0117 !!! IGNORED !!![0m
[33m- 0118 !!! IGNORED !!![0m
[33m- 0119 !!! IGNORED !!![0m
[33m- 0120 !!! IGNORED !!![0m
[33m- 0121 !!! IGNORED !!![0m
[33m- 0122 !!! IGNORED !!![0m
[33m- 0123 !!! IGNORED !!![0m
[33m- 0124 !!! IGNORED !!![0m
[33m- 0125 !!! IGNORED !!![0m
[33m- 0126 !!! IGNORED !!![0m
[33m- 0127 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT SUM(ALL HOURS) FROM WORKS
Calcite parsing passed, start to transform. SELECT SUM(ALL HOURS) FROM WORKS
Calcite parsing passed, start to transform. SELECT SUM(ALL HOURS) FROM WORKS
[31m- 0128 *** FAILED ***[0m
[31m  Results do not match for 0128:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project [SUM(DISTINCT 'HOURS) AS c0#313][0m
[31m   'UnresolvedRelation [WORKS], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: double[0m
[31m  Aggregate [SUM(DISTINCT HOURS#316) AS c0#313][0m
[31m   MetastoreRelation HU, works, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Aggregate [SUM(DISTINCT HOURS#316) AS c0#313][0m
[31m   Project [HOURS#316][0m
[31m    MetastoreRelation HU, works, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenAggregate(key=[], functions=[(sum(HOURS#316),mode=Complete,isDistinct=true)], output=[c0#313])[0m
[31m   TungstenAggregate(key=[HOURS#316], functions=[], output=[HOURS#316])[0m
[31m    TungstenExchange SinglePartition[0m
[31m     TungstenAggregate(key=[HOURS#316], functions=[], output=[HOURS#316])[0m
[31m      HiveTableScan [HOURS#316], (MetastoreRelation HU, works, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !384                     152.0 (HiveComparisonTest.scala:433)[0m
[33m- 0129 !!! IGNORED !!![0m
[33m- 0130 !!! IGNORED !!![0m
[33m- 0131 !!! IGNORED !!![0m
[33m- 0132 !!! IGNORED !!![0m
[33m- 0133 !!! IGNORED !!![0m
[33m- 0134 !!! IGNORED !!![0m
[33m- 0135 !!! IGNORED !!![0m
[33m- 0136 !!! IGNORED !!![0m
[33m- 0137 !!! IGNORED !!![0m
[33m- 0138 !!! IGNORED !!![0m
[33m- 0139 !!! IGNORED !!![0m
[33m- 0140 !!! IGNORED !!![0m
[33m- 0141 !!! IGNORED !!![0m
[33m- 0142 !!! IGNORED !!![0m
[33m- 0143 !!! IGNORED !!![0m
[33m- 0144 !!! IGNORED !!![0m
[33m- 0145 !!! IGNORED !!![0m
[33m- 0146 !!! IGNORED !!![0m
[33m- 0147 !!! IGNORED !!![0m
[33m- 0148 !!! IGNORED !!![0m
[33m- 0149 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT CITY FROM STAFF WHERE CITY LIKE 'XiS___S%%' ESCAPE 'S'
Calcite parsing passed, start to transform. SELECT CITY FROM STAFF WHERE CITY LIKE 'XiS___S%%' ESCAPE 'S'
Calcite parsing passed, start to transform. SELECT CITY FROM STAFF WHERE CITY LIKE 'XiS___S%%' ESCAPE 'S'
[31m- 0150 *** FAILED ***[0m
[31m  Results do not match for 0150:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project ['CITY][0m
[31m   'Filter 'CITY LIKE XiS___S%%[0m
[31m    'UnresolvedRelation [STAFF], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  CITY: string[0m
[31m  Project [CITY#721][0m
[31m   Filter CITY#721 LIKE XiS___S%%[0m
[31m    MetastoreRelation HU, staff, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Project [CITY#721][0m
[31m   Filter CITY#721 LIKE XiS___S%%[0m
[31m    MetastoreRelation HU, staff, None[0m
  
[31m  == Physical Plan ==[0m
[31m  Filter CITY#721 LIKE XiS___S%%[0m
[31m   HiveTableScan [CITY#721], (MetastoreRelation HU, staff, None)[0m
  
[31m  Code Generation: true[0m
[31m  CITY[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 0 row(s) ==[0m
[31m  !Xi_an% (HiveComparisonTest.scala:433)[0m
[33m- 0151 !!! IGNORED !!![0m
[33m- 0152 !!! IGNORED !!![0m
[33m- 0153 !!! IGNORED !!![0m
[33m- 0154 !!! IGNORED !!![0m
[33m- 0155 !!! IGNORED !!![0m
[33m- 0156 !!! IGNORED !!![0m
[33m- 0157 !!! IGNORED !!![0m
[33m- 0158 !!! IGNORED !!![0m
[33m- 0159 !!! IGNORED !!![0m
[33m- 0160 !!! IGNORED !!![0m
[33m- 0161 !!! IGNORED !!![0m
[33m- 0162 !!! IGNORED !!![0m
[33m- 0163 !!! IGNORED !!![0m
[33m- 0164 !!! IGNORED !!![0m
[33m- 0165 !!! IGNORED !!![0m
[33m- 0166 !!! IGNORED !!![0m
[33m- 0167 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT SUM(HOURS) FROM WORKS HAVING MIN(PNUM) > 'P0'
Calcite parsing passed, start to transform. SELECT SUM(HOURS) FROM WORKS HAVING MIN(PNUM) > 'P0'
Calcite parsing passed, start to transform. SELECT SUM(HOURS) FROM WORKS HAVING MIN(PNUM) > 'P0'
[31m- 0168 *** FAILED ***[0m
[31m  Results do not match for 0168:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Filter (min('PNUM) > P0)[0m
[31m   'Project [sum('HOURS) AS c0#2337][0m
[31m    'UnresolvedRelation [WORKS], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: double[0m
[31m  Project [c0#2337][0m
[31m   Filter havingCondition#2341[0m
[31m    Aggregate [(min(PNUM#2339) > P0) AS havingCondition#2341,sum(HOURS#2340) AS c0#2337][0m
[31m     MetastoreRelation HU, works, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Project [c0#2337][0m
[31m   Filter havingCondition#2341[0m
[31m    Aggregate [(min(PNUM#2339) > P0) AS havingCondition#2341,sum(HOURS#2340) AS c0#2337][0m
[31m     Project [PNUM#2339,HOURS#2340][0m
[31m      MetastoreRelation HU, works, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenProject [c0#2337][0m
[31m   Filter havingCondition#2341[0m
[31m    SortBasedAggregate(key=[], functions=[(min(PNUM#2339),mode=Final,isDistinct=false),(sum(HOURS#2340),mode=Final,isDistinct=false)], output=[havingCondition#2341,c0#2337])[0m
[31m     ConvertToSafe[0m
[31m      TungstenExchange SinglePartition[0m
[31m       ConvertToUnsafe[0m
[31m        SortBasedAggregate(key=[], functions=[(min(PNUM#2339),mode=Partial,isDistinct=false),(sum(HOURS#2340),mode=Partial,isDistinct=false)], output=[min#2345,currentSum#2347])[0m
[31m         HiveTableScan [PNUM#2339,HOURS#2340], (MetastoreRelation HU, works, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !384                     384.0 (HiveComparisonTest.scala:433)[0m
[33m- 0169 !!! IGNORED !!![0m
[33m- 0170 !!! IGNORED !!![0m
[33m- 0171 !!! IGNORED !!![0m
[33m- 0172 !!! IGNORED !!![0m
[33m- 0173 !!! IGNORED !!![0m
[33m- 0174 !!! IGNORED !!![0m
[33m- 0175 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT EMPNUM,EMPNAME,GRADE,STAFF.CITY, PNAME, PROJ.CITY FROM STAFF, PROJ WHERE STAFF.CITY = PROJ.CITY
[32m- 0176[0m
Calcite parsing passed, start to transform. SELECT EMPNUM,EMPNAME,GRADE,STAFF.CITY,PNUM,PNAME, PTYPE,BUDGET,PROJ.CITY FROM STAFF, PROJ WHERE STAFF.CITY = PROJ.CITY AND GRADE <> 12
[32m- 0177[0m
Calcite parsing passed, start to transform. SELECT DISTINCT STAFF.CITY, PROJ.CITY FROM STAFF, WORKS, PROJ WHERE STAFF.EMPNUM = WORKS.EMPNUM AND WORKS.PNUM = PROJ.PNUM
[32m- 0178[0m
Calcite parsing passed, start to transform. SELECT FIRST1.EMPNUM, SECOND2.EMPNUM FROM STAFF FIRST1, STAFF SECOND2 WHERE FIRST1.CITY = SECOND2.CITY AND FIRST1.EMPNUM < SECOND2.EMPNUM
[32m- 0179[0m
[33m- 0180 !!! IGNORED !!![0m
[33m- 0181 !!! IGNORED !!![0m
[33m- 0182 !!! IGNORED !!![0m
[33m- 0183 !!! IGNORED !!![0m
[33m- 0184 !!! IGNORED !!![0m
[33m- 0185 !!! IGNORED !!![0m
[33m- 0186 !!! IGNORED !!![0m
[33m- 0187 !!! IGNORED !!![0m
[33m- 0188 !!! IGNORED !!![0m
[33m- 0189 !!! IGNORED !!![0m
[33m- 0190 !!! IGNORED !!![0m
[33m- 0191 !!! IGNORED !!![0m
[33m- 0192 !!! IGNORED !!![0m
[33m- 0193 !!! IGNORED !!![0m
[33m- 0194 !!! IGNORED !!![0m
[33m- 0195 !!! IGNORED !!![0m
[33m- 0196 !!! IGNORED !!![0m
[33m- 0197 !!! IGNORED !!![0m
[33m- 0198 !!! IGNORED !!![0m
[33m- 0199 !!! IGNORED !!![0m
[33m- 0200 !!! IGNORED !!![0m
[33m- 0201 !!! IGNORED !!![0m
[33m- 0202 !!! IGNORED !!![0m
[33m- 0203 !!! IGNORED !!![0m
[33m- 0204 !!! IGNORED !!![0m
[33m- 0205 !!! IGNORED !!![0m
[33m- 0206 !!! IGNORED !!![0m
[33m- 0208 !!! IGNORED !!![0m
[33m- 0209 !!! IGNORED !!![0m
[33m- 0210 !!! IGNORED !!![0m
[33m- 0211 !!! IGNORED !!![0m
[33m- 0212 !!! IGNORED !!![0m
[33m- 0213 !!! IGNORED !!![0m
[33m- 0214 !!! IGNORED !!![0m
[33m- 0215 !!! IGNORED !!![0m
[33m- 0216 !!! IGNORED !!![0m
[33m- 0217 !!! IGNORED !!![0m
[33m- 0218 !!! IGNORED !!![0m
[33m- 0219 !!! IGNORED !!![0m
[33m- 0220 !!! IGNORED !!![0m
[33m- 0221 !!! IGNORED !!![0m
[33m- 0222 !!! IGNORED !!![0m
[33m- 0223 !!! IGNORED !!![0m
[33m- 0224 !!! IGNORED !!![0m
[33m- 0225 !!! IGNORED !!![0m
[33m- 0226 !!! IGNORED !!![0m
[33m- 0227 !!! IGNORED !!![0m
[33m- 0228 !!! IGNORED !!![0m
[33m- 0229 !!! IGNORED !!![0m
[33m- 0230 !!! IGNORED !!![0m
[33m- 0231 !!! IGNORED !!![0m
[33m- 0232 !!! IGNORED !!![0m
[33m- 0233 !!! IGNORED !!![0m
[33m- 0234 !!! IGNORED !!![0m
[33m- 0235 !!! IGNORED !!![0m
[33m- 0236 !!! IGNORED !!![0m
[33m- 0237 !!! IGNORED !!![0m
[33m- 0238 !!! IGNORED !!![0m
[33m- 0239 !!! IGNORED !!![0m
[33m- 0240 !!! IGNORED !!![0m
[33m- 0241 !!! IGNORED !!![0m
[33m- 0242 !!! IGNORED !!![0m
[33m- 0243 !!! IGNORED !!![0m
[33m- 0244 !!! IGNORED !!![0m
[33m- 0245 !!! IGNORED !!![0m
[33m- 0246 !!! IGNORED !!![0m
[33m- 0247 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT GRADE, HOURS, BUDGET FROM STAFF, WORKS, PROJ
Calcite parsing passed, start to transform. SELECT GRADE, HOURS, BUDGET FROM STAFF, WORKS, PROJ
Calcite parsing passed, start to transform. SELECT GRADE, HOURS, BUDGET FROM STAFF, WORKS, PROJ
[31m- 0248 *** FAILED ***[0m
[31m  Results do not match for 0248:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project ['GRADE,'HOURS,'BUDGET][0m
[31m   'Join Inner, None[0m
[31m    'Join Inner, None[0m
[31m     'UnresolvedRelation [STAFF], None[0m
[31m     'UnresolvedRelation [WORKS], None[0m
[31m    'UnresolvedRelation [PROJ], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  GRADE: double, HOURS: double, BUDGET: double[0m
[31m  Project [GRADE#5285,HOURS#5289,BUDGET#5293][0m
[31m   Join Inner, None[0m
[31m    Join Inner, None[0m
[31m     MetastoreRelation HU, staff, None[0m
[31m     MetastoreRelation HU, works, None[0m
[31m    MetastoreRelation HU, proj, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Project [GRADE#5285,HOURS#5289,BUDGET#5293][0m
[31m   Join Inner, None[0m
[31m    Project [GRADE#5285,HOURS#5289][0m
[31m     Join Inner, None[0m
[31m      Project [GRADE#5285][0m
[31m       MetastoreRelation HU, staff, None[0m
[31m      Project [HOURS#5289][0m
[31m       MetastoreRelation HU, works, None[0m
[31m    Project [BUDGET#5293][0m
[31m     MetastoreRelation HU, proj, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenProject [GRADE#5285,HOURS#5289,BUDGET#5293][0m
[31m   CartesianProduct[0m
[31m    ConvertToSafe[0m
[31m     TungstenProject [GRADE#5285,HOURS#5289][0m
[31m      CartesianProduct[0m
[31m       HiveTableScan [GRADE#5285], (MetastoreRelation HU, staff, None)[0m
[31m       HiveTableScan [HOURS#5289], (MetastoreRelation HU, works, None)[0m
[31m    HiveTableScan [BUDGET#5293], (MetastoreRelation HU, proj, None)[0m
  
[31m  Code Generation: true[0m
[31m  GRADE	HOURS	BUDGET[0m
[31m  !== HIVE - 192 row(s) ==   == CATALYST - 192 row(s) ==[0m
[31m  !15	100	10000              15.0	100.0	10000.0[0m
[31m  !15	100	10000              15.0	100.0	10000.0[0m
[31m  !15	100	20000              15.0	100.0	20000.0[0m
[31m  !15	100	30000              15.0	100.0	30000.0[0m
[31m  !15	100	30000              15.0	100.0	30000.0[0m
[31m  !15	100	50000              15.0	100.0	50000.0[0m
[31m  !15	12	10000               15.0	12.0	10000.0[0m
[31m  !15	12	10000               15.0	12.0	10000.0[0m
[31m  !15	12	10000               15.0	12.0	10000.0[0m
[31m  !15	12	10000               15.0	12.0	10000.0[0m
[31m  !15	12	20000               15.0	12.0	20000.0[0m
[31m  !15	12	20000               15.0	12.0	20000.0[0m
[31m  !15	12	30000               15.0	12.0	30000.0[0m
[31m  !15	12	30000               15.0	12.0	30000.0[0m
[31m  !15	12	30000               15.0	12.0	30000.0[0m
[31m  !15	12	30000               15.0	12.0	30000.0[0m
[31m  !15	12	50000               15.0	12.0	50000.0[0m
[31m  !15	12	50000               15.0	12.0	50000.0[0m
[31m  !15	20	10000               15.0	20.0	10000.0[0m
[31m  !15	20	10000               15.0	20.0	10000.0[0m
[31m  !15	20	10000               15.0	20.0	10000.0[0m
[31m  !15	20	10000               15.0	20.0	10000.0[0m
[31m  !15	20	10000               15.0	20.0	10000.0[0m
[31m  !15	20	10000               15.0	20.0	10000.0[0m
[31m  !15	20	10000               15.0	20.0	10000.0[0m
[31m  !15	20	10000               15.0	20.0	10000.0[0m
[31m  !15	20	20000               15.0	20.0	20000.0[0m
[31m  !15	20	20000               15.0	20.0	20000.0[0m
[31m  !15	20	20000               15.0	20.0	20000.0[0m
[31m  !15	20	20000               15.0	20.0	20000.0[0m
[31m  !15	20	30000               15.0	20.0	30000.0[0m
[31m  !15	20	30000               15.0	20.0	30000.0[0m
[31m  !15	20	30000               15.0	20.0	30000.0[0m
[31m  !15	20	30000               15.0	20.0	30000.0[0m
[31m  !15	20	30000               15.0	20.0	30000.0[0m
[31m  !15	20	30000               15.0	20.0	30000.0[0m
[31m  !15	20	30000               15.0	20.0	30000.0[0m
[31m  !15	20	30000               15.0	20.0	30000.0[0m
[31m  !15	20	50000               15.0	20.0	50000.0[0m
[31m  !15	20	50000               15.0	20.0	50000.0[0m
[31m  !15	20	50000               15.0	20.0	50000.0[0m
[31m  !15	20	50000               15.0	20.0	50000.0[0m
[31m  !15	40	10000               15.0	40.0	10000.0[0m
[31m  !15	40	10000               15.0	40.0	10000.0[0m
[31m  !15	40	10000               15.0	40.0	10000.0[0m
[31m  !15	40	10000               15.0	40.0	10000.0[0m
[31m  !15	40	10000               15.0	40.0	10000.0[0m
[31m  !15	40	10000               15.0	40.0	10000.0[0m
[31m  !15	40	20000               15.0	40.0	20000.0[0m
[31m  !15	40	20000               15.0	40.0	20000.0[0m
[31m  !15	40	20000               15.0	40.0	20000.0[0m
[31m  !15	40	30000               15.0	40.0	30000.0[0m
[31m  !15	40	30000               15.0	40.0	30000.0[0m
[31m  !15	40	30000               15.0	40.0	30000.0[0m
[31m  !15	40	30000               15.0	40.0	30000.0[0m
[31m  !15	40	30000               15.0	40.0	30000.0[0m
[31m  !15	40	30000               15.0	40.0	30000.0[0m
[31m  !15	40	50000               15.0	40.0	50000.0[0m
[31m  !15	40	50000               15.0	40.0	50000.0[0m
[31m  !15	40	50000               15.0	40.0	50000.0[0m
[31m  !15	80	10000               15.0	80.0	10000.0[0m
[31m  !15	80	10000               15.0	80.0	10000.0[0m
[31m  !15	80	10000               15.0	80.0	10000.0[0m
[31m  !15	80	10000               15.0	80.0	10000.0[0m
[31m  !15	80	20000               15.0	80.0	20000.0[0m
[31m  !15	80	20000               15.0	80.0	20000.0[0m
[31m  !15	80	30000               15.0	80.0	30000.0[0m
[31m  !15	80	30000               15.0	80.0	30000.0[0m
[31m  !15	80	30000               15.0	80.0	30000.0[0m
[31m  !15	80	30000               15.0	80.0	30000.0[0m
[31m  !15	80	50000               15.0	80.0	50000.0[0m
[31m  !15	80	50000               15.0	80.0	50000.0[0m
[31m  !15	NULL	10000             15.0	NULL	10000.0[0m
[31m  !15	NULL	10000             15.0	NULL	10000.0[0m
[31m  !15	NULL	10000             15.0	NULL	10000.0[0m
[31m  !15	NULL	10000             15.0	NULL	10000.0[0m
[31m  !15	NULL	10000             15.0	NULL	10000.0[0m
[31m  !15	NULL	10000             15.0	NULL	10000.0[0m
[31m  !15	NULL	10000             15.0	NULL	10000.0[0m
[31m  !15	NULL	10000             15.0	NULL	10000.0[0m
[31m  !15	NULL	20000             15.0	NULL	20000.0[0m
[31m  !15	NULL	20000             15.0	NULL	20000.0[0m
[31m  !15	NULL	20000             15.0	NULL	20000.0[0m
[31m  !15	NULL	20000             15.0	NULL	20000.0[0m
[31m  !15	NULL	30000             15.0	NULL	30000.0[0m
[31m  !15	NULL	30000             15.0	NULL	30000.0[0m
[31m  !15	NULL	30000             15.0	NULL	30000.0[0m
[31m  !15	NULL	30000             15.0	NULL	30000.0[0m
[31m  !15	NULL	30000             15.0	NULL	30000.0[0m
[31m  !15	NULL	30000             15.0	NULL	30000.0[0m
[31m  !15	NULL	30000             15.0	NULL	30000.0[0m
[31m  !15	NULL	30000             15.0	NULL	30000.0[0m
[31m  !15	NULL	50000             15.0	NULL	50000.0[0m
[31m  !15	NULL	50000             15.0	NULL	50000.0[0m
[31m  !15	NULL	50000             15.0	NULL	50000.0[0m
[31m  !15	NULL	50000             15.0	NULL	50000.0[0m
[31m  !36	100	10000              36.0	100.0	10000.0[0m
[31m  !36	100	10000              36.0	100.0	10000.0[0m
[31m  !36	100	20000              36.0	100.0	20000.0[0m
[31m  !36	100	30000              36.0	100.0	30000.0[0m
[31m  !36	100	30000              36.0	100.0	30000.0[0m
[31m  !36	100	50000              36.0	100.0	50000.0[0m
[31m  !36	12	10000               36.0	12.0	10000.0[0m
[31m  !36	12	10000               36.0	12.0	10000.0[0m
[31m  !36	12	10000               36.0	12.0	10000.0[0m
[31m  !36	12	10000               36.0	12.0	10000.0[0m
[31m  !36	12	20000               36.0	12.0	20000.0[0m
[31m  !36	12	20000               36.0	12.0	20000.0[0m
[31m  !36	12	30000               36.0	12.0	30000.0[0m
[31m  !36	12	30000               36.0	12.0	30000.0[0m
[31m  !36	12	30000               36.0	12.0	30000.0[0m
[31m  !36	12	30000               36.0	12.0	30000.0[0m
[31m  !36	12	50000               36.0	12.0	50000.0[0m
[31m  !36	12	50000               36.0	12.0	50000.0[0m
[31m  !36	20	10000               36.0	20.0	10000.0[0m
[31m  !36	20	10000               36.0	20.0	10000.0[0m
[31m  !36	20	10000               36.0	20.0	10000.0[0m
[31m  !36	20	10000               36.0	20.0	10000.0[0m
[31m  !36	20	10000               36.0	20.0	10000.0[0m
[31m  !36	20	10000               36.0	20.0	10000.0[0m
[31m  !36	20	10000               36.0	20.0	10000.0[0m
[31m  !36	20	10000               36.0	20.0	10000.0[0m
[31m  !36	20	20000               36.0	20.0	20000.0[0m
[31m  !36	20	20000               36.0	20.0	20000.0[0m
[31m  !36	20	20000               36.0	20.0	20000.0[0m
[31m  !36	20	20000               36.0	20.0	20000.0[0m
[31m  !36	20	30000               36.0	20.0	30000.0[0m
[31m  !36	20	30000               36.0	20.0	30000.0[0m
[31m  !36	20	30000               36.0	20.0	30000.0[0m
[31m  !36	20	30000               36.0	20.0	30000.0[0m
[31m  !36	20	30000               36.0	20.0	30000.0[0m
[31m  !36	20	30000               36.0	20.0	30000.0[0m
[31m  !36	20	30000               36.0	20.0	30000.0[0m
[31m  !36	20	30000               36.0	20.0	30000.0[0m
[31m  !36	20	50000               36.0	20.0	50000.0[0m
[31m  !36	20	50000               36.0	20.0	50000.0[0m
[31m  !36	20	50000               36.0	20.0	50000.0[0m
[31m  !36	20	50000               36.0	20.0	50000.0[0m
[31m  !36	40	10000               36.0	40.0	10000.0[0m
[31m  !36	40	10000               36.0	40.0	10000.0[0m
[31m  !36	40	10000               36.0	40.0	10000.0[0m
[31m  !36	40	10000               36.0	40.0	10000.0[0m
[31m  !36	40	10000               36.0	40.0	10000.0[0m
[31m  !36	40	10000               36.0	40.0	10000.0[0m
[31m  !36	40	20000               36.0	40.0	20000.0[0m
[31m  !36	40	20000               36.0	40.0	20000.0[0m
[31m  !36	40	20000               36.0	40.0	20000.0[0m
[31m  !36	40	30000               36.0	40.0	30000.0[0m
[31m  !36	40	30000               36.0	40.0	30000.0[0m
[31m  !36	40	30000               36.0	40.0	30000.0[0m
[31m  !36	40	30000               36.0	40.0	30000.0[0m
[31m  !36	40	30000               36.0	40.0	30000.0[0m
[31m  !36	40	30000               36.0	40.0	30000.0[0m
[31m  !36	40	50000               36.0	40.0	50000.0[0m
[31m  !36	40	50000               36.0	40.0	50000.0[0m
[31m  !36	40	50000               36.0	40.0	50000.0[0m
[31m  !36	80	10000               36.0	80.0	10000.0[0m
[31m  !36	80	10000               36.0	80.0	10000.0[0m
[31m  !36	80	10000               36.0	80.0	10000.0[0m
[31m  !36	80	10000               36.0	80.0	10000.0[0m
[31m  !36	80	20000               36.0	80.0	20000.0[0m
[31m  !36	80	20000               36.0	80.0	20000.0[0m
[31m  !36	80	30000               36.0	80.0	30000.0[0m
[31m  !36	80	30000               36.0	80.0	30000.0[0m
[31m  !36	80	30000               36.0	80.0	30000.0[0m
[31m  !36	80	30000               36.0	80.0	30000.0[0m
[31m  !36	80	50000               36.0	80.0	50000.0[0m
[31m  !36	80	50000               36.0	80.0	50000.0[0m
[31m  !36	NULL	10000             36.0	NULL	10000.0[0m
[31m  !36	NULL	10000             36.0	NULL	10000.0[0m
[31m  !36	NULL	10000             36.0	NULL	10000.0[0m
[31m  !36	NULL	10000             36.0	NULL	10000.0[0m
[31m  !36	NULL	10000             36.0	NULL	10000.0[0m
[31m  !36	NULL	10000             36.0	NULL	10000.0[0m
[31m  !36	NULL	10000             36.0	NULL	10000.0[0m
[31m  !36	NULL	10000             36.0	NULL	10000.0[0m
[31m  !36	NULL	20000             36.0	NULL	20000.0[0m
[31m  !36	NULL	20000             36.0	NULL	20000.0[0m
[31m  !36	NULL	20000             36.0	NULL	20000.0[0m
[31m  !36	NULL	20000             36.0	NULL	20000.0[0m
[31m  !36	NULL	30000             36.0	NULL	30000.0[0m
[31m  !36	NULL	30000             36.0	NULL	30000.0[0m
[31m  !36	NULL	30000             36.0	NULL	30000.0[0m
[31m  !36	NULL	30000             36.0	NULL	30000.0[0m
[31m  !36	NULL	30000             36.0	NULL	30000.0[0m
[31m  !36	NULL	30000             36.0	NULL	30000.0[0m
[31m  !36	NULL	30000             36.0	NULL	30000.0[0m
[31m  !36	NULL	30000             36.0	NULL	30000.0[0m
[31m  !36	NULL	50000             36.0	NULL	50000.0[0m
[31m  !36	NULL	50000             36.0	NULL	50000.0[0m
[31m  !36	NULL	50000             36.0	NULL	50000.0[0m
[31m  !36	NULL	50000             36.0	NULL	50000.0 (HiveComparisonTest.scala:433)[0m
[33m- 0249 !!! IGNORED !!![0m
[33m- 0250 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COL1, EMPNUM, GRADE FROM CUGINI.VTABLE, STAFF WHERE COL1 < 200 AND GRADE > 12
Calcite parsing passed, start to transform. SELECT COL1, EMPNUM, GRADE FROM CUGINI.VTABLE, STAFF WHERE COL1 < 200 AND GRADE > 12
Calcite parsing passed, start to transform. SELECT COL1, EMPNUM, GRADE FROM CUGINI.VTABLE, STAFF WHERE COL1 < 200 AND GRADE > 12
[31m- 0251 *** FAILED ***[0m
[31m  Results do not match for 0251:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project ['COL1,'EMPNUM,'GRADE][0m
[31m   'Filter (('COL1 < 200) && ('GRADE > 12))[0m
[31m    'Join Inner, None[0m
[31m     'UnresolvedRelation [CUGINI,VTABLE], None[0m
[31m     'UnresolvedRelation [STAFF], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  COL1: double, EMPNUM: string, GRADE: double[0m
[31m  Project [COL1#5939,EMPNUM#5944,GRADE#5946][0m
[31m   Filter ((COL1#5939 < cast(200 as double)) && (GRADE#5946 > cast(12 as double)))[0m
[31m    Join Inner, None[0m
[31m     MetastoreRelation cugini, vtable, None[0m
[31m     MetastoreRelation HU, staff, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Project [COL1#5939,EMPNUM#5944,GRADE#5946][0m
[31m   Join Inner, None[0m
[31m    Project [COL1#5939][0m
[31m     Filter (COL1#5939 < 200.0)[0m
[31m      MetastoreRelation cugini, vtable, None[0m
[31m    Project [EMPNUM#5944,GRADE#5946][0m
[31m     Filter (GRADE#5946 > 12.0)[0m
[31m      MetastoreRelation HU, staff, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenProject [COL1#5939,EMPNUM#5944,GRADE#5946][0m
[31m   CartesianProduct[0m
[31m    Filter (COL1#5939 < 200.0)[0m
[31m     HiveTableScan [COL1#5939], (MetastoreRelation cugini, vtable, None)[0m
[31m    Filter (GRADE#5946 > 12.0)[0m
[31m     HiveTableScan [EMPNUM#5944,GRADE#5946], (MetastoreRelation HU, staff, None)[0m
  
[31m  Code Generation: true[0m
[31m  COL1	EMPNUM	GRADE[0m
[31m  !== HIVE - 12 row(s) ==   == CATALYST - 12 row(s) ==[0m
[31m  !0	E36	36                 0.0	E36	36.0[0m
[31m  !0	E36	36                 0.0	E36	36.0[0m
[31m  !0	E7	26                  0.0	E7	26.0[0m
[31m  !0	E7	26                  0.0	E7	26.0[0m
[31m  !0	E8	15                  0.0	E8	15.0[0m
[31m  !0	E8	15                  0.0	E8	15.0[0m
[31m  !10	E36	36                10.0	E36	36.0[0m
[31m  !10	E7	26                 10.0	E7	26.0[0m
[31m  !10	E8	15                 10.0	E8	15.0[0m
[31m  !100	E36	36               100.0	E36	36.0[0m
[31m  !100	E7	26                100.0	E7	26.0[0m
[31m  !100	E8	15                100.0	E8	15.0 (HiveComparisonTest.scala:433)[0m
[33m- 0252 !!! IGNORED !!![0m
[33m- 0253 !!! IGNORED !!![0m
[33m- 0254 !!! IGNORED !!![0m
[33m- 0255 !!! IGNORED !!![0m
[33m- 0256 !!! IGNORED !!![0m
[33m- 0257 !!! IGNORED !!![0m
[33m- 0258 !!! IGNORED !!![0m
[33m- 0259 !!! IGNORED !!![0m
[33m- 0260 !!! IGNORED !!![0m
[33m- 0261 !!! IGNORED !!![0m
[33m- 0262 !!! IGNORED !!![0m
[33m- 0263 !!! IGNORED !!![0m
[33m- 0264 !!! IGNORED !!![0m
[33m- 0265 !!! IGNORED !!![0m
[33m- 0266 !!! IGNORED !!![0m
[33m- 0267 !!! IGNORED !!![0m
[33m- 0268 !!! IGNORED !!![0m
[33m- 0270 !!! IGNORED !!![0m
[33m- 0271 !!! IGNORED !!![0m
[33m- 0272 !!! IGNORED !!![0m
[33m- 0273 !!! IGNORED !!![0m
[33m- 0274 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT SUM(COL1) FROM VTABLE WHERE 10 + COL1 > COL2 HAVING MAX(COL1) > 100
Calcite parsing passed, start to transform. SELECT SUM(COL1) FROM VTABLE WHERE 10 + COL1 > COL2 HAVING MAX(COL1) > 100
Calcite parsing passed, start to transform. SELECT SUM(COL1) FROM VTABLE WHERE 10 + COL1 > COL2 HAVING MAX(COL1) > 100
[31m- 0275 *** FAILED ***[0m
[31m  Results do not match for 0275:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Filter (max('COL1) > 100)[0m
[31m   'Project [sum('COL1) AS c0#7645][0m
[31m    'Filter ((10 + 'COL1) > 'COL2)[0m
[31m     'UnresolvedRelation [VTABLE], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: double[0m
[31m  Project [c0#7645][0m
[31m   Filter havingCondition#7651[0m
[31m    Aggregate [(max(COL1#7646) > cast(100 as double)) AS havingCondition#7651,sum(COL1#7646) AS c0#7645][0m
[31m     Filter ((cast(10 as double) + COL1#7646) > COL2#7647)[0m
[31m      MetastoreRelation HU, vtable, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Project [c0#7645][0m
[31m   Filter havingCondition#7651[0m
[31m    Aggregate [(max(COL1#7646) > 100.0) AS havingCondition#7651,sum(COL1#7646) AS c0#7645][0m
[31m     Project [COL1#7646][0m
[31m      Filter ((10.0 + COL1#7646) > COL2#7647)[0m
[31m       MetastoreRelation HU, vtable, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenProject [c0#7645][0m
[31m   Filter havingCondition#7651[0m
[31m    TungstenAggregate(key=[], functions=[(max(COL1#7646),mode=Final,isDistinct=false),(sum(COL1#7646),mode=Final,isDistinct=false)], output=[havingCondition#7651,c0#7645])[0m
[31m     TungstenExchange SinglePartition[0m
[31m      TungstenAggregate(key=[], functions=[(max(COL1#7646),mode=Partial,isDistinct=false),(sum(COL1#7646),mode=Partial,isDistinct=false)], output=[max#7655,currentSum#7657])[0m
[31m       Project [COL1#7646][0m
[31m        Filter ((10.0 + COL1#7646) > COL2#7647)[0m
[31m         HiveTableScan [COL1#7646,COL2#7647], (MetastoreRelation HU, vtable, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !1040                    1040.0 (HiveComparisonTest.scala:433)[0m
Calcite parsing passed, start to transform. SELECT SUM(COL1) FROM VTABLE WHERE 1000 + COL1 >= COL2 HAVING MAX(COL1) > 100
Calcite parsing passed, start to transform. SELECT SUM(COL1) FROM VTABLE WHERE 1000 + COL1 >= COL2 HAVING MAX(COL1) > 100
Calcite parsing passed, start to transform. SELECT SUM(COL1) FROM VTABLE WHERE 1000 + COL1 >= COL2 HAVING MAX(COL1) > 100
[31m- 0276 *** FAILED ***[0m
[31m  Results do not match for 0276:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Filter (max('COL1) > 100)[0m
[31m   'Project [sum('COL1) AS c0#10625][0m
[31m    'Filter ((1000 + 'COL1) >= 'COL2)[0m
[31m     'UnresolvedRelation [VTABLE], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: double[0m
[31m  Project [c0#10625][0m
[31m   Filter havingCondition#10631[0m
[31m    Aggregate [(max(COL1#10626) > cast(100 as double)) AS havingCondition#10631,sum(COL1#10626) AS c0#10625][0m
[31m     Filter ((cast(1000 as double) + COL1#10626) >= COL2#10627)[0m
[31m      MetastoreRelation HU, vtable, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Project [c0#10625][0m
[31m   Filter havingCondition#10631[0m
[31m    Aggregate [(max(COL1#10626) > 100.0) AS havingCondition#10631,sum(COL1#10626) AS c0#10625][0m
[31m     Project [COL1#10626][0m
[31m      Filter ((1000.0 + COL1#10626) >= COL2#10627)[0m
[31m       MetastoreRelation HU, vtable, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenProject [c0#10625][0m
[31m   Filter havingCondition#10631[0m
[31m    TungstenAggregate(key=[], functions=[(max(COL1#10626),mode=Final,isDistinct=false),(sum(COL1#10626),mode=Final,isDistinct=false)], output=[havingCondition#10631,c0#10625])[0m
[31m     TungstenExchange SinglePartition[0m
[31m      TungstenAggregate(key=[], functions=[(max(COL1#10626),mode=Partial,isDistinct=false),(sum(COL1#10626),mode=Partial,isDistinct=false)], output=[max#10635,currentSum#10637])[0m
[31m       Project [COL1#10626][0m
[31m        Filter ((1000.0 + COL1#10626) >= COL2#10627)[0m
[31m         HiveTableScan [COL1#10626,COL2#10627], (MetastoreRelation HU, vtable, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !1550                    1550.0 (HiveComparisonTest.scala:433)[0m
[33m- 0277 !!! IGNORED !!![0m
[33m- 0278 !!! IGNORED !!![0m
[33m- 0279 !!! IGNORED !!![0m
[33m- 0280 !!! IGNORED !!![0m
[33m- 0281 !!! IGNORED !!![0m
[33m- 0282 !!! IGNORED !!![0m
[33m- 0283 !!! IGNORED !!![0m
[33m- 0284 !!! IGNORED !!![0m
[33m- 0285 !!! IGNORED !!![0m
[33m- 0286 !!! IGNORED !!![0m
[33m- 0287 !!! IGNORED !!![0m
[33m- 0288 !!! IGNORED !!![0m
[33m- 0289 !!! IGNORED !!![0m
[33m- 0290 !!! IGNORED !!![0m
[33m- 0291 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM WORKS,STAFF WHERE WORKS.EMPNUM = 'E1'
[32m- 0292[0m
[33m- 0293 !!! IGNORED !!![0m
[33m- 0294 !!! IGNORED !!![0m
[33m- 0295 !!! IGNORED !!![0m
[33m- 0297 !!! IGNORED !!![0m
[33m- 0298 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM STAFF1,WORKS1,PROJ1 WHERE STAFF1.EMPNUM = 'E9' AND STAFF1.EMPNUM = WORKS1.EMPNUM AND PROJ1.PNUM = WORKS1.PNUM
[32m- 0299[0m
[33m- 0300 !!! IGNORED !!![0m
[33m- 0301 !!! IGNORED !!![0m
[33m- 0302 !!! IGNORED !!![0m
[33m- 0303 !!! IGNORED !!![0m
[33m- 0304 !!! IGNORED !!![0m
[33m- 0305 !!! IGNORED !!![0m
[33m- 0306 !!! IGNORED !!![0m
[33m- 0307 !!! IGNORED !!![0m
[33m- 0308 !!! IGNORED !!![0m
[33m- 0309 !!! IGNORED !!![0m
[33m- 0310 !!! IGNORED !!![0m
[33m- 0311 !!! IGNORED !!![0m
[33m- 0312 !!! IGNORED !!![0m
[33m- 0313 !!! IGNORED !!![0m
[33m- 0314 !!! IGNORED !!![0m
[33m- 0315 !!! IGNORED !!![0m
[33m- 0316 !!! IGNORED !!![0m
[33m- 0317 !!! IGNORED !!![0m
[33m- 0318 !!! IGNORED !!![0m
[33m- 0319 !!! IGNORED !!![0m
[33m- 0320 !!! IGNORED !!![0m
[33m- 0321 !!! IGNORED !!![0m
[33m- 0322 !!! IGNORED !!![0m
[33m- 0323 !!! IGNORED !!![0m
[33m- 0324 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT SUM(HOURS), MAX(HOURS) FROM  STAFF, WORKS
Calcite parsing passed, start to transform. SELECT SUM(HOURS), MAX(HOURS) FROM  STAFF, WORKS
Calcite parsing passed, start to transform. SELECT SUM(HOURS), MAX(HOURS) FROM  STAFF, WORKS
[31m- 0325 *** FAILED ***[0m
[31m  Results do not match for 0325:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project [sum('HOURS) AS c0#12950,max('HOURS) AS c1#12951][0m
[31m   'Join Inner, None[0m
[31m    'UnresolvedRelation [STAFF], None[0m
[31m    'UnresolvedRelation [WORKS], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: double, c1: double[0m
[31m  Aggregate [sum(HOURS#12958) AS c0#12950,max(HOURS#12958) AS c1#12951][0m
[31m   Join Inner, None[0m
[31m    MetastoreRelation HU, staff, None[0m
[31m    MetastoreRelation HU, works, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Aggregate [sum(HOURS#12958) AS c0#12950,max(HOURS#12958) AS c1#12951][0m
[31m   Project [HOURS#12958][0m
[31m    Join Inner, None[0m
[31m     Project[0m
[31m      MetastoreRelation HU, staff, None[0m
[31m     Project [HOURS#12958][0m
[31m      MetastoreRelation HU, works, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenAggregate(key=[], functions=[(sum(HOURS#12958),mode=Final,isDistinct=false),(max(HOURS#12958),mode=Final,isDistinct=false)], output=[c0#12950,c1#12951])[0m
[31m   TungstenExchange SinglePartition[0m
[31m    TungstenAggregate(key=[], functions=[(sum(HOURS#12958),mode=Partial,isDistinct=false),(max(HOURS#12958),mode=Partial,isDistinct=false)], output=[currentSum#12962,max#12964])[0m
[31m     TungstenProject [HOURS#12958][0m
[31m      CartesianProduct[0m
[31m       HiveTableScan (MetastoreRelation HU, staff, None)[0m
[31m       HiveTableScan [HOURS#12958], (MetastoreRelation HU, works, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0	c1[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !50	10                   50.0	10.0 (HiveComparisonTest.scala:433)[0m
Calcite parsing passed, start to transform. SELECT AVG(HOURS), MIN(HOURS) FROM  STAFF, WORKS WHERE STAFF.EMPNUM = 'E2' AND STAFF.EMPNUM = WORKS.EMPNUM
[32m- 0326[0m
[33m- 0327 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT STAFF.EMPNUM, AVG(HOURS), MIN(HOURS) FROM  STAFF, WORKS WHERE STAFF.EMPNUM IN ('E1','E4','E3') AND STAFF.EMPNUM = WORKS.EMPNUM GROUP BY STAFF.EMPNUM HAVING COUNT(*) > 1 ORDER BY STAFF.EMPNUM
[32m- 0328[0m
Calcite parsing passed, start to transform. SELECT MAX(STAFF1.GRADE), SUM(STAFF1.GRADE) FROM STAFF1, STAFF GROUP BY STAFF1.CITY, STAFF.CITY
Calcite parsing passed, start to transform. SELECT MAX(STAFF1.GRADE), SUM(STAFF1.GRADE) FROM STAFF1, STAFF GROUP BY STAFF1.CITY, STAFF.CITY
Calcite parsing passed, start to transform. SELECT MAX(STAFF1.GRADE), SUM(STAFF1.GRADE) FROM STAFF1, STAFF GROUP BY STAFF1.CITY, STAFF.CITY
[31m- 0329 *** FAILED ***[0m
[31m  Results do not match for 0329:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Aggregate ['STAFF1.CITY,'STAFF.CITY], [max('STAFF1.GRADE) AS c0#14133,sum('STAFF1.GRADE) AS c1#14134][0m
[31m   'Join Inner, None[0m
[31m    'UnresolvedRelation [STAFF1], None[0m
[31m    'UnresolvedRelation [STAFF], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: double, c1: double[0m
[31m  Aggregate [CITY#14138,CITY#14142], [max(GRADE#14137) AS c0#14133,sum(GRADE#14137) AS c1#14134][0m
[31m   Join Inner, None[0m
[31m    MetastoreRelation HU, staff1, None[0m
[31m    MetastoreRelation HU, staff, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Aggregate [CITY#14138,CITY#14142], [max(GRADE#14137) AS c0#14133,sum(GRADE#14137) AS c1#14134][0m
[31m   Project [CITY#14138,CITY#14142,GRADE#14137][0m
[31m    Join Inner, None[0m
[31m     Project [CITY#14138,GRADE#14137][0m
[31m      MetastoreRelation HU, staff1, None[0m
[31m     Project [CITY#14142][0m
[31m      MetastoreRelation HU, staff, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenAggregate(key=[CITY#14138,CITY#14142], functions=[(max(GRADE#14137),mode=Final,isDistinct=false),(sum(GRADE#14137),mode=Final,isDistinct=false)], output=[c0#14133,c1#14134])[0m
[31m   TungstenExchange hashpartitioning(CITY#14138,CITY#14142)[0m
[31m    TungstenAggregate(key=[CITY#14138,CITY#14142], functions=[(max(GRADE#14137),mode=Partial,isDistinct=false),(sum(GRADE#14137),mode=Partial,isDistinct=false)], output=[CITY#14138,CITY#14142,max#14146,currentSum#14148])[0m
[31m     TungstenProject [CITY#14138,CITY#14142,GRADE#14137][0m
[31m      CartesianProduct[0m
[31m       HiveTableScan [CITY#14138,GRADE#14137], (MetastoreRelation HU, staff1, None)[0m
[31m       HiveTableScan [CITY#14142], (MetastoreRelation HU, staff, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0	c1[0m
[31m  !== HIVE - 25 row(s) ==   == CATALYST - 25 row(s) ==[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m  !15	15                    15.0	15.0[0m
[31m   NULL	NULL                NULL	NULL[0m
[31m   NULL	NULL                NULL	NULL[0m
[31m   NULL	NULL                NULL	NULL[0m
[31m   NULL	NULL                NULL	NULL[0m
[31m   NULL	NULL                NULL	NULL (HiveComparisonTest.scala:433)[0m
Calcite parsing passed, start to transform. SELECT AVG(T1.COL4), AVG(T1.COL4 + T2.COL4), SUM(T2.COL4), COUNT(DISTINCT T1.COL4) FROM VTABLE T1, VTABLE T2
Calcite parsing passed, start to transform. SELECT AVG(T1.COL4), AVG(T1.COL4 + T2.COL4), SUM(T2.COL4), COUNT(DISTINCT T1.COL4) FROM VTABLE T1, VTABLE T2
Calcite parsing passed, start to transform. SELECT AVG(T1.COL4), AVG(T1.COL4 + T2.COL4), SUM(T2.COL4), COUNT(DISTINCT T1.COL4) FROM VTABLE T1, VTABLE T2
[31m- 0330 *** FAILED ***[0m
[31m  Results do not match for 0330:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project [avg('T1.COL4) AS c0#14506,avg(('T1.COL4 + 'T2.COL4)) AS c1#14507,sum('T2.COL4) AS c2#14508,COUNT(DISTINCT 'T1.COL4) AS c3#14509][0m
[31m   'Join Inner, None[0m
[31m    'UnresolvedRelation [VTABLE], Some(T1)[0m
[31m    'UnresolvedRelation [VTABLE], Some(T2)[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: double, c1: double, c2: double, c3: bigint[0m
[31m  Aggregate [avg(COL4#14513) AS c0#14506,avg((COL4#14513 + COL4#14518)) AS c1#14507,sum(COL4#14518) AS c2#14508,COUNT(DISTINCT COL4#14513) AS c3#14509L][0m
[31m   Join Inner, None[0m
[31m    MetastoreRelation HU, vtable, Some(T1)[0m
[31m    MetastoreRelation HU, vtable, Some(T2)[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Aggregate [avg(COL4#14513) AS c0#14506,avg((COL4#14513 + COL4#14518)) AS c1#14507,sum(COL4#14518) AS c2#14508,COUNT(DISTINCT COL4#14513) AS c3#14509L][0m
[31m   Project [COL4#14513,COL4#14518][0m
[31m    Join Inner, None[0m
[31m     Project [COL4#14513][0m
[31m      MetastoreRelation HU, vtable, Some(T1)[0m
[31m     Project [COL4#14518][0m
[31m      MetastoreRelation HU, vtable, Some(T2)[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenAggregate(key=[], functions=[(average(COL4#14513),mode=Final,isDistinct=false),(average((COL4#14513 + COL4#14518)),mode=Final,isDistinct=false),(sum(COL4#14518),mode=Final,isDistinct=false),(count(COL4#14513),mode=Complete,isDistinct=true)], output=[c0#14506,c1#14507,c2#14508,c3#14509L])[0m
[31m   TungstenAggregate(key=[COL4#14513], functions=[(average(COL4#14513),mode=PartialMerge,isDistinct=false),(average((COL4#14513 + COL4#14518)),mode=PartialMerge,isDistinct=false),(sum(COL4#14518),mode=PartialMerge,isDistinct=false)], output=[COL4#14513,currentSum#14528,currentCount#14529L,currentSum#14532,currentCount#14533L,currentSum#14535])[0m
[31m    TungstenExchange SinglePartition[0m
[31m     TungstenAggregate(key=[COL4#14513], functions=[(average(COL4#14513),mode=Partial,isDistinct=false),(average((COL4#14513 + COL4#14518)),mode=Partial,isDistinct=false),(sum(COL4#14518),mode=Partial,isDistinct=false)], output=[COL4#14513,currentSum#14528,currentCount#14529L,currentSum#14532,currentCount#14533L,currentSum#14535])[0m
[31m      TungstenProject [COL4#14513,COL4#14518][0m
[31m       CartesianProduct[0m
[31m        HiveTableScan [COL4#14513], (MetastoreRelation HU, vtable, Some(T1))[0m
[31m        HiveTableScan [COL4#14518], (MetastoreRelation HU, vtable, Some(T2))[0m
  
[31m  Code Generation: true[0m
[31m  c0	c1	c2	c3[0m
[31m  !== HIVE - 1 row(s) ==                                                                        == CATALYST - 1 row(s) ==[0m
[31m  !86.09090909090909090909090909090909090909	172.181818181818181818181818181818181818	11364	5   86.0909090909091	172.1818181818182	11364.0	5 (HiveComparisonTest.scala:433)[0m
[33m- 0331 !!! IGNORED !!![0m
[33m- 0332 !!! IGNORED !!![0m
[33m- 0333 !!! IGNORED !!![0m
[33m- 0334 !!! IGNORED !!![0m
[33m- 0335 !!! IGNORED !!![0m
[33m- 0336 !!! IGNORED !!![0m
[33m- 0337 !!! IGNORED !!![0m
[33m- 0338 !!! IGNORED !!![0m
[33m- 0339 !!! IGNORED !!![0m
[33m- 0340 !!! IGNORED !!![0m
[33m- 0341 !!! IGNORED !!![0m
[33m- 0342 !!! IGNORED !!![0m
[33m- 0343 !!! IGNORED !!![0m
[33m- 0344 !!! IGNORED !!![0m
[33m- 0345 !!! IGNORED !!![0m
[33m- 0346 !!! IGNORED !!![0m
[33m- 0347 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT DISTINCT PTYPE, CITY FROM PROJ GROUP BY PTYPE, CITY HAVING AVG(BUDGET) > 21000
[31m- 0348 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: cannot resolve 'BUDGET' given input columns PTYPE, CITY;[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'BUDGET' given input columns PTYPE, CITY;[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:292)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionUp$1(QueryPlan.scala:108)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2(QueryPlan.scala:118)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:126)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:49)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:103)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:49)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:44)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Filter (avg('BUDGET) > 21000)[0m
[31m   'Distinct[0m
[31m    'Aggregate ['PTYPE,'CITY], ['PTYPE,'CITY][0m
[31m     'UnresolvedRelation [PROJ], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  PTYPE: string, CITY: string[0m
[31m  'Filter (avg('BUDGET) > 21000)[0m
[31m   Distinct[0m
[31m    Aggregate [PTYPE#14812,CITY#14814], [PTYPE#14812,CITY#14814][0m
[31m     MetastoreRelation HU, proj, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'BUDGET' given input columns PTYPE, CITY;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'BUDGET' given input columns PTYPE, CITY;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: cannot resolve 'BUDGET' given input columns PTYPE, CITY;[0m
[31m  == HIVE - 1 row(s) ==[0m
[31m  Code	Vienna (HiveComparisonTest.scala:366)[0m
Calcite parsing passed, start to transform. SELECT DISTINCT SUM(BUDGET) FROM PROJ GROUP BY PTYPE, CITY HAVING AVG(BUDGET) > 21000
[31m- 0349 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: cannot resolve 'BUDGET' given input columns c0;[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'BUDGET' given input columns c0;[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:292)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionUp$1(QueryPlan.scala:108)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2(QueryPlan.scala:118)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:126)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:49)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:103)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:49)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:44)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Filter (avg('BUDGET) > 21000)[0m
[31m   'Distinct[0m
[31m    'Aggregate ['PTYPE,'CITY], [sum('BUDGET) AS c0#14921][0m
[31m     'UnresolvedRelation [PROJ], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: double[0m
[31m  'Filter (avg('BUDGET) > 21000)[0m
[31m   Distinct[0m
[31m    Aggregate [PTYPE#14924,CITY#14926], [sum(BUDGET#14925) AS c0#14921][0m
[31m     MetastoreRelation HU, proj, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'BUDGET' given input columns c0;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'BUDGET' given input columns c0;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: cannot resolve 'BUDGET' given input columns c0;[0m
[31m  == HIVE - 1 row(s) ==[0m
[31m  30000 (HiveComparisonTest.scala:366)[0m
[33m- 0350 !!! IGNORED !!![0m
[33m- 0351 !!! IGNORED !!![0m
[33m- 0352 !!! IGNORED !!![0m
[33m- 0353 !!! IGNORED !!![0m
[33m- 0354 !!! IGNORED !!![0m
[33m- 0355 !!! IGNORED !!![0m
[33m- 0356 !!! IGNORED !!![0m
[33m- 0357 !!! IGNORED !!![0m
[33m- 0358 !!! IGNORED !!![0m
[33m- 0359 !!! IGNORED !!![0m
[33m- 0360 !!! IGNORED !!![0m
[33m- 0361 !!! IGNORED !!![0m
[33m- 0362 !!! IGNORED !!![0m
[33m- 0363 !!! IGNORED !!![0m
[33m- 0364 !!! IGNORED !!![0m
[33m- 0365 !!! IGNORED !!![0m
[33m- 0366 !!! IGNORED !!![0m
[33m- 0367 !!! IGNORED !!![0m
[33m- 0368 !!! IGNORED !!![0m
[33m- 0369 !!! IGNORED !!![0m
[33m- 0370 !!! IGNORED !!![0m
[33m- 0371 !!! IGNORED !!![0m
[33m- 0372 !!! IGNORED !!![0m
[33m- 0373 !!! IGNORED !!![0m
[33m- 0374 !!! IGNORED !!![0m
[33m- 0375 !!! IGNORED !!![0m
[33m- 0376 !!! IGNORED !!![0m
[33m- 0377 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT MIN(PNAME) FROM PROJ, WORKS, STAFF WHERE PROJ.PNUM = WORKS.PNUM AND WORKS.EMPNUM = STAFF.EMPNUM AND BUDGET - GRADE * HOURS * 100 IN (-4400, -1000, 4000)
[32m- 0378[0m
[33m- 0379 !!! IGNORED !!![0m
[33m- 0380 !!! IGNORED !!![0m
[33m- 0381 !!! IGNORED !!![0m
[33m- 0382 !!! IGNORED !!![0m
[33m- 0383 !!! IGNORED !!![0m
[33m- 0384 !!! IGNORED !!![0m
[33m- 0385 !!! IGNORED !!![0m
[33m- 0386 !!! IGNORED !!![0m
[33m- 0387 !!! IGNORED !!![0m
[33m- 0388 !!! IGNORED !!![0m
[33m- 0389 !!! IGNORED !!![0m
[33m- 0390 !!! IGNORED !!![0m
[33m- 0391 !!! IGNORED !!![0m
[33m- 0392 !!! IGNORED !!![0m
[33m- 0393 !!! IGNORED !!![0m
[33m- 0394 !!! IGNORED !!![0m
[33m- 0395 !!! IGNORED !!![0m
[33m- 0396 !!! IGNORED !!![0m
[33m- 0397 !!! IGNORED !!![0m
[33m- 0398 !!! IGNORED !!![0m
[33m- 0399 !!! IGNORED !!![0m
[33m- 0400 !!! IGNORED !!![0m
[33m- 0401 !!! IGNORED !!![0m
[33m- 0402 !!! IGNORED !!![0m
[33m- 0403 !!! IGNORED !!![0m
[33m- 0404 !!! IGNORED !!![0m
[33m- 0405 !!! IGNORED !!![0m
[33m- 0406 !!! IGNORED !!![0m
[33m- 0407 !!! IGNORED !!![0m
[33m- 0408 !!! IGNORED !!![0m
[33m- 0409 !!! IGNORED !!![0m
[33m- 0410 !!! IGNORED !!![0m
[33m- 0411 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT X.CITY, X.MAX_C, Y.MAX_C, (X.MAX_C + Y.MAX_C) / 2 FROM CELSIUS_OBSERV X, CELSIUS_OBSERV Y WHERE X.YEAR_OBSERV = 1984 AND Y.YEAR_OBSERV = 1985 AND X.CITY = Y.CITY ORDER BY 4 DESC
Calcite parsing passed, start to transform. SELECT X.CITY, X.MAX_C, Y.MAX_C, (X.MAX_C + Y.MAX_C) / 2 FROM CELSIUS_OBSERV X, CELSIUS_OBSERV Y WHERE X.YEAR_OBSERV = 1984 AND Y.YEAR_OBSERV = 1985 AND X.CITY = Y.CITY ORDER BY 4 DESC
Calcite parsing passed, start to transform. SELECT X.CITY, X.MAX_C, Y.MAX_C, (X.MAX_C + Y.MAX_C) / 2 FROM CELSIUS_OBSERV X, CELSIUS_OBSERV Y WHERE X.YEAR_OBSERV = 1984 AND Y.YEAR_OBSERV = 1985 AND X.CITY = Y.CITY ORDER BY 4 DESC
[31m- 0412 *** FAILED ***[0m
[31m  Results do not match for 0412:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort [4 DESC], true[0m
[31m   'Project ['X.CITY,'X.MAX_C,'Y.MAX_C,(('X.MAX_C + 'Y.MAX_C) / 2) AS c3#15338][0m
[31m    'Filter ((('X.YEAR_OBSERV = 1984) && ('Y.YEAR_OBSERV = 1985)) && ('X.CITY = 'Y.CITY))[0m
[31m     'Join Inner, None[0m
[31m      'UnresolvedRelation [CELSIUS_OBSERV], Some(X)[0m
[31m      'UnresolvedRelation [CELSIUS_OBSERV], Some(Y)[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  CITY: string, MAX_C: double, MAX_C: double, c3: double[0m
[31m  Sort [4 DESC], true[0m
[31m   Project [CITY#15339,MAX_C#15342,MAX_C#15346,((MAX_C#15342 + MAX_C#15346) / cast(2 as double)) AS c3#15338][0m
[31m    Filter (((YEAR_OBSERV#15340 = cast(1984 as double)) && (YEAR_OBSERV#15344 = cast(1985 as double))) && (CITY#15339 = CITY#15343))[0m
[31m     Join Inner, None[0m
[31m      MetastoreRelation HU, celsius_observ, Some(X)[0m
[31m      MetastoreRelation HU, celsius_observ, Some(Y)[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Sort [4 DESC], true[0m
[31m   Project [CITY#15339,MAX_C#15342,MAX_C#15346,((MAX_C#15342 + MAX_C#15346) / 2.0) AS c3#15338][0m
[31m    Join Inner, Some((CITY#15339 = CITY#15343))[0m
[31m     Project [CITY#15339,MAX_C#15342][0m
[31m      Filter (YEAR_OBSERV#15340 = 1984.0)[0m
[31m       MetastoreRelation HU, celsius_observ, Some(X)[0m
[31m     Project [MAX_C#15346,CITY#15343][0m
[31m      Filter (YEAR_OBSERV#15344 = 1985.0)[0m
[31m       MetastoreRelation HU, celsius_observ, Some(Y)[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenSort [4 DESC], true, 0[0m
[31m   ConvertToUnsafe[0m
[31m    Exchange rangepartitioning(4 DESC)[0m
[31m     ConvertToSafe[0m
[31m      TungstenProject [CITY#15339,MAX_C#15342,MAX_C#15346,((MAX_C#15342 + MAX_C#15346) / 2.0) AS c3#15338][0m
[31m       BroadcastHashJoin [CITY#15339], [CITY#15343], BuildRight[0m
[31m        ConvertToUnsafe[0m
[31m         Project [CITY#15339,MAX_C#15342][0m
[31m          Filter (YEAR_OBSERV#15340 = 1984.0)[0m
[31m           HiveTableScan [CITY#15339,MAX_C#15342,YEAR_OBSERV#15340], (MetastoreRelation HU, celsius_observ, Some(X))[0m
[31m        ConvertToUnsafe[0m
[31m         Project [MAX_C#15346,CITY#15343][0m
[31m          Filter (YEAR_OBSERV#15344 = 1985.0)[0m
[31m           HiveTableScan [MAX_C#15346,CITY#15343,YEAR_OBSERV#15344], (MetastoreRelation HU, celsius_observ, Some(Y))[0m
  
[31m  Code Generation: true[0m
[31m  CITY	MAX_C	MAX_C	c3[0m
[31m  !== HIVE - 3 row(s) ==                                                                                                                    == CATALYST - 3 row(s) ==[0m
[31m  !Sun City	43.33333333333333333333333333333333333333	40.55555555555555555555555555555555555556	41.94444444444444444444444444444444444445   Sun City	43.333333333333336	40.55555555555556	41.94444444444444[0m
[31m  !Abeland	38.33333333333333333333333333333333333333	36.66666666666666666666666666666666666667	37.5                                         Iceburg	7.222222222222222	8.333333333333334	7.777777777777779[0m
[31m  !Iceburg	7.22222222222222222222222222222222222222	8.33333333333333333333333333333333333333	7.77777777777777777777777777777777777778       Abeland	38.333333333333336	36.666666666666664	37.5 (HiveComparisonTest.scala:433)[0m
[33m- 0413 !!! IGNORED !!![0m
[33m- 0414 !!! IGNORED !!![0m
[33m- 0415 !!! IGNORED !!![0m
[33m- 0416 !!! IGNORED !!![0m
[33m- 0417 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM CPBASE, CPREF
[32m- 0418[0m
Calcite parsing passed, start to transform. SELECT KC, JUNK2 FROM CPBASE, CPREF ORDER BY JUNK2, KC
Calcite parsing passed, start to transform. SELECT KC, JUNK2 FROM CPBASE, CPREF ORDER BY JUNK2, KC
Calcite parsing passed, start to transform. SELECT KC, JUNK2 FROM CPBASE, CPREF ORDER BY JUNK2, KC
[31m- 0419 *** FAILED ***[0m
[31m  Results do not match for 0419:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['JUNK2 ASC,'KC ASC], true[0m
[31m   'Project ['KC,'JUNK2][0m
[31m    'Join Inner, None[0m
[31m     'UnresolvedRelation [CPBASE], None[0m
[31m     'UnresolvedRelation [CPREF], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  KC: double, JUNK2: string[0m
[31m  Sort [JUNK2#15665 ASC,KC#15662 ASC], true[0m
[31m   Project [KC#15662,JUNK2#15665][0m
[31m    Join Inner, None[0m
[31m     MetastoreRelation SCHANZLE, cpbase, None[0m
[31m     MetastoreRelation SCHANZLE, cpref, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Sort [JUNK2#15665 ASC,KC#15662 ASC], true[0m
[31m   Project [KC#15662,JUNK2#15665][0m
[31m    Join Inner, None[0m
[31m     Project [KC#15662][0m
[31m      MetastoreRelation SCHANZLE, cpbase, None[0m
[31m     Project [JUNK2#15665][0m
[31m      MetastoreRelation SCHANZLE, cpref, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenSort [JUNK2#15665 ASC,KC#15662 ASC], true, 0[0m
[31m   ConvertToUnsafe[0m
[31m    Exchange rangepartitioning(JUNK2#15665 ASC,KC#15662 ASC)[0m
[31m     ConvertToSafe[0m
[31m      TungstenProject [KC#15662,JUNK2#15665][0m
[31m       CartesianProduct[0m
[31m        HiveTableScan [KC#15662], (MetastoreRelation SCHANZLE, cpbase, None)[0m
[31m        HiveTableScan [JUNK2#15665], (MetastoreRelation SCHANZLE, cpref, None)[0m
  
[31m  Code Generation: true[0m
[31m  KC	JUNK2[0m
[31m  !== HIVE - 4 row(s) ==   == CATALYST - 4 row(s) ==[0m
[31m  !0	One 2                 0.0	One 2[0m
[31m  !1	One 2                 1.0	One 2[0m
[31m  !0	Zero 2                0.0	Zero 2[0m
[31m  !1	Zero 2                1.0	Zero 2 (HiveComparisonTest.scala:433)[0m
[33m- 0420 !!! IGNORED !!![0m
[33m- 0421 !!! IGNORED !!![0m
[33m- 0422 !!! IGNORED !!![0m
[33m- 0423 !!! IGNORED !!![0m
[33m- 0424 !!! IGNORED !!![0m
[33m- 0425 !!! IGNORED !!![0m
[33m- 0426 !!! IGNORED !!![0m
[33m- 0427 !!! IGNORED !!![0m
[33m- 0428 !!! IGNORED !!![0m
[33m- 0429 !!! IGNORED !!![0m
[33m- 0430 !!! IGNORED !!![0m
[33m- 0431 !!! IGNORED !!![0m
[33m- 0432 !!! IGNORED !!![0m
[33m- 0433 !!! IGNORED !!![0m
[33m- 0434 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM HU.STAFF WHERE CITY LIKE '%XX%X_%' ESCAPE 'X'
[32m- 0435[0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM HU.STAFF WHERE CITY LIKE '%XX_%' ESCAPE 'X'
[32m- 0436[0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM CPBASE WHERE JUNK1 LIKE 'P%X%%' ESCAPE 'X'
[32m- 0437[0m
[33m- 0438 !!! IGNORED !!![0m
[33m- 0439 !!! IGNORED !!![0m
[33m- 0440 !!! IGNORED !!![0m
[33m- 0441 !!! IGNORED !!![0m
[33m- 0442 !!! IGNORED !!![0m
[33m- 0443 !!! IGNORED !!![0m
[33m- 0444 !!! IGNORED !!![0m
[33m- 0445 !!! IGNORED !!![0m
[33m- 0446 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT "A < a".CITY FROM HU.STAFF "A < a" WHERE EMPNUM = 'E5'
[32m- 0449[0m
Calcite parsing passed, start to transform. SELECT "0".CITY FROM HU.STAFF "0" WHERE EMPNUM = 'E5'
[32m- 0450[0m
Calcite parsing passed, start to transform. SELECT "%".CITY FROM HU.STAFF  "%" WHERE EMPNUM = 'E5'
[32m- 0451[0m
Calcite parsing passed, start to transform. SELECT "&".CITY FROM HU.STAFF  "&" WHERE EMPNUM = 'E5'
[32m- 0452[0m
Calcite parsing passed, start to transform. SELECT "'".CITY FROM HU.STAFF  "'" WHERE EMPNUM = 'E5'
[32m- 0453[0m
Calcite parsing passed, start to transform. SELECT "(".CITY FROM HU.STAFF  "(" WHERE EMPNUM = 'E5'
[32m- 0454[0m
Calcite parsing passed, start to transform. SELECT ")".CITY FROM HU.STAFF  ")" WHERE EMPNUM = 'E5'
[32m- 0455[0m
[33m- 0456 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT "+".CITY FROM HU.STAFF  "+" WHERE EMPNUM = 'E5'
[32m- 0457[0m
Calcite parsing passed, start to transform. SELECT ",".CITY FROM HU.STAFF  "," WHERE EMPNUM = 'E5'
[32m- 0458[0m
Calcite parsing passed, start to transform. SELECT "-".CITY FROM HU.STAFF  "-" WHERE EMPNUM = 'E5'
[32m- 0459[0m
Calcite parsing passed, start to transform. SELECT ".".CITY FROM HU.STAFF  "." WHERE EMPNUM = 'E5'
[31m- 0460 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: cannot resolve '..CITY' given input columns empnum, empname, grade, city;[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve '..CITY' given input columns empnum, empname, grade, city;[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:292)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionUp$1(QueryPlan.scala:108)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2(QueryPlan.scala:118)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2$1.apply(QueryPlan.scala:122)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2(QueryPlan.scala:122)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:126)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:49)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:103)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:49)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:44)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Project ['..CITY][0m
[31m   'Filter ('EMPNUM = E5)[0m
[31m    'UnresolvedRelation [HU,STAFF], Some(.)[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.catalyst.analysis.UnresolvedException: Invalid call to dataType on unresolved object, tree: '..CITY[0m
[31m  'Project ['..CITY][0m
[31m   Filter (EMPNUM#18946 = E5)[0m
[31m    MetastoreRelation hu, staff, Some(.)[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve '..CITY' given input columns empnum, empname, grade, city;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve '..CITY' given input columns empnum, empname, grade, city;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: cannot resolve '..CITY' given input columns empnum, empname, grade, city;[0m
[31m  == HIVE - 0 row(s) == (HiveComparisonTest.scala:366)[0m
Calcite parsing passed, start to transform. SELECT "/".CITY FROM HU.STAFF  "/" WHERE EMPNUM = 'E5'
[32m- 0461[0m
Calcite parsing passed, start to transform. SELECT ":".CITY FROM HU.STAFF  ":" WHERE EMPNUM = 'E5'
[32m- 0462[0m
Calcite parsing passed, start to transform. SELECT "<".CITY FROM HU.STAFF  "<" WHERE EMPNUM = 'E5'
[32m- 0463[0m
Calcite parsing passed, start to transform. SELECT "=".CITY FROM HU.STAFF  "=" WHERE EMPNUM = 'E5'
[32m- 0464[0m
Calcite parsing passed, start to transform. SELECT ">".CITY FROM HU.STAFF  ">" WHERE EMPNUM = 'E5'
[32m- 0465[0m
Calcite parsing passed, start to transform. SELECT "_".CITY FROM HU.STAFF  "_" WHERE EMPNUM = 'E5'
[32m- 0466[0m
Calcite parsing passed, start to transform. SELECT "|".CITY FROM HU.STAFF  "|" WHERE EMPNUM = 'E5'
[32m- 0467[0m
[33m- 0468 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT HU.PROJ.CITY AS PCITY, HU.STAFF.CITY SCITY, BUDGET + GRADE * HOURS * 100  REAL_BUDGET FROM HU.STAFF, HU.PROJ, HU.WORKS WHERE HU.WORKS.EMPNUM = HU.STAFF.EMPNUM AND HU.WORKS.PNUM = HU.PROJ.PNUM AND EMPNAME = 'Alice' AND HU.PROJ.PNUM = 'P3'
[31m- 0469 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: cannot resolve 'HU.WORKS.EMPNUM' given input columns city, grade, empnum, empnum, budget, pname, hours, pnum, empname, pnum, city, ptype;[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'HU.WORKS.EMPNUM' given input columns city, grade, empnum, empnum, budget, pname, hours, pnum, empname, pnum, city, ptype;[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:292)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionUp$1(QueryPlan.scala:108)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2(QueryPlan.scala:118)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:126)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:49)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:103)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$foreachUp$1.apply(TreeNode.scala:102)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$foreachUp$1.apply(TreeNode.scala:102)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:102)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:49)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:44)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Project ['HU.PROJ.CITY AS PCITY#20932,'HU.STAFF.CITY AS SCITY#20933,('BUDGET + (('GRADE * 'HOURS) * 100)) AS REAL_BUDGET#20934][0m
[31m   'Filter (((('HU.WORKS.EMPNUM = 'HU.STAFF.EMPNUM) && ('HU.WORKS.PNUM = 'HU.PROJ.PNUM)) && ('EMPNAME = Alice)) && ('HU.PROJ.PNUM = P3))[0m
[31m    'Join Inner, None[0m
[31m     'Join Inner, None[0m
[31m      'UnresolvedRelation [HU,STAFF], None[0m
[31m      'UnresolvedRelation [HU,PROJ], None[0m
[31m     'UnresolvedRelation [HU,WORKS], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.catalyst.analysis.UnresolvedException: Invalid call to dataType on unresolved object, tree: 'PCITY[0m
[31m  'Project ['HU.PROJ.CITY AS PCITY#20932,'HU.STAFF.CITY AS SCITY#20933,('BUDGET + (('GRADE * 'HOURS) * 100)) AS REAL_BUDGET#20934][0m
[31m   'Filter (((('HU.WORKS.EMPNUM = 'HU.STAFF.EMPNUM) && ('HU.WORKS.PNUM = 'HU.PROJ.PNUM)) && (EMPNAME#20936 = Alice)) && ('HU.PROJ.PNUM = P3))[0m
[31m    Join Inner, None[0m
[31m     Join Inner, None[0m
[31m      MetastoreRelation hu, staff, None[0m
[31m      MetastoreRelation hu, proj, None[0m
[31m     MetastoreRelation hu, works, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'HU.WORKS.EMPNUM' given input columns city, grade, empnum, empnum, budget, pname, hours, pnum, empname, pnum, city, ptype;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'HU.WORKS.EMPNUM' given input columns city, grade, empnum, empnum, budget, pname, hours, pnum, empname, pnum, city, ptype;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: cannot resolve 'HU.WORKS.EMPNUM' given input columns city, grade, empnum, empnum, budget, pname, hours, pnum, empname, pnum, city, ptype;[0m
[31m  == HIVE - 0 row(s) == (HiveComparisonTest.scala:366)[0m
Calcite parsing passed, start to transform. SELECT T_DECIMAL / .000000001 FROM FOUR_TYPES WHERE T_CHAR = 'X'
Calcite parsing passed, start to transform. SELECT T_DECIMAL / .000000001 FROM FOUR_TYPES WHERE T_CHAR = 'X'
Calcite parsing passed, start to transform. SELECT T_DECIMAL / .000000001 FROM FOUR_TYPES WHERE T_CHAR = 'X'
[31m- 0470 *** FAILED ***[0m
[31m  Results do not match for 0470:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project [('T_DECIMAL / 1E-9) AS c0#21032][0m
[31m   'Filter ('T_CHAR = X)[0m
[31m    'UnresolvedRelation [FOUR_TYPES], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: double[0m
[31m  Project [(T_DECIMAL#21035 / cast(1E-9 as double)) AS c0#21032][0m
[31m   Filter (T_CHAR#21034 = X)[0m
[31m    MetastoreRelation SCHANZLE, four_types, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Project [(T_DECIMAL#21035 / 1.0E-9) AS c0#21032][0m
[31m   Filter (T_CHAR#21034 = X)[0m
[31m    MetastoreRelation SCHANZLE, four_types, None[0m
  
[31m  == Physical Plan ==[0m
[31m  Project [(T_DECIMAL#21035 / 1.0E-9) AS c0#21032][0m
[31m   Filter (T_CHAR#21034 = X)[0m
[31m    HiveTableScan [T_DECIMAL#21035,T_CHAR#21034], (MetastoreRelation SCHANZLE, four_types, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !11112222000000000       1.1112222E16 (HiveComparisonTest.scala:433)[0m
[33m- 0471 !!! IGNORED !!![0m
[33m- 0473 !!! IGNORED !!![0m
[33m- 0475 !!! IGNORED !!![0m
[33m- 0476 !!! IGNORED !!![0m
[33m- 0477 !!! IGNORED !!![0m
[33m- 0478 !!! IGNORED !!![0m
[33m- 0479 !!! IGNORED !!![0m
[33m- 0480 !!! IGNORED !!![0m
[33m- 0481 !!! IGNORED !!![0m
[33m- 0482 !!! IGNORED !!![0m
[33m- 0483 !!! IGNORED !!![0m
[33m- 0484 !!! IGNORED !!![0m
[33m- 0485 !!! IGNORED !!![0m
[33m- 0486 !!! IGNORED !!![0m
[33m- 0487 !!! IGNORED !!![0m
[33m- 0488 !!! IGNORED !!![0m
[33m- 0489 !!! IGNORED !!![0m
[33m- 0490 !!! IGNORED !!![0m
[33m- 0491 !!! IGNORED !!![0m
[33m- 0492 !!! IGNORED !!![0m
[33m- 0493 !!! IGNORED !!![0m
[33m- 0494 !!! IGNORED !!![0m
[33m- 0495 !!! IGNORED !!![0m
[33m- 0496 !!! IGNORED !!![0m
[33m- 0497 !!! IGNORED !!![0m
[33m- 0498 !!! IGNORED !!![0m
[33m- 0499 !!! IGNORED !!![0m
[33m- 0500 !!! IGNORED !!![0m
[33m- 0501 !!! IGNORED !!![0m
[33m- 0502 !!! IGNORED !!![0m
[33m- 0503 !!! IGNORED !!![0m
[33m- 0504 !!! IGNORED !!![0m
[33m- 0505 !!! IGNORED !!![0m
[33m- 0506 !!! IGNORED !!![0m
[33m- 0507 !!! IGNORED !!![0m
[33m- 0508 !!! IGNORED !!![0m
[33m- 0509 !!! IGNORED !!![0m
[33m- 0510 !!! IGNORED !!![0m
[33m- 0511 !!! IGNORED !!![0m
[33m- 0512 !!! IGNORED !!![0m
[33m- 0513 !!! IGNORED !!![0m
[33m- 0514 !!! IGNORED !!![0m
[33m- 0515 !!! IGNORED !!![0m
[33m- 0517 !!! IGNORED !!![0m
[33m- 0519 !!! IGNORED !!![0m
[33m- 0521 !!! IGNORED !!![0m
[33m- 0523 !!! IGNORED !!![0m
[33m- 0524 !!! IGNORED !!![0m
[33m- 0525 !!! IGNORED !!![0m
[33m- 0528 !!! IGNORED !!![0m
[33m- 0529 !!! IGNORED !!![0m
[33m- 0530 !!! IGNORED !!![0m
[33m- 0531 !!! IGNORED !!![0m
[33m- 0532 !!! IGNORED !!![0m
[33m- 0534 !!! IGNORED !!![0m
[33m- 0535 !!! IGNORED !!![0m
[33m- 0536 !!! IGNORED !!![0m
[33m- 0537 !!! IGNORED !!![0m
[33m- 0538 !!! IGNORED !!![0m
[33m- 0539 !!! IGNORED !!![0m
[33m- 0540 !!! IGNORED !!![0m
[33m- 0541 !!! IGNORED !!![0m
[33m- 0542 !!! IGNORED !!![0m
[33m- 0543 !!! IGNORED !!![0m
[33m- 0544 !!! IGNORED !!![0m
[33m- 0545 !!! IGNORED !!![0m
[33m- 0546 !!! IGNORED !!![0m
[33m- 0547 !!! IGNORED !!![0m
[33m- 0548 !!! IGNORED !!![0m
[33m- 0549 !!! IGNORED !!![0m
[33m- 0550 !!! IGNORED !!![0m
[33m- 0551 !!! IGNORED !!![0m
[33m- 0552 !!! IGNORED !!![0m
[33m- 0553 !!! IGNORED !!![0m
[33m- 0554 !!! IGNORED !!![0m
[33m- 0555 !!! IGNORED !!![0m
[33m- 0556 !!! IGNORED !!![0m
[33m- 0557 !!! IGNORED !!![0m
[33m- 0558 !!! IGNORED !!![0m
[33m- 0559 !!! IGNORED !!![0m
[33m- 0560 !!! IGNORED !!![0m
[33m- 0561 !!! IGNORED !!![0m
[33m- 0562 !!! IGNORED !!![0m
[33m- 0563 !!! IGNORED !!![0m
[33m- 0564 !!! IGNORED !!![0m
[33m- 0565 !!! IGNORED !!![0m
[33m- 0566 !!! IGNORED !!![0m
[33m- 0567 !!! IGNORED !!![0m
[33m- 0568 !!! IGNORED !!![0m
[33m- 0569 !!! IGNORED !!![0m
[33m- 0570 !!! IGNORED !!![0m
[33m- 0571 !!! IGNORED !!![0m
[33m- 0572 !!! IGNORED !!![0m
[33m- 0573 !!! IGNORED !!![0m
[33m- 0574 !!! IGNORED !!![0m
[33m- 0575 !!! IGNORED !!![0m
[33m- 0576 !!! IGNORED !!![0m
[33m- 0577 !!! IGNORED !!![0m
[33m- 0578 !!! IGNORED !!![0m
[33m- 0579 !!! IGNORED !!![0m
[33m- 0580 !!! IGNORED !!![0m
[33m- 0581 !!! IGNORED !!![0m
[33m- 0582 !!! IGNORED !!![0m
[33m- 0583 !!! IGNORED !!![0m
[33m- 0584 !!! IGNORED !!![0m
[33m- 0585 !!! IGNORED !!![0m
[33m- 0586 !!! IGNORED !!![0m
[33m- 0587 !!! IGNORED !!![0m
[33m- 0588 !!! IGNORED !!![0m
[33m- 0589 !!! IGNORED !!![0m
[33m- 0590 !!! IGNORED !!![0m
[33m- 0591 !!! IGNORED !!![0m
[33m- 0592 !!! IGNORED !!![0m
[33m- 0593 !!! IGNORED !!![0m
[33m- 0594 !!! IGNORED !!![0m
[33m- 0595 !!! IGNORED !!![0m
[33m- 0596 !!! IGNORED !!![0m
[33m- 0597 !!! IGNORED !!![0m
[33m- 0598 !!! IGNORED !!![0m
[33m- 0599 !!! IGNORED !!![0m
[33m- 0600 !!! IGNORED !!![0m
[33m- 0601 !!! IGNORED !!![0m
[33m- 0602 !!! IGNORED !!![0m
[33m- 0603 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM SIZ3_F,SIZ3_P1,SIZ3_P2,SIZ3_P3,SIZ3_P4, SIZ3_P5,SIZ3_P6 WHERE P1 = SIZ3_P1.F1 AND P2 = SIZ3_P2.F1 AND P3 = SIZ3_P3.F1 AND P4 = SIZ3_P4.F1 AND P5 = SIZ3_P5.F1 AND P6 = SIZ3_P6.F1 AND SIZ3_P3.F1 BETWEEN 1 AND 2
[32m- 0604[0m
[33m- 0605 !!! IGNORED !!![0m
[33m- 0606 !!! IGNORED !!![0m
[33m- 0607 !!! IGNORED !!![0m
[33m- 0608 !!! IGNORED !!![0m
[33m- 0609 !!! IGNORED !!![0m
[33m- 0610 !!! IGNORED !!![0m
[33m- 0611 !!! IGNORED !!![0m
[33m- 0612 !!! IGNORED !!![0m
[33m- 0613 !!! IGNORED !!![0m
[33m- 0614 !!! IGNORED !!![0m
[33m- 0615 !!! IGNORED !!![0m
[33m- 0616 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM EXACT_DEF WHERE BODY_TEMP = 99.0 AND MAX_NUM = -55555 AND MIN_NUM = .000001 OR BODY_TEMP = 98.6 AND MAX_NUM = 100 AND MIN_NUM = .2
[32m- 0617[0m
[33m- 0618 !!! IGNORED !!![0m
[33m- 0619 !!! IGNORED !!![0m
[33m- 0620 !!! IGNORED !!![0m
[33m- 0621 !!! IGNORED !!![0m
[33m- 0622 !!! IGNORED !!![0m
[33m- 0623 !!! IGNORED !!![0m
[33m- 0624 !!! IGNORED !!![0m
[33m- 0625 !!! IGNORED !!![0m
[33m- 0626 !!! IGNORED !!![0m
[33m- 0627 !!! IGNORED !!![0m
[33m- 0628 !!! IGNORED !!![0m
[33m- 0629 !!! IGNORED !!![0m
[33m- 0630 !!! IGNORED !!![0m
[33m- 0631 !!! IGNORED !!![0m
[33m- 0632 !!! IGNORED !!![0m
[33m- 0633 !!! IGNORED !!![0m
[33m- 0634 !!! IGNORED !!![0m
[33m- 0635 !!! IGNORED !!![0m
[33m- 0636 !!! IGNORED !!![0m
[33m- 0637 !!! IGNORED !!![0m
[33m- 0638 !!! IGNORED !!![0m
[33m- 0639 !!! IGNORED !!![0m
[33m- 0640 !!! IGNORED !!![0m
[33m- 0641 !!! IGNORED !!![0m
[33m- 0642 !!! IGNORED !!![0m
[33m- 0643 !!! IGNORED !!![0m
[33m- 0644 !!! IGNORED !!![0m
[33m- 0645 !!! IGNORED !!![0m
[33m- 0646 !!! IGNORED !!![0m
[33m- 0647 !!! IGNORED !!![0m
[33m- 0648 !!! IGNORED !!![0m
[33m- 0649 !!! IGNORED !!![0m
[33m- 0650 !!! IGNORED !!![0m
[33m- 0651 !!! IGNORED !!![0m
[33m- 0652 !!! IGNORED !!![0m
[33m- 0653 !!! IGNORED !!![0m
[33m- 0654 !!! IGNORED !!![0m
[33m- 0655 !!! IGNORED !!![0m
[33m- 0656 !!! IGNORED !!![0m
[33m- 0657 !!! IGNORED !!![0m
[33m- 0658 !!! IGNORED !!![0m
[33m- 0659 !!! IGNORED !!![0m
[33m- 0660 !!! IGNORED !!![0m
[33m- 0661 !!! IGNORED !!![0m
[33m- 0662 !!! IGNORED !!![0m
[33m- 0663 !!! IGNORED !!![0m
[33m- 0664 !!! IGNORED !!![0m
[33m- 0665 !!! IGNORED !!![0m
[33m- 0666 !!! IGNORED !!![0m
[33m- 0667 !!! IGNORED !!![0m
[33m- 0668 !!! IGNORED !!![0m
[33m- 0669 !!! IGNORED !!![0m
[33m- 0670 !!! IGNORED !!![0m
[33m- 0671 !!! IGNORED !!![0m
[33m- 0672 !!! IGNORED !!![0m
[33m- 0673 !!! IGNORED !!![0m
[33m- 0674 !!! IGNORED !!![0m
[33m- 0675 !!! IGNORED !!![0m
[33m- 0676 !!! IGNORED !!![0m
[33m- 0677 !!! IGNORED !!![0m
[33m- 0678 !!! IGNORED !!![0m
[33m- 0679 !!! IGNORED !!![0m
[33m- 0680 !!! IGNORED !!![0m
[33m- 0681 !!! IGNORED !!![0m
[33m- 0682 !!! IGNORED !!![0m
[33m- 0683 !!! IGNORED !!![0m
[33m- 0684 !!! IGNORED !!![0m
[33m- 0685 !!! IGNORED !!![0m
[33m- 0686 !!! IGNORED !!![0m
[33m- 0687 !!! IGNORED !!![0m
[33m- 0688 !!! IGNORED !!![0m
[33m- 0689 !!! IGNORED !!![0m
[33m- 0690 !!! IGNORED !!![0m
[33m- 0691 !!! IGNORED !!![0m
[33m- 0692 !!! IGNORED !!![0m
[33m- 0693 !!! IGNORED !!![0m
[33m- 0694 !!! IGNORED !!![0m
[33m- 0695 !!! IGNORED !!![0m
[33m- 0696 !!! IGNORED !!![0m
[33m- 0697 !!! IGNORED !!![0m
[33m- 0698 !!! IGNORED !!![0m
[33m- 0699 !!! IGNORED !!![0m
[33m- 0700 !!! IGNORED !!![0m
[33m- 0701 !!! IGNORED !!![0m
[33m- 0702 !!! IGNORED !!![0m
[33m- 0703 !!! IGNORED !!![0m
[33m- 0704 !!! IGNORED !!![0m
[33m- 0705 !!! IGNORED !!![0m
[33m- 0706 !!! IGNORED !!![0m
[33m- 0707 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT EMPNAME FROM HU.STAFF, WORKWEEK WHERE HU.STAFF.EMPNUM = WORKWEEK.EMPNUM AND HOURS = 12
[31m- 0708 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: cannot resolve 'HU.STAFF.EMPNUM' given input columns empname, empnum, empnum, hours, city, grade;[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'HU.STAFF.EMPNUM' given input columns empname, empnum, empnum, hours, city, grade;[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:292)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionUp$1(QueryPlan.scala:108)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2(QueryPlan.scala:118)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:126)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:49)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:103)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$foreachUp$1.apply(TreeNode.scala:102)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$foreachUp$1.apply(TreeNode.scala:102)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:102)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:49)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:44)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Project ['EMPNAME][0m
[31m   'Filter (('HU.STAFF.EMPNUM = 'WORKWEEK.EMPNUM) && ('HOURS = 12))[0m
[31m    'Join Inner, None[0m
[31m     'UnresolvedRelation [HU,STAFF], None[0m
[31m     'UnresolvedRelation [WORKWEEK], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.catalyst.analysis.UnresolvedException: Invalid call to dataType on unresolved object, tree: 'EMPNAME[0m
[31m  'Project ['EMPNAME][0m
[31m   'Filter (('HU.STAFF.EMPNUM = EMPNUM#21733) && (HOURS#21734 = cast(12 as double)))[0m
[31m    Join Inner, None[0m
[31m     MetastoreRelation hu, staff, None[0m
[31m     MetastoreRelation FLATER, workweek, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'HU.STAFF.EMPNUM' given input columns empname, empnum, empnum, hours, city, grade;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: cannot resolve 'HU.STAFF.EMPNUM' given input columns empname, empnum, empnum, hours, city, grade;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: cannot resolve 'HU.STAFF.EMPNUM' given input columns empname, empnum, empnum, hours, city, grade;[0m
[31m  == HIVE - 0 row(s) == (HiveComparisonTest.scala:366)[0m
[33m- 0709 !!! IGNORED !!![0m
[33m- 0710 !!! IGNORED !!![0m
[33m- 0711 !!! IGNORED !!![0m
[33m- 0712 !!! IGNORED !!![0m
[33m- 0713 !!! IGNORED !!![0m
[33m- 0714 !!! IGNORED !!![0m
[33m- 0715 !!! IGNORED !!![0m
[33m- 0716 !!! IGNORED !!![0m
[33m- 0717 !!! IGNORED !!![0m
[33m- 0718 !!! IGNORED !!![0m
[33m- 0719 !!! IGNORED !!![0m
[33m- 0720 !!! IGNORED !!![0m
[33m- 0721 !!! IGNORED !!![0m
[33m- 0722 !!! IGNORED !!![0m
[33m- 0723 !!! IGNORED !!![0m
[33m- 0724 !!! IGNORED !!![0m
[33m- 0725 !!! IGNORED !!![0m
[33m- 0726 !!! IGNORED !!![0m
[33m- 0727 !!! IGNORED !!![0m
[33m- 0728 !!! IGNORED !!![0m
[33m- 0729 !!! IGNORED !!![0m
[33m- 0730 !!! IGNORED !!![0m
[33m- 0731 !!! IGNORED !!![0m
[33m- 0732 !!! IGNORED !!![0m
[33m- 0733 !!! IGNORED !!![0m
[33m- 0734 !!! IGNORED !!![0m
[33m- 0735 !!! IGNORED !!![0m
[33m- 0736 !!! IGNORED !!![0m
[33m- 0737 !!! IGNORED !!![0m
[33m- 0738 !!! IGNORED !!![0m
[33m- 0739 !!! IGNORED !!![0m
[33m- 0740 !!! IGNORED !!![0m
[33m- 0741 !!! IGNORED !!![0m
[33m- 0742 !!! IGNORED !!![0m
[33m- 0743 !!! IGNORED !!![0m
[33m- 0744 !!! IGNORED !!![0m
[33m- 0745 !!! IGNORED !!![0m
[33m- 0746 !!! IGNORED !!![0m
[33m- 0747 !!! IGNORED !!![0m
[33m- 0748 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT EMPNUM FROM HU.STAFF3 NATURAL LEFT JOIN HU.STAFF NATURAL INNER JOIN HU.STAFF4 ORDER BY EMPNUM DESC
[31m- 0749 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22009, EMPNUM#22013, EMPNUM#22017.;[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22009, EMPNUM#22013, EMPNUM#22017.;[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve(LogicalPlan.scala:278)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveChildren(LogicalPlan.scala:162)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4$$anonfun$19.apply(Analyzer.scala:387)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4$$anonfun$19.apply(Analyzer.scala:387)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$.withPosition(package.scala:48)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4.applyOrElse(Analyzer.scala:387)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4.applyOrElse(Analyzer.scala:383)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:292)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionUp$1(QueryPlan.scala:108)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2(QueryPlan.scala:118)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2$1.apply(QueryPlan.scala:122)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2(QueryPlan.scala:122)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:126)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8.applyOrElse(Analyzer.scala:383)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8.applyOrElse(Analyzer.scala:277)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:277)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:276)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:83)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:80)[0m
[31m  	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m
[31m  	at scala.collection.immutable.List.foldLeft(List.scala:84)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:80)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:72)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:72)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed$lzycompute(TestHive.scala:195)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed(TestHive.scala:180)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['EMPNUM DESC], true[0m
[31m   'Project ['EMPNUM][0m
[31m    'Join Inner, None[0m
[31m     'Join LeftOuter, None[0m
[31m      'UnresolvedRelation [HU,STAFF3], None[0m
[31m      'UnresolvedRelation [HU,STAFF], None[0m
[31m     'UnresolvedRelation [HU,STAFF4], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22021, EMPNUM#22025, EMPNUM#22029.;[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22033, EMPNUM#22037, EMPNUM#22041.;[0m
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22045, EMPNUM#22049, EMPNUM#22053.;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22057, EMPNUM#22061, EMPNUM#22065.;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22069, EMPNUM#22073, EMPNUM#22077.;[0m
[31m  == HIVE - 0 row(s) == (HiveComparisonTest.scala:366)[0m
[33m- 0750 !!! IGNORED !!![0m
[33m- 0751 !!! IGNORED !!![0m
[33m- 0752 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT * FROM STAFF66 NATURAL INNER JOIN HU.STAFF3
[32m- 0753[0m
Calcite parsing passed, start to transform. SELECT EMPNUM, EMPNAME, SALARY FROM HU.STAFF3 NATURAL LEFT OUTER JOIN STAFF66 WHERE EMPNUM > 'E1' ORDER BY EMPNUM ASC
[31m- 0754 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22357, EMPNUM#22364.;[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22357, EMPNUM#22364.;[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve(LogicalPlan.scala:278)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveChildren(LogicalPlan.scala:162)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4$$anonfun$19.apply(Analyzer.scala:387)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4$$anonfun$19.apply(Analyzer.scala:387)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$.withPosition(package.scala:48)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4.applyOrElse(Analyzer.scala:387)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4.applyOrElse(Analyzer.scala:383)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:292)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionUp$1(QueryPlan.scala:108)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2(QueryPlan.scala:118)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:126)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8.applyOrElse(Analyzer.scala:383)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8.applyOrElse(Analyzer.scala:277)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:277)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:276)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:83)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:80)[0m
[31m  	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m
[31m  	at scala.collection.immutable.List.foldLeft(List.scala:84)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:80)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:72)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:72)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed$lzycompute(TestHive.scala:195)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed(TestHive.scala:180)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['EMPNUM ASC], true[0m
[31m   'Project ['EMPNUM,'EMPNAME,'SALARY][0m
[31m    'Filter ('EMPNUM > E1)[0m
[31m     'Join LeftOuter, None[0m
[31m      'UnresolvedRelation [HU,STAFF3], None[0m
[31m      'UnresolvedRelation [STAFF66], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22365, EMPNUM#22372.;[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22373, EMPNUM#22380.;[0m
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22381, EMPNUM#22388.;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22389, EMPNUM#22396.;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22397, EMPNUM#22404.;[0m
[31m  == HIVE - 0 row(s) == (HiveComparisonTest.scala:366)[0m
Calcite parsing passed, start to transform. SELECT EMPNUM, EMPNAME, SALARY FROM STAFF66 NATURAL RIGHT OUTER JOIN HU.STAFF WHERE EMPNUM > 'E1' ORDER BY EMPNUM DESC
[31m- 0755 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22682, EMPNUM#22683.;[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22682, EMPNUM#22683.;[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve(LogicalPlan.scala:278)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveChildren(LogicalPlan.scala:162)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4$$anonfun$19.apply(Analyzer.scala:387)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4$$anonfun$19.apply(Analyzer.scala:387)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$.withPosition(package.scala:48)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4.applyOrElse(Analyzer.scala:387)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8$$anonfun$applyOrElse$4.applyOrElse(Analyzer.scala:383)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:292)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionUp$1(QueryPlan.scala:108)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$2(QueryPlan.scala:118)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:126)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8.applyOrElse(Analyzer.scala:383)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$8.applyOrElse(Analyzer.scala:277)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:277)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:276)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:83)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:80)[0m
[31m  	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m
[31m  	at scala.collection.immutable.List.foldLeft(List.scala:84)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:80)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:72)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:72)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed$lzycompute(TestHive.scala:195)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed(TestHive.scala:180)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['EMPNUM DESC], true[0m
[31m   'Project ['EMPNUM,'EMPNAME,'SALARY][0m
[31m    'Filter ('EMPNUM > E1)[0m
[31m     'Join RightOuter, None[0m
[31m      'UnresolvedRelation [STAFF66], None[0m
[31m      'UnresolvedRelation [HU,STAFF], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22690, EMPNUM#22691.;[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22698, EMPNUM#22699.;[0m
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22706, EMPNUM#22707.;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22714, EMPNUM#22715.;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#22722, EMPNUM#22723.;[0m
[31m  == HIVE - 3 row(s) ==[0m
[31m  E7	SULLIVAN	NULL[0m
[31m  E6	Fidel	NULL[0m
[31m  E13	ff	NULL (HiveComparisonTest.scala:366)[0m
[33m- 0756 !!! IGNORED !!![0m
[33m- 0757 !!! IGNORED !!![0m
[33m- 0758 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT (*) FROM STAFF66 NATURAL RIGHT JOIN HU.PROJ
Calcite parsing passed, start to transform. SELECT COUNT (*) FROM STAFF66 NATURAL RIGHT JOIN HU.PROJ
Calcite parsing passed, start to transform. SELECT COUNT (*) FROM STAFF66 NATURAL RIGHT JOIN HU.PROJ
[31m- 0759 *** FAILED ***[0m
[31m  Results do not match for 0759:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project [count(1) AS c0#22882L][0m
[31m   'Join RightOuter, None[0m
[31m    'UnresolvedRelation [STAFF66], None[0m
[31m    'UnresolvedRelation [HU,PROJ], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: bigint[0m
[31m  Aggregate [count(1) AS c0#22882L][0m
[31m   Join RightOuter, None[0m
[31m    MetastoreRelation FLATER, staff66, None[0m
[31m    MetastoreRelation hu, proj, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Aggregate [count(1) AS c0#22882L][0m
[31m   Project[0m
[31m    Join RightOuter, None[0m
[31m     Project[0m
[31m      MetastoreRelation FLATER, staff66, None[0m
[31m     Project[0m
[31m      MetastoreRelation hu, proj, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenAggregate(key=[], functions=[(count(1),mode=Final,isDistinct=false)], output=[c0#22882L])[0m
[31m   TungstenExchange SinglePartition[0m
[31m    TungstenAggregate(key=[], functions=[(count(1),mode=Partial,isDistinct=false)], output=[currentCount#22894L])[0m
[31m     TungstenProject[0m
[31m      CartesianProduct[0m
[31m       HiveTableScan (MetastoreRelation FLATER, staff66, None)[0m
[31m       HiveTableScan (MetastoreRelation hu, proj, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !3                       0 (HiveComparisonTest.scala:433)[0m
Calcite parsing passed, start to transform. SELECT * FROM HU.WORKS NATURAL LEFT JOIN HU.PROJ ORDER BY EMPNUM DESC, PNUM
[31m- 0760 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: Reference 'PNUM' is ambiguous, could be: PNUM#23327, PNUM#23329.;[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'PNUM' is ambiguous, could be: PNUM#23327, PNUM#23329.;[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve(LogicalPlan.scala:278)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve(LogicalPlan.scala:172)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$org$apache$spark$sql$catalyst$analysis$Analyzer$$resolveSortOrders$1$$anonfun$4.applyOrElse(Analyzer.scala:422)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$org$apache$spark$sql$catalyst$analysis$Analyzer$$resolveSortOrders$1$$anonfun$4.applyOrElse(Analyzer.scala:420)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:292)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$org$apache$spark$sql$catalyst$analysis$Analyzer$$resolveSortOrders$1.apply(Analyzer.scala:420)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$org$apache$spark$sql$catalyst$analysis$Analyzer$$resolveSortOrders$1.apply(Analyzer.scala:414)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:32)[0m
[31m  	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:45)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer.org$apache$spark$sql$catalyst$analysis$Analyzer$$resolveSortOrders(Analyzer.scala:414)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveSortReferences$.resolveAndFindMissing(Analyzer.scala:466)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveSortReferences$$anonfun$apply$9.applyOrElse(Analyzer.scala:443)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveSortReferences$$anonfun$apply$9.applyOrElse(Analyzer.scala:440)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveSortReferences$.apply(Analyzer.scala:440)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveSortReferences$.apply(Analyzer.scala:439)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:83)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:80)[0m
[31m  	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m
[31m  	at scala.collection.immutable.List.foldLeft(List.scala:84)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:80)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:72)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:72)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed$lzycompute(TestHive.scala:195)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed(TestHive.scala:180)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['EMPNUM DESC,'PNUM ASC], true[0m
[31m   'Project [*][0m
[31m    'Join LeftOuter, None[0m
[31m     'UnresolvedRelation [HU,WORKS], None[0m
[31m     'UnresolvedRelation [HU,PROJ], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'PNUM' is ambiguous, could be: PNUM#23335, PNUM#23337.;[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'PNUM' is ambiguous, could be: PNUM#23343, PNUM#23345.;[0m
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'PNUM' is ambiguous, could be: PNUM#23351, PNUM#23353.;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'PNUM' is ambiguous, could be: PNUM#23359, PNUM#23361.;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: Reference 'PNUM' is ambiguous, could be: PNUM#23367, PNUM#23369.;[0m
[31m  == HIVE - 27 row(s) ==[0m
[31m  P2	e1	NULL	CALM	Code	30000	Vienna[0m
[31m  P5	e1	NULL	IRM	Test	10000	NULL[0m
[31m  p2	e1	NULL	NULL	NULL	NULL	NULL[0m
[31m  low	UPP	NULL	NULL	NULL	NULL	NULL[0m
[31m  P7	E9	10	PROGRAM	RISC	15000	Gaithersburg[0m
[31m  P9	E9	NULL	NULL	NULL	NULL	NULL[0m
[31m  P8	E8	NULL	NULL	NULL	NULL	NULL[0m
[31m  P4	E7	NULL	NULL	NULL	NULL	NULL[0m
[31m  P2	E6	55	CALM	Code	30000	Vienna[0m
[31m  P6	E6	NULL	NULL	NULL	NULL	NULL[0m
[31m  P5	E5	NULL	IRM	Test	10000	NULL[0m
[31m  P4	E4	NULL	NULL	NULL	NULL	NULL[0m
[31m  p4	E4	NULL	NULL	NULL	NULL	NULL[0m
[31m  P2	E3	100	CALM	Code	30000	Vienna[0m
[31m  P5	E3	100	IRM	Test	10000	NULL[0m
[31m  P6	E3	NULL	NULL	NULL	NULL	NULL[0m
[31m  P22	E22	NULL	NULL	NULL	NULL	NULL[0m
[31m  P1	E2	NULL	NULL	NULL	NULL	NULL[0m
[31m  P2	E2	NULL	CALM	Code	30000	Vienna[0m
[31m  P18	E18	NULL	NULL	NULL	NULL	NULL[0m
[31m  P1	E1	NULL	NULL	NULL	NULL	NULL[0m
[31m  P2	E1	NULL	CALM	Code	30000	Vienna[0m
[31m  P4	E1	NULL	NULL	NULL	NULL	NULL[0m
[31m  P5	E1	NULL	IRM	Test	10000	NULL[0m
[31m  P6	E1	NULL	NULL	NULL	NULL	NULL[0m
[31m  P7	E1	NULL	PROGRAM	RISC	15000	Gaithersburg[0m
[31m  p2	E1	NULL	NULL	NULL	NULL	NULL (HiveComparisonTest.scala:366)[0m
[33m- 0761 !!! IGNORED !!![0m
[33m- 0762 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT EMPNAME, CITY, T_DECIMAL FROM HU.STAFF LEFT OUTER JOIN SEVEN_TYPES ON -GRADE / 11 BETWEEN T_REAL AND T_DECIMAL ORDER BY EMPNAME
Calcite parsing passed, start to transform. SELECT EMPNAME, CITY, T_DECIMAL FROM HU.STAFF LEFT OUTER JOIN SEVEN_TYPES ON -GRADE / 11 BETWEEN T_REAL AND T_DECIMAL ORDER BY EMPNAME
Calcite parsing passed, start to transform. SELECT EMPNAME, CITY, T_DECIMAL FROM HU.STAFF LEFT OUTER JOIN SEVEN_TYPES ON -GRADE / 11 BETWEEN T_REAL AND T_DECIMAL ORDER BY EMPNAME
[31m- 0763 *** FAILED ***[0m
[31m  Results do not match for 0763:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['EMPNAME ASC], true[0m
[31m   'Project ['EMPNAME,'CITY,'T_DECIMAL][0m
[31m    'Join LeftOuter, Some((((-'GRADE / 11) >= 'T_REAL) && ((-'GRADE / 11) <= 'T_DECIMAL)))[0m
[31m     'UnresolvedRelation [HU,STAFF], None[0m
[31m     'UnresolvedRelation [SEVEN_TYPES], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  EMPNAME: string, CITY: string, T_DECIMAL: double[0m
[31m  Sort [EMPNAME#23663 ASC], true[0m
[31m   Project [EMPNAME#23663,CITY#23665,T_DECIMAL#23669][0m
[31m    Join LeftOuter, Some((((-GRADE#23664 / cast(11 as double)) >= cast(T_REAL#23670 as double)) && ((-GRADE#23664 / cast(11 as double)) <= T_DECIMAL#23669)))[0m
[31m     MetastoreRelation hu, staff, None[0m
[31m     MetastoreRelation FLATER, seven_types, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Sort [EMPNAME#23663 ASC], true[0m
[31m   Project [EMPNAME#23663,CITY#23665,T_DECIMAL#23669][0m
[31m    Join LeftOuter, Some((((-GRADE#23664 / 11.0) >= cast(T_REAL#23670 as double)) && ((-GRADE#23664 / 11.0) <= T_DECIMAL#23669)))[0m
[31m     Project [CITY#23665,EMPNAME#23663,GRADE#23664][0m
[31m      MetastoreRelation hu, staff, None[0m
[31m     Project [T_DECIMAL#23669,T_REAL#23670][0m
[31m      MetastoreRelation FLATER, seven_types, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenSort [EMPNAME#23663 ASC], true, 0[0m
[31m   ConvertToUnsafe[0m
[31m    Exchange rangepartitioning(EMPNAME#23663 ASC)[0m
[31m     ConvertToSafe[0m
[31m      TungstenProject [EMPNAME#23663,CITY#23665,T_DECIMAL#23669][0m
[31m       BroadcastNestedLoopJoin BuildLeft, LeftOuter, Some((((-GRADE#23664 / 11.0) >= cast(T_REAL#23670 as double)) && ((-GRADE#23664 / 11.0) <= T_DECIMAL#23669)))[0m
[31m        HiveTableScan [CITY#23665,EMPNAME#23663,GRADE#23664], (MetastoreRelation hu, staff, None)[0m
[31m        HiveTableScan [T_DECIMAL#23669,T_REAL#23670], (MetastoreRelation FLATER, seven_types, None)[0m
  
[31m  Code Generation: true[0m
[31m  EMPNAME	CITY	T_DECIMAL[0m
[31m  !== HIVE - 4 row(s) ==        == CATALYST - 4 row(s) ==[0m
[31m  !Fidel	Havana	0               Fidel	Havana	0.0[0m
[31m  !Fidel	Havana	0               Fidel	Havana	0.0[0m
[31m   SULLIVAN	Gaithersburg	NULL   SULLIVAN	Gaithersburg	NULL[0m
[31m   ff	gg	NULL                   ff	gg	NULL (HiveComparisonTest.scala:433)[0m
Calcite parsing passed, start to transform. SELECT T_INT, T_CHAR, EMPNAME, EMPNUM, GRADE FROM SEVEN_TYPES RIGHT JOIN HU.STAFF ON GRADE IN (10, 11, 13) AND EMPNUM = T_CHAR ORDER BY EMPNAME, T_INT
Calcite parsing passed, start to transform. SELECT T_INT, T_CHAR, EMPNAME, EMPNUM, GRADE FROM SEVEN_TYPES RIGHT JOIN HU.STAFF ON GRADE IN (10, 11, 13) AND EMPNUM = T_CHAR ORDER BY EMPNAME, T_INT
Calcite parsing passed, start to transform. SELECT T_INT, T_CHAR, EMPNAME, EMPNUM, GRADE FROM SEVEN_TYPES RIGHT JOIN HU.STAFF ON GRADE IN (10, 11, 13) AND EMPNUM = T_CHAR ORDER BY EMPNAME, T_INT
[31m- 0764 *** FAILED ***[0m
[31m  Results do not match for 0764:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['EMPNAME ASC,'T_INT ASC], true[0m
[31m   'Project ['T_INT,'T_CHAR,'EMPNAME,'EMPNUM,'GRADE][0m
[31m    'Join RightOuter, Some(('GRADE IN (10,11,13) && ('EMPNUM = 'T_CHAR)))[0m
[31m     'UnresolvedRelation [SEVEN_TYPES], None[0m
[31m     'UnresolvedRelation [HU,STAFF], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  T_INT: double, T_CHAR: string, EMPNAME: string, EMPNUM: string, GRADE: double[0m
[31m  Sort [EMPNAME#24313 ASC,T_INT#24305 ASC], true[0m
[31m   Project [T_INT#24305,T_CHAR#24306,EMPNAME#24313,EMPNUM#24312,GRADE#24314][0m
[31m    Join RightOuter, Some((GRADE#24314 IN (cast(10 as double),cast(11 as double),cast(13 as double)) && (EMPNUM#24312 = T_CHAR#24306)))[0m
[31m     MetastoreRelation FLATER, seven_types, None[0m
[31m     MetastoreRelation hu, staff, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Sort [EMPNAME#24313 ASC,T_INT#24305 ASC], true[0m
[31m   Project [T_INT#24305,T_CHAR#24306,EMPNAME#24313,EMPNUM#24312,GRADE#24314][0m
[31m    Join RightOuter, Some((GRADE#24314 IN (10.0,11.0,13.0) && (EMPNUM#24312 = T_CHAR#24306)))[0m
[31m     Project [T_INT#24305,T_CHAR#24306][0m
[31m      MetastoreRelation FLATER, seven_types, None[0m
[31m     Project [EMPNAME#24313,GRADE#24314,EMPNUM#24312][0m
[31m      MetastoreRelation hu, staff, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenSort [EMPNAME#24313 ASC,T_INT#24305 ASC], true, 0[0m
[31m   ConvertToUnsafe[0m
[31m    Exchange rangepartitioning(EMPNAME#24313 ASC,T_INT#24305 ASC)[0m
[31m     ConvertToSafe[0m
[31m      TungstenProject [T_INT#24305,T_CHAR#24306,EMPNAME#24313,EMPNUM#24312,GRADE#24314][0m
[31m       BroadcastHashOuterJoin [T_CHAR#24306], [EMPNUM#24312], RightOuter, Some(GRADE#24314 IN (10.0,11.0,13.0))[0m
[31m        ConvertToUnsafe[0m
[31m         HiveTableScan [T_INT#24305,T_CHAR#24306], (MetastoreRelation FLATER, seven_types, None)[0m
[31m        ConvertToUnsafe[0m
[31m         HiveTableScan [EMPNAME#24313,GRADE#24314,EMPNUM#24312], (MetastoreRelation hu, staff, None)[0m
  
[31m  Code Generation: true[0m
[31m  T_INT	T_CHAR	EMPNAME	EMPNUM	GRADE[0m
[31m  !== HIVE - 3 row(s) ==      == CATALYST - 3 row(s) ==[0m
[31m  !NULL	NULL	Fidel	E6	0       NULL	NULL	Fidel	E6	0.0[0m
[31m  !NULL	NULL	SULLIVAN	E7	15   NULL	NULL	SULLIVAN	E7	15.0[0m
[31m  !NULL	NULL	ff	E13	82        NULL	NULL	ff	E13	82.0 (HiveComparisonTest.scala:433)[0m
Calcite parsing passed, start to transform. SELECT HU.STAFF.CITY,EMPNAME,PNAME,BUDGET FROM HU.STAFF LEFT JOIN HU.PROJ ON HU.STAFF.CITY = HU.PROJ.CITY AND HU.STAFF.CITY <> 'Vienna' AND EMPNAME <> 'Don' WHERE BUDGET > 15000 OR BUDGET IS NULL ORDER BY HU.STAFF.CITY, EMPNAME, BUDGET
[31m- 0765 *** FAILED ***[0m
[31m  Failed to generate golden answer for query:[0m
[31m  Error: FAILED: SemanticException Line 1:23 Invalid path ''/home/cherry/sotc_cloud-panthera-nist-test/plusd/0765/PROJ.csv'': No files matching path file:/home/cherry/sotc_cloud-panthera-nist-test/plusd/0765/PROJ.csv[0m
[31m  org.apache.spark.sql.execution.QueryExecutionException: FAILED: SemanticException Line 1:23 Invalid path ''/home/cherry/sotc_cloud-panthera-nist-test/plusd/0765/PROJ.csv'': No files matching path file:/home/cherry/sotc_cloud-panthera-nist-test/plusd/0765/PROJ.csv[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper$$anonfun$runHive$1.apply(ClientWrapper.scala:433)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper$$anonfun$runHive$1.apply(ClientWrapper.scala:418)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper$$anonfun$withHiveState$1.apply(ClientWrapper.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper.retryLocked(ClientWrapper.scala:211)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper.withHiveState(ClientWrapper.scala:248)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper.runHive(ClientWrapper.scala:418)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper.runSqlHive(ClientWrapper.scala:408)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext.runSqlHive(HiveContext.scala:558)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext.runSqlHive(TestHive.scala:111)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$32.apply(HiveComparisonTest.scala:323)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$32.apply(HiveComparisonTest.scala:308)[0m
[31m  	at scala.runtime.Tuple3Zipped$$anonfun$map$extension$1.apply(Tuple3Zipped.scala:37)[0m
[31m  	at scala.runtime.Tuple3Zipped$$anonfun$map$extension$1.apply(Tuple3Zipped.scala:35)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.runtime.Tuple3Zipped$.map$extension(Tuple3Zipped.scala:35)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:308)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  LOAD DATA LOCAL INPATH '/home/cherry/sotc_cloud-panthera-nist-test/plusd/0765/PROJ.csv' OVERWRITE INTO TABLE PROJ (HiveComparisonTest.scala:343)[0m
Calcite parsing passed, start to transform. SELECT HU.STAFF.CITY,EMPNAME,PNAME,BUDGET FROM HU.STAFF LEFT JOIN HU.PROJ ON HU.STAFF.CITY = HU.PROJ.CITY AND HU.STAFF.CITY <> 'Vienna' WHERE (BUDGET > 15000 OR BUDGET IS NULL) AND EMPNAME <> 'Don' ORDER BY HU.STAFF.CITY, EMPNAME, BUDGET
[31m- 0766 *** FAILED ***[0m
[31m  Failed to generate golden answer for query:[0m
[31m  Error: FAILED: SemanticException Line 1:23 Invalid path ''/home/cherry/sotc_cloud-panthera-nist-test/plusd/0766/PROJ.csv'': No files matching path file:/home/cherry/sotc_cloud-panthera-nist-test/plusd/0766/PROJ.csv[0m
[31m  org.apache.spark.sql.execution.QueryExecutionException: FAILED: SemanticException Line 1:23 Invalid path ''/home/cherry/sotc_cloud-panthera-nist-test/plusd/0766/PROJ.csv'': No files matching path file:/home/cherry/sotc_cloud-panthera-nist-test/plusd/0766/PROJ.csv[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper$$anonfun$runHive$1.apply(ClientWrapper.scala:433)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper$$anonfun$runHive$1.apply(ClientWrapper.scala:418)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper$$anonfun$withHiveState$1.apply(ClientWrapper.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper.retryLocked(ClientWrapper.scala:211)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper.withHiveState(ClientWrapper.scala:248)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper.runHive(ClientWrapper.scala:418)[0m
[31m  	at org.apache.spark.sql.hive.client.ClientWrapper.runSqlHive(ClientWrapper.scala:408)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext.runSqlHive(HiveContext.scala:558)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext.runSqlHive(TestHive.scala:111)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$32.apply(HiveComparisonTest.scala:323)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$32.apply(HiveComparisonTest.scala:308)[0m
[31m  	at scala.runtime.Tuple3Zipped$$anonfun$map$extension$1.apply(Tuple3Zipped.scala:37)[0m
[31m  	at scala.runtime.Tuple3Zipped$$anonfun$map$extension$1.apply(Tuple3Zipped.scala:35)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.runtime.Tuple3Zipped$.map$extension(Tuple3Zipped.scala:35)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:308)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  LOAD DATA LOCAL INPATH '/home/cherry/sotc_cloud-panthera-nist-test/plusd/0766/PROJ.csv' OVERWRITE INTO TABLE PROJ (HiveComparisonTest.scala:343)[0m
Calcite parsing passed, start to transform. SELECT XX.T_INT, YY.T_INT FROM SEVEN_TYPES XX RIGHT OUTER JOIN SEVEN_TYPES YY ON XX.T_INT = YY.T_INT +1 ORDER BY YY.T_INT
Calcite parsing passed, start to transform. SELECT XX.T_INT, YY.T_INT FROM SEVEN_TYPES XX RIGHT OUTER JOIN SEVEN_TYPES YY ON XX.T_INT = YY.T_INT +1 ORDER BY YY.T_INT
Calcite parsing passed, start to transform. SELECT XX.T_INT, YY.T_INT FROM SEVEN_TYPES XX RIGHT OUTER JOIN SEVEN_TYPES YY ON XX.T_INT = YY.T_INT +1 ORDER BY YY.T_INT
[31m- 0767 *** FAILED ***[0m
[31m  Results do not match for 0767:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['YY.T_INT ASC], true[0m
[31m   'Project ['XX.T_INT,'YY.T_INT][0m
[31m    'Join RightOuter, Some(('XX.T_INT = ('YY.T_INT + 1)))[0m
[31m     'UnresolvedRelation [SEVEN_TYPES], Some(XX)[0m
[31m     'UnresolvedRelation [SEVEN_TYPES], Some(YY)[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  T_INT: double, T_INT: double[0m
[31m  Sort [T_INT#24852 ASC], true[0m
[31m   Project [T_INT#24845,T_INT#24852][0m
[31m    Join RightOuter, Some((T_INT#24845 = (T_INT#24852 + cast(1 as double))))[0m
[31m     MetastoreRelation FLATER, seven_types, Some(XX)[0m
[31m     MetastoreRelation FLATER, seven_types, Some(YY)[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Sort [T_INT#24852 ASC], true[0m
[31m   Project [T_INT#24845,T_INT#24852][0m
[31m    Join RightOuter, Some((T_INT#24845 = (T_INT#24852 + 1.0)))[0m
[31m     Project [T_INT#24845][0m
[31m      MetastoreRelation FLATER, seven_types, Some(XX)[0m
[31m     Project [T_INT#24852][0m
[31m      MetastoreRelation FLATER, seven_types, Some(YY)[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenSort [T_INT#24852 ASC], true, 0[0m
[31m   ConvertToUnsafe[0m
[31m    Exchange rangepartitioning(T_INT#24852 ASC)[0m
[31m     ConvertToSafe[0m
[31m      TungstenProject [T_INT#24845,T_INT#24852][0m
[31m       BroadcastHashOuterJoin [T_INT#24845], [(T_INT#24852 + 1.0)], RightOuter, None[0m
[31m        ConvertToUnsafe[0m
[31m         HiveTableScan [T_INT#24845], (MetastoreRelation FLATER, seven_types, Some(XX))[0m
[31m        ConvertToUnsafe[0m
[31m         HiveTableScan [T_INT#24852], (MetastoreRelation FLATER, seven_types, Some(YY))[0m
  
[31m  Code Generation: true[0m
[31m  T_INT	T_INT[0m
[31m  !== HIVE - 5 row(s) ==   == CATALYST - 5 row(s) ==[0m
[31m  !2	1                     2.0	1.0[0m
[31m  !3	2                     3.0	2.0[0m
[31m  !NULL	3                  NULL	3.0[0m
[31m  !NULL	12                 NULL	12.0[0m
[31m  !NULL	12                 NULL	12.0 (HiveComparisonTest.scala:433)[0m
Calcite parsing passed, start to transform. SELECT GRADE, T_FLOAT, T_DOUBLE FROM HU.STAFF LEFT JOIN SEVEN_TYPES T7 ON GRADE * -40 > T7.T_FLOAT OR (T_DOUBLE -542.5 < GRADE AND T_DOUBLE -541.5 > GRADE) ORDER BY GRADE
Calcite parsing passed, start to transform. SELECT GRADE, T_FLOAT, T_DOUBLE FROM HU.STAFF LEFT JOIN SEVEN_TYPES T7 ON GRADE * -40 > T7.T_FLOAT OR (T_DOUBLE -542.5 < GRADE AND T_DOUBLE -541.5 > GRADE) ORDER BY GRADE
Calcite parsing passed, start to transform. SELECT GRADE, T_FLOAT, T_DOUBLE FROM HU.STAFF LEFT JOIN SEVEN_TYPES T7 ON GRADE * -40 > T7.T_FLOAT OR (T_DOUBLE -542.5 < GRADE AND T_DOUBLE -541.5 > GRADE) ORDER BY GRADE
[31m- 0768 *** FAILED ***[0m
[31m  Results do not match for 0768:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['GRADE ASC], true[0m
[31m   'Project ['GRADE,'T_FLOAT,'T_DOUBLE][0m
[31m    'Join LeftOuter, Some(((('GRADE * -40) > 'T7.T_FLOAT) || ((('T_DOUBLE - 542.5) < 'GRADE) && (('T_DOUBLE - 541.5) > 'GRADE))))[0m
[31m     'UnresolvedRelation [HU,STAFF], None[0m
[31m     'UnresolvedRelation [SEVEN_TYPES], Some(T7)[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  GRADE: double, T_FLOAT: float, T_DOUBLE: float[0m
[31m  Sort [GRADE#25267 ASC], true[0m
[31m   Project [GRADE#25267,T_FLOAT#25274,T_DOUBLE#25275][0m
[31m    Join LeftOuter, Some((((GRADE#25267 * cast(-40 as double)) > cast(T_FLOAT#25274 as double)) || (((cast(T_DOUBLE#25275 as double) - cast(542.5 as double)) < GRADE#25267) && ((cast(T_DOUBLE#25275 as double) - cast(541.5 as double)) > GRADE#25267))))[0m
[31m     MetastoreRelation hu, staff, None[0m
[31m     MetastoreRelation FLATER, seven_types, Some(T7)[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Sort [GRADE#25267 ASC], true[0m
[31m   Project [GRADE#25267,T_FLOAT#25274,T_DOUBLE#25275][0m
[31m    Join LeftOuter, Some((((GRADE#25267 * -40.0) > cast(T_FLOAT#25274 as double)) || (((cast(T_DOUBLE#25275 as double) - 542.5) < GRADE#25267) && ((cast(T_DOUBLE#25275 as double) - 541.5) > GRADE#25267))))[0m
[31m     Project [GRADE#25267][0m
[31m      MetastoreRelation hu, staff, None[0m
[31m     Project [T_FLOAT#25274,T_DOUBLE#25275][0m
[31m      MetastoreRelation FLATER, seven_types, Some(T7)[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenSort [GRADE#25267 ASC], true, 0[0m
[31m   ConvertToUnsafe[0m
[31m    Exchange rangepartitioning(GRADE#25267 ASC)[0m
[31m     ConvertToSafe[0m
[31m      TungstenProject [GRADE#25267,T_FLOAT#25274,T_DOUBLE#25275][0m
[31m       BroadcastNestedLoopJoin BuildLeft, LeftOuter, Some((((GRADE#25267 * -40.0) > cast(T_FLOAT#25274 as double)) || (((cast(T_DOUBLE#25275 as double) - 542.5) < GRADE#25267) && ((cast(T_DOUBLE#25275 as double) - 541.5) > GRADE#25267))))[0m
[31m        HiveTableScan [GRADE#25267], (MetastoreRelation hu, staff, None)[0m
[31m        HiveTableScan [T_FLOAT#25274,T_DOUBLE#25275], (MetastoreRelation FLATER, seven_types, Some(T7))[0m
  
[31m  Code Generation: true[0m
[31m  GRADE	T_FLOAT	T_DOUBLE[0m
[31m  !== HIVE - 3 row(s) ==   == CATALYST - 3 row(s) ==[0m
[31m  !0	-444	-55              0.0	-444.0	-55.0[0m
[31m  !15	NULL	NULL            15.0	NULL	NULL[0m
[31m  !82	NULL	NULL            82.0	NULL	NULL (HiveComparisonTest.scala:433)[0m
[33m- 0769 !!! IGNORED !!![0m
[33m- 0770 !!! IGNORED !!![0m
[33m- 0771 !!! IGNORED !!![0m
[33m- 0772 !!! IGNORED !!![0m
[33m- 0773 !!! IGNORED !!![0m
[33m- 0774 !!! IGNORED !!![0m
[33m- 0775 !!! IGNORED !!![0m
[33m- 0776 !!! IGNORED !!![0m
[33m- 0777 !!! IGNORED !!![0m
[33m- 0778 !!! IGNORED !!![0m
[33m- 0779 !!! IGNORED !!![0m
[33m- 0780 !!! IGNORED !!![0m
[33m- 0781 !!! IGNORED !!![0m
[33m- 0782 !!! IGNORED !!![0m
[33m- 0784 !!! IGNORED !!![0m
[33m- 0785 !!! IGNORED !!![0m
[33m- 0786 !!! IGNORED !!![0m
[33m- 0787 !!! IGNORED !!![0m
[33m- 0788 !!! IGNORED !!![0m
[33m- 0789 !!! IGNORED !!![0m
[33m- 0790 !!! IGNORED !!![0m
[33m- 0791 !!! IGNORED !!![0m
[33m- 0792 !!! IGNORED !!![0m
[33m- 0793 !!! IGNORED !!![0m
[33m- 0794 !!! IGNORED !!![0m
[33m- 0795 !!! IGNORED !!![0m
[33m- 0796 !!! IGNORED !!![0m
[33m- 0797 !!! IGNORED !!![0m
[33m- 0798 !!! IGNORED !!![0m
[33m- 0799 !!! IGNORED !!![0m
[33m- 0800 !!! IGNORED !!![0m
[33m- 0801 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT SALARY, EMPNAME, HOURS, CITY FROM CTS1.STAFFb WHERE NULLIF(SALARY,HOURS) IS NULL ORDER BY EMPNAME
user-defined function.
[31m- 0802 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: undefined function NULLIF;[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2$$anonfun$1.apply(hiveUDFs.scala:58)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2$$anonfun$1.apply(hiveUDFs.scala:58)[0m
[31m  	at scala.Option.getOrElse(Option.scala:120)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2.apply(hiveUDFs.scala:57)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2.apply(hiveUDFs.scala:53)[0m
[31m  	at scala.util.Try.getOrElse(Try.scala:77)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry.lookupFunction(hiveUDFs.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5$$anonfun$applyOrElse$23.apply(Analyzer.scala:490)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5$$anonfun$applyOrElse$23.apply(Analyzer.scala:490)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$.withPosition(package.scala:48)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5.applyOrElse(Analyzer.scala:489)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5.applyOrElse(Analyzer.scala:486)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:227)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:227)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:226)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionDown$1(QueryPlan.scala:76)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:86)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:94)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown(QueryPlan.scala:94)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions(QueryPlan.scala:65)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10.applyOrElse(Analyzer.scala:486)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10.applyOrElse(Analyzer.scala:484)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$.apply(Analyzer.scala:484)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$.apply(Analyzer.scala:483)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:83)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:80)[0m
[31m  	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m
[31m  	at scala.collection.immutable.List.foldLeft(List.scala:84)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:80)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:72)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:72)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed$lzycompute(TestHive.scala:195)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed(TestHive.scala:180)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['EMPNAME ASC], true[0m
[31m   'Project ['SALARY,'EMPNAME,'HOURS,'CITY][0m
[31m    'Filter isnull('NULLIF('SALARY,'HOURS))[0m
[31m     'UnresolvedRelation [CTS1,STAFFB], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == HIVE - 2 row(s) ==[0m
[31m  10000	Kilroy	10000	Athens[0m
[31m  NULL	Nickos	NULL	Rhodes (HiveComparisonTest.scala:366)[0m
Calcite parsing passed, start to transform. SELECT SALARY,PNUM,HOURS,NULLIF(EMPNAME,CITY) FROM CTS1.STAFFb WHERE EMPNAME = CITY OR EMPNAME IS NULL ORDER BY PNUM
user-defined function.
[31m- 0803 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: undefined function NULLIF;[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2$$anonfun$1.apply(hiveUDFs.scala:58)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2$$anonfun$1.apply(hiveUDFs.scala:58)[0m
[31m  	at scala.Option.getOrElse(Option.scala:120)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2.apply(hiveUDFs.scala:57)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2.apply(hiveUDFs.scala:53)[0m
[31m  	at scala.util.Try.getOrElse(Try.scala:77)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry.lookupFunction(hiveUDFs.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5$$anonfun$applyOrElse$23.apply(Analyzer.scala:490)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5$$anonfun$applyOrElse$23.apply(Analyzer.scala:490)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$.withPosition(package.scala:48)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5.applyOrElse(Analyzer.scala:489)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5.applyOrElse(Analyzer.scala:486)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:227)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:227)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:226)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionDown$1(QueryPlan.scala:76)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:86)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1$1.apply(QueryPlan.scala:90)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:90)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:94)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown(QueryPlan.scala:94)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions(QueryPlan.scala:65)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10.applyOrElse(Analyzer.scala:486)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10.applyOrElse(Analyzer.scala:484)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$.apply(Analyzer.scala:484)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$.apply(Analyzer.scala:483)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:83)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:80)[0m
[31m  	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m
[31m  	at scala.collection.immutable.List.foldLeft(List.scala:84)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:80)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:72)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:72)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed$lzycompute(TestHive.scala:195)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed(TestHive.scala:180)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['PNUM ASC], true[0m
[31m   'Project ['SALARY,'PNUM,'HOURS,'NULLIF('EMPNAME,'CITY) AS c3#25826][0m
[31m    'Filter (('EMPNAME = 'CITY) || isnull('EMPNAME))[0m
[31m     'UnresolvedRelation [CTS1,STAFFB], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == HIVE - 2 row(s) ==[0m
[31m  15000	P6	20000	NULL[0m
[31m  10005	P8	30000	NULL (HiveComparisonTest.scala:366)[0m
Calcite parsing passed, start to transform. SELECT SUM(NULLIF(NULLIF(SALARY,10000),20000)) FROM STAFFb
user-defined function.
user-defined function.
[31m- 0804 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: undefined function NULLIF;[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2$$anonfun$1.apply(hiveUDFs.scala:58)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2$$anonfun$1.apply(hiveUDFs.scala:58)[0m
[31m  	at scala.Option.getOrElse(Option.scala:120)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2.apply(hiveUDFs.scala:57)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2.apply(hiveUDFs.scala:53)[0m
[31m  	at scala.util.Try.getOrElse(Try.scala:77)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry.lookupFunction(hiveUDFs.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5$$anonfun$applyOrElse$23.apply(Analyzer.scala:490)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5$$anonfun$applyOrElse$23.apply(Analyzer.scala:490)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$.withPosition(package.scala:48)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5.applyOrElse(Analyzer.scala:489)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5.applyOrElse(Analyzer.scala:486)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:227)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:227)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:226)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4$$anonfun$apply$7.apply(TreeNode.scala:268)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:266)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionDown$1(QueryPlan.scala:76)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:86)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1$1.apply(QueryPlan.scala:90)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:90)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:94)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown(QueryPlan.scala:94)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions(QueryPlan.scala:65)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10.applyOrElse(Analyzer.scala:486)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10.applyOrElse(Analyzer.scala:484)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$.apply(Analyzer.scala:484)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$.apply(Analyzer.scala:483)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:83)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:80)[0m
[31m  	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m
[31m  	at scala.collection.immutable.List.foldLeft(List.scala:84)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:80)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:72)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:72)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed$lzycompute(TestHive.scala:195)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed(TestHive.scala:180)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Project [sum('NULLIF('NULLIF('SALARY,10000),20000)) AS c0#25948][0m
[31m   'UnresolvedRelation [STAFFB], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == HIVE - 1 row(s) ==[0m
[31m  195016 (HiveComparisonTest.scala:366)[0m
[33m- 0805 !!! IGNORED !!![0m
[33m- 0806 !!! IGNORED !!![0m
[33m- 0807 !!! IGNORED !!![0m
[33m- 0808 !!! IGNORED !!![0m
[33m- 0809 !!! IGNORED !!![0m
[33m- 0810 !!! IGNORED !!![0m
[33m- 0811 !!! IGNORED !!![0m
[33m- 0812 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM   STAFF WHERE  'Equal_literal' NOT LIKE 'Eq_alS_literal%' ESCAPE 'S'
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM   STAFF WHERE  'Equal_literal' NOT LIKE 'Eq_alS_literal%' ESCAPE 'S'
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM   STAFF WHERE  'Equal_literal' NOT LIKE 'Eq_alS_literal%' ESCAPE 'S'
[31m- 0813 *** FAILED ***[0m
[31m  Results do not match for 0813:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project [count(1) AS c0#26224L][0m
[31m   'Filter NOT Equal_literal LIKE Eq_alS_literal%[0m
[31m    'UnresolvedRelation [STAFF], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: bigint[0m
[31m  Aggregate [count(1) AS c0#26224L][0m
[31m   Filter NOT Equal_literal LIKE Eq_alS_literal%[0m
[31m    MetastoreRelation CTS1, staff, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Aggregate [count(1) AS c0#26224L][0m
[31m   Project[0m
[31m    MetastoreRelation CTS1, staff, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenAggregate(key=[], functions=[(count(1),mode=Final,isDistinct=false)], output=[c0#26224L])[0m
[31m   TungstenExchange SinglePartition[0m
[31m    TungstenAggregate(key=[], functions=[(count(1),mode=Partial,isDistinct=false)], output=[currentCount#26231L])[0m
[31m     HiveTableScan (MetastoreRelation CTS1, staff, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !0                       5 (HiveComparisonTest.scala:433)[0m
[33m- 0815 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM   STAFF WHERE  EMPNAME LIKE CITY ESCAPE 'S'
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM   STAFF WHERE  EMPNAME LIKE CITY ESCAPE 'S'
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM   STAFF WHERE  EMPNAME LIKE CITY ESCAPE 'S'
[31m- 0816 *** FAILED ***[0m
[31m  Results do not match for 0816:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project [count(1) AS c0#26756L][0m
[31m   'Filter 'EMPNAME LIKE 'CITY[0m
[31m    'UnresolvedRelation [STAFF], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: bigint[0m
[31m  Aggregate [count(1) AS c0#26756L][0m
[31m   Filter EMPNAME#26758 LIKE CITY#26760[0m
[31m    MetastoreRelation CTS1, staff, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Aggregate [count(1) AS c0#26756L][0m
[31m   Project[0m
[31m    Filter EMPNAME#26758 LIKE CITY#26760[0m
[31m     MetastoreRelation CTS1, staff, None[0m
  
[31m  == Physical Plan ==[0m
[31m  TungstenAggregate(key=[], functions=[(count(1),mode=Final,isDistinct=false)], output=[c0#26756L])[0m
[31m   TungstenExchange SinglePartition[0m
[31m    TungstenAggregate(key=[], functions=[(count(1),mode=Partial,isDistinct=false)], output=[currentCount#26763L])[0m
[31m     Project[0m
[31m      Filter EMPNAME#26758 LIKE CITY#26760[0m
[31m       HiveTableScan [EMPNAME#26758,CITY#26760], (MetastoreRelation CTS1, staff, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !1                       0 (HiveComparisonTest.scala:433)[0m
[33m- 0817 !!! IGNORED !!![0m
[33m- 0818 !!! IGNORED !!![0m
[33m- 0819 !!! IGNORED !!![0m
[33m- 0820 !!! IGNORED !!![0m
[33m- 0821 !!! IGNORED !!![0m
[33m- 0822 !!! IGNORED !!![0m
[33m- 0823 !!! IGNORED !!![0m
[33m- 0824 !!! IGNORED !!![0m
[33m- 0825 !!! IGNORED !!![0m
[33m- 0826 !!! IGNORED !!![0m
[33m- 0827 !!! IGNORED !!![0m
[33m- 0828 !!! IGNORED !!![0m
[33m- 0829 !!! IGNORED !!![0m
[33m- 0830 !!! IGNORED !!![0m
[33m- 0831 !!! IGNORED !!![0m
[33m- 0832 !!! IGNORED !!![0m
[33m- 0833 !!! IGNORED !!![0m
[33m- 0834 !!! IGNORED !!![0m
[33m- 0835 !!! IGNORED !!![0m
[33m- 0836 !!! IGNORED !!![0m
[33m- 0837 !!! IGNORED !!![0m
[33m- 0838 !!! IGNORED !!![0m
[33m- 0839 !!! IGNORED !!![0m
[33m- 0840 !!! IGNORED !!![0m
[33m- 0841 !!! IGNORED !!![0m
[33m- 0842 !!! IGNORED !!![0m
[33m- 0843 !!! IGNORED !!![0m
[33m- 0844 !!! IGNORED !!![0m
[33m- 0845 !!! IGNORED !!![0m
[33m- 0846 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(CSTR1) FROM TAB734 WHERE CSTR1 <> N' * '
[32m- 0847[0m
Calcite parsing passed, start to transform. SELECT COUNT(CSTR2) FROM TAB734 WHERE N'++++' <> CSTR2
[32m- 0848[0m
[33m- 0849 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(ALL 115.5), COUNT(ALL 'ATHINA'), COUNT(ALL 255), COUNT(*) FROM CL_DATA_TYPE
Calcite parsing passed, start to transform. SELECT COUNT(ALL 115.5), COUNT(ALL 'ATHINA'), COUNT(ALL 255), COUNT(*) FROM CL_DATA_TYPE
Calcite parsing passed, start to transform. SELECT COUNT(ALL 115.5), COUNT(ALL 'ATHINA'), COUNT(ALL 255), COUNT(*) FROM CL_DATA_TYPE
[31m- 0850 *** FAILED ***[0m
[31m  Results do not match for 0850:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project [COUNT(DISTINCT 115.5) AS c0#27318L,COUNT(DISTINCT ATHINA) AS c1#27319L,COUNT(DISTINCT 255) AS c2#27320L,count(1) AS c3#27321L][0m
[31m   'UnresolvedRelation [CL_DATA_TYPE], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: bigint, c1: bigint, c2: bigint, c3: bigint[0m
[31m  Aggregate [COUNT(DISTINCT 115.5) AS c0#27318L,COUNT(DISTINCT ATHINA) AS c1#27319L,COUNT(DISTINCT 255) AS c2#27320L,count(1) AS c3#27321L][0m
[31m   MetastoreRelation CTS1, cl_data_type, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Aggregate [COUNT(DISTINCT 115.5) AS c0#27318L,COUNT(DISTINCT ATHINA) AS c1#27319L,COUNT(DISTINCT 255) AS c2#27320L,count(1) AS c3#27321L][0m
[31m   Project[0m
[31m    MetastoreRelation CTS1, cl_data_type, None[0m
  
[31m  == Physical Plan ==[0m
[31m  Aggregate false, [CombineAndCount(partialSets#27326) AS c0#27318L,CombineAndCount(partialSets#27327) AS c1#27319L,CombineAndCount(partialSets#27328) AS c2#27320L,coalesce(sum(PartialCount#27329L),0) AS c3#27321L][0m
[31m   Exchange SinglePartition[0m
[31m    Aggregate true, [AddToHashSet(115.5) AS partialSets#27326,AddToHashSet(ATHINA) AS partialSets#27327,AddToHashSet(255) AS partialSets#27328,count(1) AS PartialCount#27329L][0m
[31m     HiveTableScan (MetastoreRelation CTS1, cl_data_type, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0	c1	c2	c3[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !6	6	6	6                 1	1	1	6 (HiveComparisonTest.scala:433)[0m
Calcite parsing passed, start to transform. SELECT COUNT(*),COUNT(ALL 119), COUNT(ALL 'GIORGOS') , COUNT(CL_CHAR), COUNT(CL_REAL) FROM CL_DATA_TYPE
Calcite parsing passed, start to transform. SELECT COUNT(*),COUNT(ALL 119), COUNT(ALL 'GIORGOS') , COUNT(CL_CHAR), COUNT(CL_REAL) FROM CL_DATA_TYPE
Calcite parsing passed, start to transform. SELECT COUNT(*),COUNT(ALL 119), COUNT(ALL 'GIORGOS') , COUNT(CL_CHAR), COUNT(CL_REAL) FROM CL_DATA_TYPE
[31m- 0851 *** FAILED ***[0m
[31m  Results do not match for 0851:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project [count(1) AS c0#27589L,COUNT(DISTINCT 119) AS c1#27590L,COUNT(DISTINCT GIORGOS) AS c2#27591L,count('CL_CHAR) AS c3#27592,count('CL_REAL) AS c4#27593][0m
[31m   'UnresolvedRelation [CL_DATA_TYPE], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: bigint, c1: bigint, c2: bigint, c3: bigint, c4: bigint[0m
[31m  Aggregate [count(1) AS c0#27589L,COUNT(DISTINCT 119) AS c1#27590L,COUNT(DISTINCT GIORGOS) AS c2#27591L,count(CL_CHAR#27594) AS c3#27592L,count(CL_REAL#27597) AS c4#27593L][0m
[31m   MetastoreRelation CTS1, cl_data_type, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Aggregate [count(1) AS c0#27589L,COUNT(DISTINCT 119) AS c1#27590L,COUNT(DISTINCT GIORGOS) AS c2#27591L,count(CL_CHAR#27594) AS c3#27592L,count(CL_REAL#27597) AS c4#27593L][0m
[31m   Project [CL_CHAR#27594,CL_REAL#27597][0m
[31m    MetastoreRelation CTS1, cl_data_type, None[0m
  
[31m  == Physical Plan ==[0m
[31m  Aggregate false, [coalesce(sum(PartialCount#27598L),0) AS c0#27589L,CombineAndCount(partialSets#27599) AS c1#27590L,CombineAndCount(partialSets#27600) AS c2#27591L,coalesce(sum(PartialCount#27601L),0) AS c3#27592L,coalesce(sum(PartialCount#27602L),0) AS c4#27593L][0m
[31m   Exchange SinglePartition[0m
[31m    Aggregate true, [AddToHashSet(119) AS partialSets#27599,count(CL_CHAR#27594) AS PartialCount#27601L,count(CL_REAL#27597) AS PartialCount#27602L,AddToHashSet(GIORGOS) AS partialSets#27600,count(1) AS PartialCount#27598L][0m
[31m     HiveTableScan [CL_CHAR#27594,CL_REAL#27597], (MetastoreRelation CTS1, cl_data_type, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0	c1	c2	c3	c4[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !8	8	8	6	7               8	1	1	6	7 (HiveComparisonTest.scala:433)[0m
Calcite parsing passed, start to transform. SELECT COUNT(*), COUNT(ALL 1000), COUNT(ALL 'STEFOS'), COUNT(CL_CHAR), COUNT(CL_REAL) FROM CL_DATA_TYPE
Calcite parsing passed, start to transform. SELECT COUNT(*), COUNT(ALL 1000), COUNT(ALL 'STEFOS'), COUNT(CL_CHAR), COUNT(CL_REAL) FROM CL_DATA_TYPE
Calcite parsing passed, start to transform. SELECT COUNT(*), COUNT(ALL 1000), COUNT(ALL 'STEFOS'), COUNT(CL_CHAR), COUNT(CL_REAL) FROM CL_DATA_TYPE
[31m- 0852 *** FAILED ***[0m
[31m  Results do not match for 0852:[0m
[31m  == Parsed Logical Plan ==[0m
[31m  'Project [count(1) AS c0#27881L,COUNT(DISTINCT 1000) AS c1#27882L,COUNT(DISTINCT STEFOS) AS c2#27883L,count('CL_CHAR) AS c3#27884,count('CL_REAL) AS c4#27885][0m
[31m   'UnresolvedRelation [CL_DATA_TYPE], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  c0: bigint, c1: bigint, c2: bigint, c3: bigint, c4: bigint[0m
[31m  Aggregate [count(1) AS c0#27881L,COUNT(DISTINCT 1000) AS c1#27882L,COUNT(DISTINCT STEFOS) AS c2#27883L,count(CL_CHAR#27886) AS c3#27884L,count(CL_REAL#27889) AS c4#27885L][0m
[31m   MetastoreRelation CTS1, cl_data_type, None[0m
  
[31m  == Optimized Logical Plan ==[0m
[31m  Aggregate [count(1) AS c0#27881L,COUNT(DISTINCT 1000) AS c1#27882L,COUNT(DISTINCT STEFOS) AS c2#27883L,count(CL_CHAR#27886) AS c3#27884L,count(CL_REAL#27889) AS c4#27885L][0m
[31m   Project [CL_CHAR#27886,CL_REAL#27889][0m
[31m    MetastoreRelation CTS1, cl_data_type, None[0m
  
[31m  == Physical Plan ==[0m
[31m  Aggregate false, [coalesce(sum(PartialCount#27890L),0) AS c0#27881L,CombineAndCount(partialSets#27891) AS c1#27882L,CombineAndCount(partialSets#27892) AS c2#27883L,coalesce(sum(PartialCount#27893L),0) AS c3#27884L,coalesce(sum(PartialCount#27894L),0) AS c4#27885L][0m
[31m   Exchange SinglePartition[0m
[31m    Aggregate true, [count(CL_REAL#27889) AS PartialCount#27894L,AddToHashSet(STEFOS) AS partialSets#27892,AddToHashSet(1000) AS partialSets#27891,count(CL_CHAR#27886) AS PartialCount#27893L,count(1) AS PartialCount#27890L][0m
[31m     HiveTableScan [CL_CHAR#27886,CL_REAL#27889], (MetastoreRelation CTS1, cl_data_type, None)[0m
  
[31m  Code Generation: true[0m
[31m  c0	c1	c2	c3	c4[0m
[31m  !== HIVE - 1 row(s) ==   == CATALYST - 1 row(s) ==[0m
[31m  !9	9	9	6	7               9	1	1	6	7 (HiveComparisonTest.scala:433)[0m
[33m- 0853 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT EMPNAME, NULLIF (SALARY,HOURS) FROM CTS1.STAFFb WHERE SEX = 'M' AND PNUM NOT IN ('P1','P2','P3','P6','P8') AND (SALARY <> HOURS OR SALARY IS NULL OR HOURS IS NULL) ORDER BY PNUM
user-defined function.
[31m- 0854 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: undefined function NULLIF;[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2$$anonfun$1.apply(hiveUDFs.scala:58)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2$$anonfun$1.apply(hiveUDFs.scala:58)[0m
[31m  	at scala.Option.getOrElse(Option.scala:120)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2.apply(hiveUDFs.scala:57)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2.apply(hiveUDFs.scala:53)[0m
[31m  	at scala.util.Try.getOrElse(Try.scala:77)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry.lookupFunction(hiveUDFs.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5$$anonfun$applyOrElse$23.apply(Analyzer.scala:490)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5$$anonfun$applyOrElse$23.apply(Analyzer.scala:490)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$.withPosition(package.scala:48)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5.applyOrElse(Analyzer.scala:489)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5.applyOrElse(Analyzer.scala:486)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:227)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:227)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:226)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionDown$1(QueryPlan.scala:76)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:86)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1$1.apply(QueryPlan.scala:90)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:90)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:94)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown(QueryPlan.scala:94)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions(QueryPlan.scala:65)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10.applyOrElse(Analyzer.scala:486)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10.applyOrElse(Analyzer.scala:484)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$.apply(Analyzer.scala:484)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$.apply(Analyzer.scala:483)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:83)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:80)[0m
[31m  	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m
[31m  	at scala.collection.immutable.List.foldLeft(List.scala:84)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:80)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:72)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:72)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed$lzycompute(TestHive.scala:195)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed(TestHive.scala:180)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['PNUM ASC], true[0m
[31m   'Project ['EMPNAME,'NULLIF('SALARY,'HOURS) AS c1#28173][0m
[31m    'Filter ((('SEX = M) && NOT 'PNUM IN (P1,P2,P3,P6,P8)) && ((NOT ('SALARY = 'HOURS) || isnull('SALARY)) || isnull('HOURS)))[0m
[31m     'UnresolvedRelation [CTS1,STAFFB], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == HIVE - 6 row(s) ==[0m
[31m  Nickos	NULL[0m
[31m  Nickos	NULL[0m
[31m  George	10010[0m
[31m  George	10010[0m
[31m  Gregory	10001[0m
[31m  Gregory	10001 (HiveComparisonTest.scala:366)[0m
Calcite parsing passed, start to transform. SELECT NULLIF (EMPNAME,CITY), SALARY FROM CTS1.STAFFb WHERE SEX = 'M' AND PNUM NOT IN ('P1','P2','P3','P5','P7') AND (EMPNAME <> CITY OR EMPNAME IS NULL OR CITY IS NULL) ORDER BY PNUM
user-defined function.
[31m- 0855 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: undefined function NULLIF;[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2$$anonfun$1.apply(hiveUDFs.scala:58)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2$$anonfun$1.apply(hiveUDFs.scala:58)[0m
[31m  	at scala.Option.getOrElse(Option.scala:120)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2.apply(hiveUDFs.scala:57)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry$$anonfun$lookupFunction$2.apply(hiveUDFs.scala:53)[0m
[31m  	at scala.util.Try.getOrElse(Try.scala:77)[0m
[31m  	at org.apache.spark.sql.hive.HiveFunctionRegistry.lookupFunction(hiveUDFs.scala:53)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5$$anonfun$applyOrElse$23.apply(Analyzer.scala:490)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5$$anonfun$applyOrElse$23.apply(Analyzer.scala:490)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.package$.withPosition(package.scala:48)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5.applyOrElse(Analyzer.scala:489)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10$$anonfun$applyOrElse$5.applyOrElse(Analyzer.scala:486)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:227)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:227)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:226)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:232)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionDown$1(QueryPlan.scala:76)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:86)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1$1.apply(QueryPlan.scala:90)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:90)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:94)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsDown(QueryPlan.scala:94)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressions(QueryPlan.scala:65)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10.applyOrElse(Analyzer.scala:486)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$$anonfun$apply$10.applyOrElse(Analyzer.scala:484)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:54)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$.apply(Analyzer.scala:484)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions$.apply(Analyzer.scala:483)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:83)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:80)[0m
[31m  	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m
[31m  	at scala.collection.immutable.List.foldLeft(List.scala:84)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:80)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:72)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:72)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed$lzycompute(TestHive.scala:195)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed(TestHive.scala:180)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['PNUM ASC], true[0m
[31m   'Project ['NULLIF('EMPNAME,'CITY) AS c0#28295,'SALARY][0m
[31m    'Filter ((('SEX = M) && NOT 'PNUM IN (P1,P2,P3,P5,P7)) && ((NOT ('EMPNAME = 'CITY) || isnull('EMPNAME)) || isnull('CITY)))[0m
[31m     'UnresolvedRelation [CTS1,STAFFB], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: undefined function NULLIF;[0m
[31m  == HIVE - 6 row(s) ==[0m
[31m  Kilroy	10000[0m
[31m  Kilroy	10000[0m
[31m  NULL	10005[0m
[31m  NULL	10005[0m
[31m  Gregory	10001[0m
[31m  Gregory	10001 (HiveComparisonTest.scala:366)[0m
[33m- 0856 !!! IGNORED !!![0m
[33m- 0857 !!! IGNORED !!![0m
[33m- 0858 !!! IGNORED !!![0m
[33m- 0859 !!! IGNORED !!![0m
[33m- 0860 !!! IGNORED !!![0m
[33m- 0861 !!! IGNORED !!![0m
[33m- 0862 !!! IGNORED !!![0m
[33m- 0863 !!! IGNORED !!![0m
[33m- 0864 !!! IGNORED !!![0m
[33m- 0865 !!! IGNORED !!![0m
[33m- 0866 !!! IGNORED !!![0m
[33m- 0867 !!! IGNORED !!![0m
[33m- 0868 !!! IGNORED !!![0m
[33m- 0869 !!! IGNORED !!![0m
[33m- 0871 !!! IGNORED !!![0m
[33m- 0872 !!! IGNORED !!![0m
[33m- 0873 !!! IGNORED !!![0m
[33m- 0874 !!! IGNORED !!![0m
[33m- 0875 !!! IGNORED !!![0m
[33m- 0876 !!! IGNORED !!![0m
[33m- 0877 !!! IGNORED !!![0m
[33m- 0878 !!! IGNORED !!![0m
[33m- 0879 !!! IGNORED !!![0m
[33m- 0880 !!! IGNORED !!![0m
[33m- 0881 !!! IGNORED !!![0m
[33m- 0882 !!! IGNORED !!![0m
[33m- 0883 !!! IGNORED !!![0m
[33m- 0884 !!! IGNORED !!![0m
[33m- 0885 !!! IGNORED !!![0m
[33m- 0886 !!! IGNORED !!![0m
[33m- 0887 !!! IGNORED !!![0m
[33m- 0888 !!! IGNORED !!![0m
[33m- 0889 !!! IGNORED !!![0m
[33m- 0890 !!! IGNORED !!![0m
[33m- 0891 !!! IGNORED !!![0m
[33m- 0892 !!! IGNORED !!![0m
[33m- 0893 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT * FROM STAFF1 NATURAL FULL OUTER JOIN STAFFA ORDER BY EMPNUM, EMPNAME, GRADE, PNUM
[31m- 0894 *** FAILED ***[0m
[31m  Failed to execute query using catalyst:[0m
[31m  Error: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#28431, EMPNUM#28437.;[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#28431, EMPNUM#28437.;[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve(LogicalPlan.scala:278)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve(LogicalPlan.scala:172)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$org$apache$spark$sql$catalyst$analysis$Analyzer$$resolveSortOrders$1$$anonfun$4.applyOrElse(Analyzer.scala:422)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$org$apache$spark$sql$catalyst$analysis$Analyzer$$resolveSortOrders$1$$anonfun$4.applyOrElse(Analyzer.scala:420)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:293)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:292)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:249)[0m
[31m  	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)[0m
[31m  	at scala.collection.Iterator$class.foreach(Iterator.scala:727)[0m
[31m  	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)[0m
[31m  	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)[0m
[31m  	at scala.collection.AbstractIterator.to(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)[0m
[31m  	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)[0m
[31m  	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)[0m
[31m  	at scala.collection.AbstractIterator.toArray(Iterator.scala:1157)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:279)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:290)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$org$apache$spark$sql$catalyst$analysis$Analyzer$$resolveSortOrders$1.apply(Analyzer.scala:420)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$org$apache$spark$sql$catalyst$analysis$Analyzer$$resolveSortOrders$1.apply(Analyzer.scala:414)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:32)[0m
[31m  	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:45)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer.org$apache$spark$sql$catalyst$analysis$Analyzer$$resolveSortOrders(Analyzer.scala:414)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveSortReferences$.resolveAndFindMissing(Analyzer.scala:466)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveSortReferences$$anonfun$apply$9.applyOrElse(Analyzer.scala:443)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveSortReferences$$anonfun$apply$9.applyOrElse(Analyzer.scala:440)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:57)[0m
[31m  	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:51)[0m
[31m  	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:56)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveSortReferences$.apply(Analyzer.scala:440)[0m
[31m  	at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveSortReferences$.apply(Analyzer.scala:439)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:83)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:80)[0m
[31m  	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m
[31m  	at scala.collection.immutable.List.foldLeft(List.scala:84)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:80)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:72)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:72)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed$lzycompute(TestHive.scala:195)[0m
[31m  	at org.apache.spark.sql.hive.test.TestHiveContext$QueryExecution.analyzed(TestHive.scala:180)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.assertAnalyzed(SQLContext.scala:908)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData$lzycompute(SQLContext.scala:912)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.withCachedData(SQLContext.scala:911)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan$lzycompute(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.optimizedPlan(SQLContext.scala:915)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan$lzycompute(SQLContext.scala:920)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.sparkPlan(SQLContext.scala:918)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan$lzycompute(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.SQLContext$QueryExecution.executedPlan(SQLContext.scala:924)[0m
[31m  	at org.apache.spark.sql.hive.HiveContext$QueryExecution.stringResult(HiveContext.scala:573)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:354)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1$$anonfun$33.apply(HiveComparisonTest.scala:352)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)[0m
[31m  	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)[0m
[31m  	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)[0m
[31m  	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)[0m
[31m  	at scala.collection.AbstractTraversable.map(Traversable.scala:105)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply$mcV$sp(HiveComparisonTest.scala:352)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest$$anonfun$createQueryTest$1.apply(HiveComparisonTest.scala:240)[0m
[31m  	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)[0m
[31m  	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m
[31m  	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:22)[0m
[31m  	at org.scalatest.Transformer.apply(Transformer.scala:20)[0m
[31m  	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)[0m
[31m  	at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:42)[0m
[31m  	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)[0m
[31m  	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.runTest(BeforeAndAfter.scala:200)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.runTest(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)[0m
[31m  	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)[0m
[31m  	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)[0m
[31m  	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)[0m
[31m  	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)[0m
[31m  	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1424)[0m
[31m  	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)[0m
[31m  	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)[0m
[31m  	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveComparisonTest.org$scalatest$BeforeAndAfterAll$$super$run(HiveComparisonTest.scala:44)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.liftedTree1$1(BeforeAndAfterAll.scala:257)[0m
[31m  	at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:256)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.org$scalatest$BeforeAndAfter$$super$run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.BeforeAndAfter$class.run(BeforeAndAfter.scala:241)[0m
[31m  	at org.apache.spark.sql.hive.execution.HiveCompatibilitySuite.run(HiveCompatibilitySuite.scala:32)[0m
[31m  	at org.scalatest.Suite$class.callExecuteOnSuite$1(Suite.scala:1492)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1528)[0m
[31m  	at org.scalatest.Suite$$anonfun$runNestedSuites$1.apply(Suite.scala:1526)[0m
[31m  	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)[0m
[31m  	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)[0m
[31m  	at org.scalatest.Suite$class.runNestedSuites(Suite.scala:1526)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.runNestedSuites(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.Suite$class.run(Suite.scala:1421)[0m
[31m  	at org.scalatest.tools.DiscoverySuite.run(DiscoverySuite.scala:29)[0m
[31m  	at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2563)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3.apply(Runner.scala:2557)[0m
[31m  	at scala.collection.immutable.List.foreach(List.scala:318)[0m
[31m  	at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2557)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)[0m
[31m  	at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)[0m
[31m  	at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)[0m
[31m  	at org.scalatest.tools.Runner$.main(Runner.scala:860)[0m
[31m  	at org.scalatest.tools.Runner.main(Runner.scala)[0m
  
[31m  == Parsed Logical Plan ==[0m
[31m  'Sort ['EMPNUM ASC,'EMPNAME ASC,'GRADE ASC,'PNUM ASC], true[0m
[31m   'Project [*][0m
[31m    'Join FullOuter, None[0m
[31m     'UnresolvedRelation [STAFF1], None[0m
[31m     'UnresolvedRelation [STAFFA], None[0m
  
[31m  == Analyzed Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#28440, EMPNUM#28446.;[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#28449, EMPNUM#28455.;[0m
[31m  == Optimized Logical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#28458, EMPNUM#28464.;[0m
[31m  == Physical Plan ==[0m
[31m  org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#28467, EMPNUM#28473.;[0m
[31m  Code Generation: org.apache.spark.sql.AnalysisException: Reference 'EMPNUM' is ambiguous, could be: EMPNUM#28476, EMPNUM#28482.;[0m
[31m  == HIVE - 12 row(s) ==[0m
[31m  E1	Alice	4	Lyon	20	40000	11[0m
[31m  E1	Alice	8	Lyon	20	40000	11[0m
[31m  E1	Alice	12	Geneva	20	40000	11[0m
[31m  E2	Betty	16	Strasbourg	15	20000	12[0m
[31m  E2	Betty	16	Strasbourg	15	20000	13[0m
[31m  E2	Betty	20	Munich	15	20000	12[0m
[31m  E2	Betty	20	Munich	15	20000	13[0m
[31m  E3	Colin	24	Leuven	10	15000	14[0m
[31m  E3	Colin	24	Leuven	10	8000	15[0m
[31m  E3	Colin	24	Leuven	10	8000	16[0m
[31m  E4	Daniel	28	Cologne	NULL	NULL	NULL[0m
[31m  E5	Edward	NULL	NULL	30	50000	17 (HiveComparisonTest.scala:366)[0m
[33m- 0895 !!! IGNORED !!![0m
[33m- 0896 !!! IGNORED !!![0m
[33m- 0897 !!! IGNORED !!![0m
[33m- 0898 !!! IGNORED !!![0m
[33m- 0899 !!! IGNORED !!![0m
[33m- 0900 !!! IGNORED !!![0m
[33m- 0901 !!! IGNORED !!![0m
[33m- 0902 !!! IGNORED !!![0m
[33m- 0903 !!! IGNORED !!![0m
[33m- 0904 !!! IGNORED !!![0m
[33m- 0905 !!! IGNORED !!![0m
[33m- 0906 !!! IGNORED !!![0m
[33m- 0912 !!! IGNORED !!![0m
[33m- 0913 !!! IGNORED !!![0m
[33m- 0914 !!! IGNORED !!![0m
[33m- 0915 !!! IGNORED !!![0m
[33m- 0916 !!! IGNORED !!![0m
[33m- 0917 !!! IGNORED !!![0m
[33m- 0918 !!! IGNORED !!![0m
[33m- 0919 !!! IGNORED !!![0m
[33m- 0920 !!! IGNORED !!![0m
[33m- 0921 !!! IGNORED !!![0m
[33m- 0922 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM HU.WORKS T01, HU.PROJ T02, HU.STAFF T03, USIG T04, U_SIG T05, BASE_VS1 T06, VS1 T07, VS2 T08, HU.VSTAFF3 T09, BASE_WCOV T10 WHERE T03.EMPNUM > 'E1'
[32m- 0923[0m
[33m- 0924 !!! IGNORED !!![0m
[33m- 0925 !!! IGNORED !!![0m
[33m- 0926 !!! IGNORED !!![0m
[33m- 0927 !!! IGNORED !!![0m
[33m- 0928 !!! IGNORED !!![0m
[33m- 0929 !!! IGNORED !!![0m
[33m- 0930 !!! IGNORED !!![0m
[33m- 0931 !!! IGNORED !!![0m
[33m- 0932 !!! IGNORED !!![0m
[33m- 0933 !!! IGNORED !!![0m
[33m- 0934 !!! IGNORED !!![0m
[33m- 0935 !!! IGNORED !!![0m
[33m- 0936 !!! IGNORED !!![0m
[33m- 0937 !!! IGNORED !!![0m
[33m- 0938 !!! IGNORED !!![0m
[33m- 0939 !!! IGNORED !!![0m
[33m- 0940 !!! IGNORED !!![0m
[33m- 0941 !!! IGNORED !!![0m
[33m- 0942 !!! IGNORED !!![0m
[33m- 0943 !!! IGNORED !!![0m
[33m- 0944 !!! IGNORED !!![0m
[33m- 0945 !!! IGNORED !!![0m
[33m- 0946 !!! IGNORED !!![0m
[33m- 0947 !!! IGNORED !!![0m
[33m- 0948 !!! IGNORED !!![0m
[33m- 0949 !!! IGNORED !!![0m
[33m- 0950 !!! IGNORED !!![0m
[33m- 0951 !!! IGNORED !!![0m
[33m- 0952 !!! IGNORED !!![0m
[33m- 0953 !!! IGNORED !!![0m
[33m- 0954 !!! IGNORED !!![0m
[33m- 0955 !!! IGNORED !!![0m
[33m- 0956 !!! IGNORED !!![0m
[33m- 0957 !!! IGNORED !!![0m
[33m- 0958 !!! IGNORED !!![0m
[33m- 0959 !!! IGNORED !!![0m
[33m- 0960 !!! IGNORED !!![0m
[33m- 0961 !!! IGNORED !!![0m
[33m- 0962 !!! IGNORED !!![0m
[33m- 0963 !!! IGNORED !!![0m
[33m- 0964 !!! IGNORED !!![0m
[33m- 0965 !!! IGNORED !!![0m
[33m- 0966 !!! IGNORED !!![0m
[33m- 0967 !!! IGNORED !!![0m
[33m- 0968 !!! IGNORED !!![0m
[33m- 0969 !!! IGNORED !!![0m
[33m- 0970 !!! IGNORED !!![0m
[33m- 0971 !!! IGNORED !!![0m
[33m- 0972 !!! IGNORED !!![0m
[33m- 0973 !!! IGNORED !!![0m
[33m- 0974 !!! IGNORED !!![0m
[33m- 0975 !!! IGNORED !!![0m
[33m- 0976 !!! IGNORED !!![0m
[33m- 0977 !!! IGNORED !!![0m
Calcite parsing passed, start to transform. SELECT COUNT(*) FROM SIZ3_F,SIZ3_P1,SIZ3_P2,SIZ3_P3,SIZ3_P4, SIZ3_P5,SIZ3_P6 WHERE P1 = SIZ3_P1.F1 AND P2 = SIZ3_P2.F1 AND P3 = SIZ3_P3.F1 AND P4 = SIZ3_P4.F1 AND P5 = SIZ3_P5.F1 AND P6 = SIZ3_P6.F1 AND SIZ3_P3.F1 BETWEEN 1 AND 2
[32m- 0978[0m
[33m- 0979 !!! IGNORED !!![0m
[33m- 0980 !!! IGNORED !!![0m
[33m- 0981 !!! IGNORED !!![0m
[33m- 0982 !!! IGNORED !!![0m
[33m- 0983 !!! IGNORED !!![0m
[33m- 0984 !!! IGNORED !!![0m
[33m- 0985 !!! IGNORED !!![0m
[33m- 0986 !!! IGNORED !!![0m
[33m- 0987 !!! IGNORED !!![0m
[33m- 0988 !!! IGNORED !!![0m
[33m- 0989 !!! IGNORED !!![0m
[33m- 0990 !!! IGNORED !!![0m
[33m- 0991 !!! IGNORED !!![0m
[33m- 0992 !!! IGNORED !!![0m
[33m- 0993 !!! IGNORED !!![0m
[33m- 0994 !!! IGNORED !!![0m
[33m- 0995 !!! IGNORED !!![0m
[33m- 0996 !!! IGNORED !!![0m
[33m- 0997 !!! IGNORED !!![0m
[33m- 0998 !!! IGNORED !!![0m
[33m- 0999 !!! IGNORED !!![0m
[33m- 1001 !!! IGNORED !!![0m
[33m- 1003 !!! IGNORED !!![0m
[33m- 1004 !!! IGNORED !!![0m
[33m- 1005 !!! IGNORED !!![0m
[33m- 1006 !!! IGNORED !!![0m
[33m- 1007 !!! IGNORED !!![0m
[33m- 1008 !!! IGNORED !!![0m
[33m- 1009 !!! IGNORED !!![0m
[33m- 1010 !!! IGNORED !!![0m
[33m- 1011 !!! IGNORED !!![0m
[33m- 1012 !!! IGNORED !!![0m
[33m- 1013 !!! IGNORED !!![0m
[33m- 1014 !!! IGNORED !!![0m
[33m- 1015 !!! IGNORED !!![0m
[33m- 1016 !!! IGNORED !!![0m
[33m- 1017 !!! IGNORED !!![0m
[33m- 1018 !!! IGNORED !!![0m
[33m- 1019 !!! IGNORED !!![0m
[33m- 1020 !!! IGNORED !!![0m
[33m- 1021 !!! IGNORED !!![0m
[33m- 1022 !!! IGNORED !!![0m
[33m- 1023 !!! IGNORED !!![0m
[33m- 1024 !!! IGNORED !!![0m
[33m- 1025 !!! IGNORED !!![0m
[33m- 1026 !!! IGNORED !!![0m
[33m- 1027 !!! IGNORED !!![0m
[33m- 1028 !!! IGNORED !!![0m
[33m- 1029 !!! IGNORED !!![0m
[33m- 1030 !!! IGNORED !!![0m
[33m- 1031 !!! IGNORED !!![0m
[33m- 1032 !!! IGNORED !!![0m
[33m- 1033 !!! IGNORED !!![0m
[33m- 1034 !!! IGNORED !!![0m
[33m- 1035 !!! IGNORED !!![0m
[33m- 1036 !!! IGNORED !!![0m
[33m- 1037 !!! IGNORED !!![0m
[33m- 1038 !!! IGNORED !!![0m
[33m- 1039 !!! IGNORED !!![0m
[33m- 1051 !!! IGNORED !!![0m
[33m- 1052 !!! IGNORED !!![0m
[33m- 1053 !!! IGNORED !!![0m
[33m- 1054 !!! IGNORED !!![0m
[33m- 1055 !!! IGNORED !!![0m
[33m- 1056 !!! IGNORED !!![0m
[33m- 1057 !!! IGNORED !!![0m
[33m- 1058 !!! IGNORED !!![0m
[33m- 1059 !!! IGNORED !!![0m
[33m- 1060 !!! IGNORED !!![0m
[33m- 1061 !!! IGNORED !!![0m
[33m- 1062 !!! IGNORED !!![0m
[33m- 1063 !!! IGNORED !!![0m
[33m- 1064 !!! IGNORED !!![0m
[33m- 1065 !!! IGNORED !!![0m
[33m- 1066 !!! IGNORED !!![0m
[33m- 1067 !!! IGNORED !!![0m
[33m- 1068 !!! IGNORED !!![0m
[33m- 1069 !!! IGNORED !!![0m
[33m- 1070 !!! IGNORED !!![0m
[33m- 1071 !!! IGNORED !!![0m
[33m- 1072 !!! IGNORED !!![0m
[33m- 2030 !!! IGNORED !!![0m
[33m- 2031 !!! IGNORED !!![0m
[33m- 2032 !!! IGNORED !!![0m
[33m- 2033 !!! IGNORED !!![0m
[33m- 2034 !!! IGNORED !!![0m
[33m- 2035 !!! IGNORED !!![0m
[33m- 2036 !!! IGNORED !!![0m
[33m- 2037 !!! IGNORED !!![0m
[33m- 2038 !!! IGNORED !!![0m
[33m- 2039 !!! IGNORED !!![0m
[33m- 5000 !!! IGNORED !!![0m
[33m- 5001 !!! IGNORED !!![0m
[33m- 5002 !!! IGNORED !!![0m
[33m- 5003 !!! IGNORED !!![0m
[33m- 5004 !!! IGNORED !!![0m
[33m- 5005 !!! IGNORED !!![0m
[33m- 5006 !!! IGNORED !!![0m
[33m- 5007 !!! IGNORED !!![0m
[33m- 5008 !!! IGNORED !!![0m
[33m- 5009 !!! IGNORED !!![0m
[33m- 5010 !!! IGNORED !!![0m
[33m- 5011 !!! IGNORED !!![0m
[33m- 5012 !!! IGNORED !!![0m
[33m- 5013 !!! IGNORED !!![0m
[33m- 5014 !!! IGNORED !!![0m
[33m- 5015 !!! IGNORED !!![0m
[33m- 5016 !!! IGNORED !!![0m
[33m- 5017 !!! IGNORED !!![0m
[33m- 5018 !!! IGNORED !!![0m
[33m- 5019 !!! IGNORED !!![0m
[33m- 5020 !!! IGNORED !!![0m
[33m- 5021 !!! IGNORED !!![0m
[33m- 5022 !!! IGNORED !!![0m
[33m- 5023 !!! IGNORED !!![0m
[33m- 5024 !!! IGNORED !!![0m
[33m- 5025 !!! IGNORED !!![0m
[33m- 5026 !!! IGNORED !!![0m
[33m- 5027 !!! IGNORED !!![0m
[33m- 5028 !!! IGNORED !!![0m
[33m- 5029 !!! IGNORED !!![0m
[33m- 5030 !!! IGNORED !!![0m
[33m- 5031 !!! IGNORED !!![0m
[33m- 5032 !!! IGNORED !!![0m
[33m- 5033 !!! IGNORED !!![0m
[33m- 5034 !!! IGNORED !!![0m
[33m- 5035 !!! IGNORED !!![0m
[33m- 5036 !!! IGNORED !!![0m
[33m- 5037 !!! IGNORED !!![0m
[33m- 5038 !!! IGNORED !!![0m
[33m- 5039 !!! IGNORED !!![0m
[33m- 5040 !!! IGNORED !!![0m
[33m- 5041 !!! IGNORED !!![0m
[33m- 5042 !!! IGNORED !!![0m
[33m- 5043 !!! IGNORED !!![0m
[33m- 5044 !!! IGNORED !!![0m
[33m- 5045 !!! IGNORED !!![0m
[33m- 5046 !!! IGNORED !!![0m
[33m- 5047 !!! IGNORED !!![0m
[33m- 5048 !!! IGNORED !!![0m
[33m- 5049 !!! IGNORED !!![0m
[33m- 5050 !!! IGNORED !!![0m
[33m- 5051 !!! IGNORED !!![0m
[33m- 5052 !!! IGNORED !!![0m
[33m- 5053 !!! IGNORED !!![0m
[33m- 5054 !!! IGNORED !!![0m
[33m- 5055 !!! IGNORED !!![0m
[33m- 5056 !!! IGNORED !!![0m
[33m- 5057 !!! IGNORED !!![0m
[33m- 5058 !!! IGNORED !!![0m
[33m- 5059 !!! IGNORED !!![0m
[33m- 5060 !!! IGNORED !!![0m
[33m- 5061 !!! IGNORED !!![0m
[33m- 5062 !!! IGNORED !!![0m
[33m- 5063 !!! IGNORED !!![0m
[33m- 5064 !!! IGNORED !!![0m
[33m- 5065 !!! IGNORED !!![0m
[33m- 5066 !!! IGNORED !!![0m
[33m- 5067 !!! IGNORED !!![0m
[33m- 5068 !!! IGNORED !!![0m
[33m- 5069 !!! IGNORED !!![0m
[33m- 5070 !!! IGNORED !!![0m
[33m- 5071 !!! IGNORED !!![0m
[33m- 5072 !!! IGNORED !!![0m
[33m- 5073 !!! IGNORED !!![0m
[33m- 5074 !!! IGNORED !!![0m
[33m- 5075 !!! IGNORED !!![0m
[33m- 5076 !!! IGNORED !!![0m
[33m- 5077 !!! IGNORED !!![0m
[33m- 5078 !!! IGNORED !!![0m
[33m- 5079 !!! IGNORED !!![0m
[33m- 5080 !!! IGNORED !!![0m
[33m- 5081 !!! IGNORED !!![0m
[33m- 5082 !!! IGNORED !!![0m
[33m- 5083 !!! IGNORED !!![0m
[33m- 5084 !!! IGNORED !!![0m
[33m- 5085 !!! IGNORED !!![0m
[33m- 5086 !!! IGNORED !!![0m
[33m- 5087 !!! IGNORED !!![0m
[33m- 5088 !!! IGNORED !!![0m
[33m- 5089 !!! IGNORED !!![0m
[33m- 5090 !!! IGNORED !!![0m
[33m- 5091 !!! IGNORED !!![0m
[33m- 5092 !!! IGNORED !!![0m
[33m- 5093 !!! IGNORED !!![0m
[33m- 5094 !!! IGNORED !!![0m
[33m- 5095 !!! IGNORED !!![0m
[33m- 5096 !!! IGNORED !!![0m
[33m- 5097 !!! IGNORED !!![0m
[33m- 5098 !!! IGNORED !!![0m
[33m- 5099 !!! IGNORED !!![0m
[33m- 5100 !!! IGNORED !!![0m
[33m- 5101 !!! IGNORED !!![0m
[33m- 5102 !!! IGNORED !!![0m
[33m- 5103 !!! IGNORED !!![0m
[33m- 5104 !!! IGNORED !!![0m
[33m- 5105 !!! IGNORED !!![0m
[33m- 5106 !!! IGNORED !!![0m
[33m- 5107 !!! IGNORED !!![0m
[33m- 5108 !!! IGNORED !!![0m
[33m- 5109 !!! IGNORED !!![0m
[33m- 5110 !!! IGNORED !!![0m
[33m- 5111 !!! IGNORED !!![0m
[33m- 5112 !!! IGNORED !!![0m
[33m- 5113 !!! IGNORED !!![0m
[33m- 5114 !!! IGNORED !!![0m
[33m- 5115 !!! IGNORED !!![0m
[33m- 5116 !!! IGNORED !!![0m
[33m- 5117 !!! IGNORED !!![0m
[33m- 5118 !!! IGNORED !!![0m
[33m- 5119 !!! IGNORED !!![0m
[33m- 5120 !!! IGNORED !!![0m
[33m- 5121 !!! IGNORED !!![0m
[33m- 5122 !!! IGNORED !!![0m
[33m- 5123 !!! IGNORED !!![0m
[33m- 5124 !!! IGNORED !!![0m
[33m- 5125 !!! IGNORED !!![0m
[33m- 5126 !!! IGNORED !!![0m
[33m- 5127 !!! IGNORED !!![0m
[33m- 5128 !!! IGNORED !!![0m
[33m- 5129 !!! IGNORED !!![0m
[33m- 5130 !!! IGNORED !!![0m
[33m- 5131 !!! IGNORED !!![0m
[33m- 5132 !!! IGNORED !!![0m
[33m- 5133 !!! IGNORED !!![0m
[33m- 5134 !!! IGNORED !!![0m
[33m- 5135 !!! IGNORED !!![0m
[33m- 5136 !!! IGNORED !!![0m
[33m- 5137 !!! IGNORED !!![0m
[33m- 5138 !!! IGNORED !!![0m
[33m- 5139 !!! IGNORED !!![0m
[33m- 5140 !!! IGNORED !!![0m
[33m- 5141 !!! IGNORED !!![0m
[33m- 5142 !!! IGNORED !!![0m
[33m- 5143 !!! IGNORED !!![0m
[33m- 5144 !!! IGNORED !!![0m
[33m- 5145 !!! IGNORED !!![0m
[33m- 5146 !!! IGNORED !!![0m
[33m- 5147 !!! IGNORED !!![0m
[33m- 5148 !!! IGNORED !!![0m
[33m- 5149 !!! IGNORED !!![0m
[33m- 5150 !!! IGNORED !!![0m
[33m- 5151 !!! IGNORED !!![0m
[33m- 5152 !!! IGNORED !!![0m
[33m- 5153 !!! IGNORED !!![0m
[33m- 5154 !!! IGNORED !!![0m
[33m- 5155 !!! IGNORED !!![0m
[33m- 5156 !!! IGNORED !!![0m
[33m- 5157 !!! IGNORED !!![0m
[33m- 5158 !!! IGNORED !!![0m
[33m- 5159 !!! IGNORED !!![0m
[33m- 5160 !!! IGNORED !!![0m
[33m- 5161 !!! IGNORED !!![0m
[33m- 5162 !!! IGNORED !!![0m
[33m- 5163 !!! IGNORED !!![0m
[33m- 5164 !!! IGNORED !!![0m
[33m- 5165 !!! IGNORED !!![0m
[33m- 5166 !!! IGNORED !!![0m
[33m- 5167 !!! IGNORED !!![0m
[33m- 5168 !!! IGNORED !!![0m
[33m- 5169 !!! IGNORED !!![0m
[33m- 5170 !!! IGNORED !!![0m
[33m- 5171 !!! IGNORED !!![0m
[33m- 5172 !!! IGNORED !!![0m
[33m- 5173 !!! IGNORED !!![0m
[33m- 5174 !!! IGNORED !!![0m
[33m- 5175 !!! IGNORED !!![0m
[33m- 5176 !!! IGNORED !!![0m
[33m- 5177 !!! IGNORED !!![0m
[33m- 5178 !!! IGNORED !!![0m
[33m- 5179 !!! IGNORED !!![0m
[33m- 5180 !!! IGNORED !!![0m
[33m- 5181 !!! IGNORED !!![0m
[33m- 5182 !!! IGNORED !!![0m
[33m- 5183 !!! IGNORED !!![0m
[33m- 5184 !!! IGNORED !!![0m
[33m- 5185 !!! IGNORED !!![0m
[33m- 5186 !!! IGNORED !!![0m
[33m- 5187 !!! IGNORED !!![0m
[33m- 5188 !!! IGNORED !!![0m
[33m- 5189 !!! IGNORED !!![0m
[33m- 5190 !!! IGNORED !!![0m
[33m- 5191 !!! IGNORED !!![0m
[33m- 5192 !!! IGNORED !!![0m
[33m- 5193 !!! IGNORED !!![0m
[33m- 5194 !!! IGNORED !!![0m
[33m- 5195 !!! IGNORED !!![0m
[33m- 5196 !!! IGNORED !!![0m
[33m- 5197 !!! IGNORED !!![0m
[33m- 5198 !!! IGNORED !!![0m
[33m- 5199 !!! IGNORED !!![0m
[33m- 5200 !!! IGNORED !!![0m
[33m- 5201 !!! IGNORED !!![0m
[33m- 5202 !!! IGNORED !!![0m
[33m- 5203 !!! IGNORED !!![0m
[33m- 5204 !!! IGNORED !!![0m
[33m- 5205 !!! IGNORED !!![0m
[33m- 5206 !!! IGNORED !!![0m
[33m- 5207 !!! IGNORED !!![0m
[33m- 5208 !!! IGNORED !!![0m
[33m- 5209 !!! IGNORED !!![0m
[33m- 5210 !!! IGNORED !!![0m
[33m- 5211 !!! IGNORED !!![0m
[33m- 5212 !!! IGNORED !!![0m
[33m- 5213 !!! IGNORED !!![0m
[33m- 5214 !!! IGNORED !!![0m
[33m- 5215 !!! IGNORED !!![0m
[33m- 5216 !!! IGNORED !!![0m
[33m- 5217 !!! IGNORED !!![0m
[33m- 5218 !!! IGNORED !!![0m
[33m- 5219 !!! IGNORED !!![0m
[33m- 5220 !!! IGNORED !!![0m
[33m- 5221 !!! IGNORED !!![0m
[33m- 5222 !!! IGNORED !!![0m
[33m- 5223 !!! IGNORED !!![0m
[33m- 5224 !!! IGNORED !!![0m
[33m- 5225 !!! IGNORED !!![0m
[33m- 5226 !!! IGNORED !!![0m
[33m- 5227 !!! IGNORED !!![0m
[33m- 5228 !!! IGNORED !!![0m
[33m- 5229 !!! IGNORED !!![0m
[33m- 5230 !!! IGNORED !!![0m
[33m- 5231 !!! IGNORED !!![0m
[33m- 5232 !!! IGNORED !!![0m
[33m- 5233 !!! IGNORED !!![0m
[33m- 5234 !!! IGNORED !!![0m
[33m- 5235 !!! IGNORED !!![0m
[33m- 5236 !!! IGNORED !!![0m
[33m- 5237 !!! IGNORED !!![0m
[33m- 5238 !!! IGNORED !!![0m
[33m- 5239 !!! IGNORED !!![0m
[33m- 5240 !!! IGNORED !!![0m
[33m- 5241 !!! IGNORED !!![0m
[33m- 5242 !!! IGNORED !!![0m
[33m- 5243 !!! IGNORED !!![0m
[33m- 5244 !!! IGNORED !!![0m
[33m- 5245 !!! IGNORED !!![0m
[33m- 5246 !!! IGNORED !!![0m
[33m- 5247 !!! IGNORED !!![0m
[33m- 5248 !!! IGNORED !!![0m
[33m- 5249 !!! IGNORED !!![0m
[33m- 5250 !!! IGNORED !!![0m
[33m- 5251 !!! IGNORED !!![0m
[33m- 5252 !!! IGNORED !!![0m
[33m- 5253 !!! IGNORED !!![0m
[33m- 5254 !!! IGNORED !!![0m
[33m- 5255 !!! IGNORED !!![0m
[33m- 5256 !!! IGNORED !!![0m
[33m- 5257 !!! IGNORED !!![0m
[33m- 5258 !!! IGNORED !!![0m
[33m- 5259 !!! IGNORED !!![0m
[33m- 5260 !!! IGNORED !!![0m
[33m- 5261 !!! IGNORED !!![0m
[33m- 5262 !!! IGNORED !!![0m
[33m- 5263 !!! IGNORED !!![0m
[33m- 5264 !!! IGNORED !!![0m
[33m- 5265 !!! IGNORED !!![0m
[33m- 5266 !!! IGNORED !!![0m
[33m- 5267 !!! IGNORED !!![0m
[33m- 5268 !!! IGNORED !!![0m
[33m- 5269 !!! IGNORED !!![0m
[33m- 5270 !!! IGNORED !!![0m
[33m- 5271 !!! IGNORED !!![0m
[33m- 5272 !!! IGNORED !!![0m
[33m- 5273 !!! IGNORED !!![0m
[33m- 5274 !!! IGNORED !!![0m
[33m- 5275 !!! IGNORED !!![0m
[33m- 5276 !!! IGNORED !!![0m
[33m- 5277 !!! IGNORED !!![0m
[33m- 5278 !!! IGNORED !!![0m
[33m- 5279 !!! IGNORED !!![0m
[33m- 5280 !!! IGNORED !!![0m
[33m- 5281 !!! IGNORED !!![0m
[33m- 5282 !!! IGNORED !!![0m
[33m- 5283 !!! IGNORED !!![0m
[33m- 5284 !!! IGNORED !!![0m
[33m- 5285 !!! IGNORED !!![0m
[33m- 5286 !!! IGNORED !!![0m
[33m- 5287 !!! IGNORED !!![0m
[33m- 5288 !!! IGNORED !!![0m
[33m- 5289 !!! IGNORED !!![0m
[33m- 5290 !!! IGNORED !!![0m
[33m- 5291 !!! IGNORED !!![0m
[33m- 5292 !!! IGNORED !!![0m
[33m- 5293 !!! IGNORED !!![0m
[33m- 5294 !!! IGNORED !!![0m
[33m- 5295 !!! IGNORED !!![0m
[33m- 5296 !!! IGNORED !!![0m
[33m- 5297 !!! IGNORED !!![0m
[33m- 5298 !!! IGNORED !!![0m
[33m- 5299 !!! IGNORED !!![0m
[33m- 5300 !!! IGNORED !!![0m
[33m- 5301 !!! IGNORED !!![0m
[33m- 5302 !!! IGNORED !!![0m
[33m- 5303 !!! IGNORED !!![0m
[33m- 5304 !!! IGNORED !!![0m
[33m- 5305 !!! IGNORED !!![0m
[33m- 5306 !!! IGNORED !!![0m
[33m- 5307 !!! IGNORED !!![0m
[33m- 5308 !!! IGNORED !!![0m
[33m- 5309 !!! IGNORED !!![0m
[33m- 5310 !!! IGNORED !!![0m
[33m- 5311 !!! IGNORED !!![0m
[33m- 5312 !!! IGNORED !!![0m
[33m- 5313 !!! IGNORED !!![0m
[33m- 5314 !!! IGNORED !!![0m
[33m- 5315 !!! IGNORED !!![0m
[33m- 5316 !!! IGNORED !!![0m
[33m- 5317 !!! IGNORED !!![0m
[33m- 5318 !!! IGNORED !!![0m
[33m- 5319 !!! IGNORED !!![0m
[33m- 5320 !!! IGNORED !!![0m
[33m- 5321 !!! IGNORED !!![0m
[33m- 5322 !!! IGNORED !!![0m
[33m- 5323 !!! IGNORED !!![0m
[33m- 5324 !!! IGNORED !!![0m
[33m- 5325 !!! IGNORED !!![0m
[33m- 5326 !!! IGNORED !!![0m
[33m- 5327 !!! IGNORED !!![0m
[33m- 5328 !!! IGNORED !!![0m
[33m- 5329 !!! IGNORED !!![0m
[33m- 5330 !!! IGNORED !!![0m
[33m- 5331 !!! IGNORED !!![0m
[33m- 5332 !!! IGNORED !!![0m
[33m- 5333 !!! IGNORED !!![0m
[33m- 5334 !!! IGNORED !!![0m
[33m- 5335 !!! IGNORED !!![0m
[33m- 5336 !!! IGNORED !!![0m
[33m- 5337 !!! IGNORED !!![0m
[33m- 5338 !!! IGNORED !!![0m
[33m- 5339 !!! IGNORED !!![0m
[33m- 5340 !!! IGNORED !!![0m
[33m- 5341 !!! IGNORED !!![0m
[33m- 5342 !!! IGNORED !!![0m
[33m- 5343 !!! IGNORED !!![0m
[33m- 5344 !!! IGNORED !!![0m
[33m- 5345 !!! IGNORED !!![0m
[33m- 5346 !!! IGNORED !!![0m
[33m- 5347 !!! IGNORED !!![0m
[33m- 5348 !!! IGNORED !!![0m
[33m- 5349 !!! IGNORED !!![0m
[33m- 5350 !!! IGNORED !!![0m
[33m- 5351 !!! IGNORED !!![0m
[33m- 5352 !!! IGNORED !!![0m
[33m- 5353 !!! IGNORED !!![0m
[33m- 5354 !!! IGNORED !!![0m
[33m- 5355 !!! IGNORED !!![0m
[33m- 5356 !!! IGNORED !!![0m
[33m- 5357 !!! IGNORED !!![0m
[33m- 5358 !!! IGNORED !!![0m
[33m- 5359 !!! IGNORED !!![0m
[33m- 5360 !!! IGNORED !!![0m
[33m- 5361 !!! IGNORED !!![0m
[33m- 5362 !!! IGNORED !!![0m
[33m- 5363 !!! IGNORED !!![0m
[33m- 5364 !!! IGNORED !!![0m
[33m- 5365 !!! IGNORED !!![0m
[33m- 5366 !!! IGNORED !!![0m
[33m- 5367 !!! IGNORED !!![0m
[33m- 5368 !!! IGNORED !!![0m
[33m- 5369 !!! IGNORED !!![0m
[33m- 5370 !!! IGNORED !!![0m
[33m- 5371 !!! IGNORED !!![0m
[33m- 5372 !!! IGNORED !!![0m
[33m- 5373 !!! IGNORED !!![0m
[33m- 5374 !!! IGNORED !!![0m
[33m- 5375 !!! IGNORED !!![0m
[33m- 5376 !!! IGNORED !!![0m
[33m- 5377 !!! IGNORED !!![0m
[33m- 5378 !!! IGNORED !!![0m
[33m- 5379 !!! IGNORED !!![0m
[33m- 5380 !!! IGNORED !!![0m
[33m- 5381 !!! IGNORED !!![0m
[33m- 5382 !!! IGNORED !!![0m
[33m- 5383 !!! IGNORED !!![0m
[33m- 5384 !!! IGNORED !!![0m
[33m- 5385 !!! IGNORED !!![0m
[33m- 5386 !!! IGNORED !!![0m
[33m- 5387 !!! IGNORED !!![0m
[33m- 5388 !!! IGNORED !!![0m
[33m- 5389 !!! IGNORED !!![0m
[33m- 5390 !!! IGNORED !!![0m
[33m- 5391 !!! IGNORED !!![0m
[33m- 5392 !!! IGNORED !!![0m
[33m- 5393 !!! IGNORED !!![0m
[33m- 5394 !!! IGNORED !!![0m
[33m- 5395 !!! IGNORED !!![0m
[33m- 5396 !!! IGNORED !!![0m
[33m- 5397 !!! IGNORED !!![0m
[33m- 5398 !!! IGNORED !!![0m
[33m- 5399 !!! IGNORED !!![0m
[33m- 5400 !!! IGNORED !!![0m
[33m- 5401 !!! IGNORED !!![0m
[33m- 5402 !!! IGNORED !!![0m
[33m- 5403 !!! IGNORED !!![0m
[33m- 5404 !!! IGNORED !!![0m
[33m- 5405 !!! IGNORED !!![0m
[33m- 5406 !!! IGNORED !!![0m
[33m- 5407 !!! IGNORED !!![0m
[33m- 5408 !!! IGNORED !!![0m
[33m- 5409 !!! IGNORED !!![0m
[33m- 5410 !!! IGNORED !!![0m
[33m- 5411 !!! IGNORED !!![0m
[33m- 5412 !!! IGNORED !!![0m
[33m- 5413 !!! IGNORED !!![0m
[33m- 5414 !!! IGNORED !!![0m
[33m- 5415 !!! IGNORED !!![0m
[33m- 5416 !!! IGNORED !!![0m
[33m- 5417 !!! IGNORED !!![0m
[33m- 5418 !!! IGNORED !!![0m
[33m- 5419 !!! IGNORED !!![0m
[33m- 5420 !!! IGNORED !!![0m
[33m- 5421 !!! IGNORED !!![0m
[33m- 5422 !!! IGNORED !!![0m
[33m- 5423 !!! IGNORED !!![0m
[33m- 5424 !!! IGNORED !!![0m
[33m- 5425 !!! IGNORED !!![0m
[33m- 5426 !!! IGNORED !!![0m
[33m- 5427 !!! IGNORED !!![0m
[33m- 5428 !!! IGNORED !!![0m
[33m- 5429 !!! IGNORED !!![0m
[33m- 5430 !!! IGNORED !!![0m
[33m- 5431 !!! IGNORED !!![0m
[33m- 5432 !!! IGNORED !!![0m
[33m- 5433 !!! IGNORED !!![0m
[33m- 5434 !!! IGNORED !!![0m
[33m- 5435 !!! IGNORED !!![0m
[33m- 5436 !!! IGNORED !!![0m
[33m- 5437 !!! IGNORED !!![0m
[33m- 5438 !!! IGNORED !!![0m
[33m- 5439 !!! IGNORED !!![0m
[33m- 5440 !!! IGNORED !!![0m
[33m- 5441 !!! IGNORED !!![0m
[33m- 5442 !!! IGNORED !!![0m
[33m- 5443 !!! IGNORED !!![0m
[33m- 5444 !!! IGNORED !!![0m
[33m- 5445 !!! IGNORED !!![0m
[33m- 5446 !!! IGNORED !!![0m
[33m- 5447 !!! IGNORED !!![0m
[33m- 5448 !!! IGNORED !!![0m
[33m- 5449 !!! IGNORED !!![0m
[33m- 5450 !!! IGNORED !!![0m
[33m- 5451 !!! IGNORED !!![0m
[33m- 5452 !!! IGNORED !!![0m
[33m- 5453 !!! IGNORED !!![0m
[33m- 5454 !!! IGNORED !!![0m
[33m- 5455 !!! IGNORED !!![0m
[33m- 5456 !!! IGNORED !!![0m
[33m- 5457 !!! IGNORED !!![0m
[33m- 5458 !!! IGNORED !!![0m
[33m- 5459 !!! IGNORED !!![0m
[33m- 5460 !!! IGNORED !!![0m
[33m- 5461 !!! IGNORED !!![0m
[33m- 5462 !!! IGNORED !!![0m
[33m- 5463 !!! IGNORED !!![0m
[33m- 5464 !!! IGNORED !!![0m
[33m- 5465 !!! IGNORED !!![0m
[33m- 5466 !!! IGNORED !!![0m
[33m- 5467 !!! IGNORED !!![0m
[33m- 5468 !!! IGNORED !!![0m
[33m- 5469 !!! IGNORED !!![0m
[33m- 5470 !!! IGNORED !!![0m
[33m- 5471 !!! IGNORED !!![0m
[33m- 5472 !!! IGNORED !!![0m
[33m- 5473 !!! IGNORED !!![0m
[33m- 5474 !!! IGNORED !!![0m
[33m- 5475 !!! IGNORED !!![0m
[33m- 5476 !!! IGNORED !!![0m
[33m- 5477 !!! IGNORED !!![0m
[33m- 5478 !!! IGNORED !!![0m
[33m- 5479 !!! IGNORED !!![0m
[33m- 5480 !!! IGNORED !!![0m
[33m- 5481 !!! IGNORED !!![0m
[33m- 5482 !!! IGNORED !!![0m
[33m- 5483 !!! IGNORED !!![0m
[33m- 5484 !!! IGNORED !!![0m
[33m- 5485 !!! IGNORED !!![0m
[33m- 5486 !!! IGNORED !!![0m
[33m- 5487 !!! IGNORED !!![0m
[33m- 5488 !!! IGNORED !!![0m
[33m- 5489 !!! IGNORED !!![0m
[33m- 5490 !!! IGNORED !!![0m
[33m- 5491 !!! IGNORED !!![0m
[33m- 5492 !!! IGNORED !!![0m
[33m- 5493 !!! IGNORED !!![0m
[33m- 5494 !!! IGNORED !!![0m
[33m- 5495 !!! IGNORED !!![0m
[33m- 5496 !!! IGNORED !!![0m
[33m- 5497 !!! IGNORED !!![0m
[33m- 5498 !!! IGNORED !!![0m
[33m- 5499 !!! IGNORED !!![0m
[33m- 5500 !!! IGNORED !!![0m
[33m- 5501 !!! IGNORED !!![0m
[33m- 5502 !!! IGNORED !!![0m
[33m- 5503 !!! IGNORED !!![0m
[33m- 5504 !!! IGNORED !!![0m
[33m- 5505 !!! IGNORED !!![0m
[33m- 5506 !!! IGNORED !!![0m
[33m- 5507 !!! IGNORED !!![0m
[33m- 5508 !!! IGNORED !!![0m
[33m- 5509 !!! IGNORED !!![0m
[33m- 5510 !!! IGNORED !!![0m
[33m- 5511 !!! IGNORED !!![0m
[33m- 5512 !!! IGNORED !!![0m
[33m- 5513 !!! IGNORED !!![0m
[33m- 5514 !!! IGNORED !!![0m
[33m- 5515 !!! IGNORED !!![0m
[33m- 5516 !!! IGNORED !!![0m
[33m- 5517 !!! IGNORED !!![0m
[33m- 5518 !!! IGNORED !!![0m
[33m- 5519 !!! IGNORED !!![0m
[33m- 5520 !!! IGNORED !!![0m
[33m- 5521 !!! IGNORED !!![0m
[33m- 5522 !!! IGNORED !!![0m
[33m- 5523 !!! IGNORED !!![0m
[33m- 5524 !!! IGNORED !!![0m
[33m- 5525 !!! IGNORED !!![0m
[33m- 5526 !!! IGNORED !!![0m
[33m- 5527 !!! IGNORED !!![0m
[33m- 5528 !!! IGNORED !!![0m
[33m- 5529 !!! IGNORED !!![0m
[33m- 5530 !!! IGNORED !!![0m
[33m- 5531 !!! IGNORED !!![0m
[33m- 5532 !!! IGNORED !!![0m
[33m- 5533 !!! IGNORED !!![0m
[33m- 5534 !!! IGNORED !!![0m
[33m- 5535 !!! IGNORED !!![0m
[33m- 5536 !!! IGNORED !!![0m
[33m- 5537 !!! IGNORED !!![0m
[33m- 5538 !!! IGNORED !!![0m
[33m- 5539 !!! IGNORED !!![0m
[33m- 5540 !!! IGNORED !!![0m
[33m- 5541 !!! IGNORED !!![0m
[33m- 5542 !!! IGNORED !!![0m
[33m- 5543 !!! IGNORED !!![0m
[33m- 5544 !!! IGNORED !!![0m
[33m- 5545 !!! IGNORED !!![0m
[33m- 5546 !!! IGNORED !!![0m
[33m- 5547 !!! IGNORED !!![0m
[33m- 5548 !!! IGNORED !!![0m
[33m- 5549 !!! IGNORED !!![0m
[33m- 5550 !!! IGNORED !!![0m
[33m- 5551 !!! IGNORED !!![0m
[33m- 5552 !!! IGNORED !!![0m
[33m- 5553 !!! IGNORED !!![0m
[33m- 5554 !!! IGNORED !!![0m
[33m- 5555 !!! IGNORED !!![0m
[33m- 5556 !!! IGNORED !!![0m
[33m- 5557 !!! IGNORED !!![0m
[33m- 5558 !!! IGNORED !!![0m
[33m- 5559 !!! IGNORED !!![0m
[33m- 5560 !!! IGNORED !!![0m
[33m- 5561 !!! IGNORED !!![0m
[33m- 5562 !!! IGNORED !!![0m
[33m- 5563 !!! IGNORED !!![0m
[33m- 5564 !!! IGNORED !!![0m
[33m- 5565 !!! IGNORED !!![0m
[33m- 5566 !!! IGNORED !!![0m
[33m- 5567 !!! IGNORED !!![0m
[33m- 5568 !!! IGNORED !!![0m
[33m- 5569 !!! IGNORED !!![0m
[33m- 5570 !!! IGNORED !!![0m
[33m- 5571 !!! IGNORED !!![0m
[33m- 5572 !!! IGNORED !!![0m
[33m- 5573 !!! IGNORED !!![0m
[33m- 5574 !!! IGNORED !!![0m
[33m- 5575 !!! IGNORED !!![0m
[33m- 5576 !!! IGNORED !!![0m
[33m- 5577 !!! IGNORED !!![0m
[33m- 5578 !!! IGNORED !!![0m
[33m- 5579 !!! IGNORED !!![0m
[33m- 5580 !!! IGNORED !!![0m
[33m- 5581 !!! IGNORED !!![0m
[33m- 5582 !!! IGNORED !!![0m
[33m- 5583 !!! IGNORED !!![0m
[33m- 5584 !!! IGNORED !!![0m
[33m- 5585 !!! IGNORED !!![0m
[33m- 5586 !!! IGNORED !!![0m
[33m- 5587 !!! IGNORED !!![0m
[33m- 5588 !!! IGNORED !!![0m
[33m- 5589 !!! IGNORED !!![0m
[33m- 5590 !!! IGNORED !!![0m
[33m- 5591 !!! IGNORED !!![0m
[33m- 5592 !!! IGNORED !!![0m
[33m- 5593 !!! IGNORED !!![0m
[33m- 5594 !!! IGNORED !!![0m
[33m- 5595 !!! IGNORED !!![0m
[33m- 5596 !!! IGNORED !!![0m
[33m- 5597 !!! IGNORED !!![0m
[33m- 5598 !!! IGNORED !!![0m
[33m- 5599 !!! IGNORED !!![0m
[33m- 5600 !!! IGNORED !!![0m
[33m- 5601 !!! IGNORED !!![0m
[33m- 5602 !!! IGNORED !!![0m
[33m- 5603 !!! IGNORED !!![0m
[33m- 5604 !!! IGNORED !!![0m
[33m- 5605 !!! IGNORED !!![0m
[33m- 5606 !!! IGNORED !!![0m
[33m- 5607 !!! IGNORED !!![0m
[33m- 5608 !!! IGNORED !!![0m
[33m- 5609 !!! IGNORED !!![0m
[33m- 5610 !!! IGNORED !!![0m
[33m- 5611 !!! IGNORED !!![0m
[33m- 5612 !!! IGNORED !!![0m
[33m- 5613 !!! IGNORED !!![0m
[33m- 5614 !!! IGNORED !!![0m
[33m- 5615 !!! IGNORED !!![0m
[33m- 5616 !!! IGNORED !!![0m
[33m- 5617 !!! IGNORED !!![0m
[33m- 5618 !!! IGNORED !!![0m
[33m- 5619 !!! IGNORED !!![0m
[33m- 5620 !!! IGNORED !!![0m
[33m- 5621 !!! IGNORED !!![0m
[33m- 5622 !!! IGNORED !!![0m
[33m- 5623 !!! IGNORED !!![0m
[33m- 5624 !!! IGNORED !!![0m
[33m- 5625 !!! IGNORED !!![0m
[33m- 5626 !!! IGNORED !!![0m
[33m- 5627 !!! IGNORED !!![0m
[33m- 5628 !!! IGNORED !!![0m
[33m- 5629 !!! IGNORED !!![0m
[33m- 5630 !!! IGNORED !!![0m
[33m- 5631 !!! IGNORED !!![0m
[33m- 5632 !!! IGNORED !!![0m
[33m- 5633 !!! IGNORED !!![0m
[33m- 5634 !!! IGNORED !!![0m
[33m- 5635 !!! IGNORED !!![0m
[33m- 5636 !!! IGNORED !!![0m
[33m- 5637 !!! IGNORED !!![0m
[33m- 5638 !!! IGNORED !!![0m
[33m- 5639 !!! IGNORED !!![0m
[33m- 5640 !!! IGNORED !!![0m
[33m- 5641 !!! IGNORED !!![0m
[33m- 5642 !!! IGNORED !!![0m
[33m- 5643 !!! IGNORED !!![0m
[33m- 5644 !!! IGNORED !!![0m
[33m- 5645 !!! IGNORED !!![0m
[33m- 5646 !!! IGNORED !!![0m
[33m- 5647 !!! IGNORED !!![0m
[33m- 5648 !!! IGNORED !!![0m
[33m- 5649 !!! IGNORED !!![0m
[33m- 5650 !!! IGNORED !!![0m
[33m- 5651 !!! IGNORED !!![0m
[33m- 5652 !!! IGNORED !!![0m
[33m- 5653 !!! IGNORED !!![0m
[33m- 5654 !!! IGNORED !!![0m
[33m- 5655 !!! IGNORED !!![0m
[33m- 5656 !!! IGNORED !!![0m
[33m- 5657 !!! IGNORED !!![0m
[33m- 5658 !!! IGNORED !!![0m
[33m- 5659 !!! IGNORED !!![0m
[33m- 5660 !!! IGNORED !!![0m
[33m- 5661 !!! IGNORED !!![0m
[33m- 5662 !!! IGNORED !!![0m
[33m- 5663 !!! IGNORED !!![0m
[33m- 5664 !!! IGNORED !!![0m
[33m- 5665 !!! IGNORED !!![0m
[33m- 5666 !!! IGNORED !!![0m
[33m- 5667 !!! IGNORED !!![0m
[33m- 5668 !!! IGNORED !!![0m
[33m- 5669 !!! IGNORED !!![0m
[33m- 5670 !!! IGNORED !!![0m
[33m- 5671 !!! IGNORED !!![0m
[33m- 5672 !!! IGNORED !!![0m
[33m- 5673 !!! IGNORED !!![0m
[33m- 5674 !!! IGNORED !!![0m
[33m- 5675 !!! IGNORED !!![0m
[33m- 5676 !!! IGNORED !!![0m
[33m- 5677 !!! IGNORED !!![0m
[33m- 5678 !!! IGNORED !!![0m
[33m- 5679 !!! IGNORED !!![0m
[33m- 5680 !!! IGNORED !!![0m
[33m- 5681 !!! IGNORED !!![0m
[33m- 5682 !!! IGNORED !!![0m
[33m- 5683 !!! IGNORED !!![0m
[33m- 5684 !!! IGNORED !!![0m
[33m- 5685 !!! IGNORED !!![0m
[33m- 5686 !!! IGNORED !!![0m
[33m- 5687 !!! IGNORED !!![0m
[33m- 5688 !!! IGNORED !!![0m
[33m- 5689 !!! IGNORED !!![0m
[33m- 5690 !!! IGNORED !!![0m
[33m- 5691 !!! IGNORED !!![0m
[33m- 5692 !!! IGNORED !!![0m
[33m- 5693 !!! IGNORED !!![0m
[33m- 5694 !!! IGNORED !!![0m
[33m- 5695 !!! IGNORED !!![0m
[33m- 5696 !!! IGNORED !!![0m
[33m- 5697 !!! IGNORED !!![0m
[33m- 5698 !!! IGNORED !!![0m
[33m- 5699 !!! IGNORED !!![0m
[33m- 5700 !!! IGNORED !!![0m
[33m- 5701 !!! IGNORED !!![0m
[33m- 5702 !!! IGNORED !!![0m
[33m- 5703 !!! IGNORED !!![0m
[33m- 5704 !!! IGNORED !!![0m
[33m- 5705 !!! IGNORED !!![0m
[33m- 5706 !!! IGNORED !!![0m
[33m- 5707 !!! IGNORED !!![0m
[33m- 5708 !!! IGNORED !!![0m
[33m- 5709 !!! IGNORED !!![0m
[33m- 5710 !!! IGNORED !!![0m
[33m- 5711 !!! IGNORED !!![0m
[33m- 5712 !!! IGNORED !!![0m
[33m- 5713 !!! IGNORED !!![0m
[33m- 5714 !!! IGNORED !!![0m
[33m- 5715 !!! IGNORED !!![0m
[33m- 5716 !!! IGNORED !!![0m
[33m- 5717 !!! IGNORED !!![0m
[33m- 5718 !!! IGNORED !!![0m
[33m- 5719 !!! IGNORED !!![0m
[33m- 5720 !!! IGNORED !!![0m
[33m- 5721 !!! IGNORED !!![0m
[33m- 5722 !!! IGNORED !!![0m
[33m- 5723 !!! IGNORED !!![0m
[33m- 5724 !!! IGNORED !!![0m
[33m- 5725 !!! IGNORED !!![0m
[33m- 5726 !!! IGNORED !!![0m
[33m- 5727 !!! IGNORED !!![0m
[33m- 5728 !!! IGNORED !!![0m
[33m- 5729 !!! IGNORED !!![0m
[33m- 5730 !!! IGNORED !!![0m
[33m- 5731 !!! IGNORED !!![0m
[33m- 5732 !!! IGNORED !!![0m
[33m- 5733 !!! IGNORED !!![0m
[33m- 5734 !!! IGNORED !!![0m
[33m- 5735 !!! IGNORED !!![0m
[33m- 5736 !!! IGNORED !!![0m
[33m- 5737 !!! IGNORED !!![0m
[33m- 5738 !!! IGNORED !!![0m
[33m- 5739 !!! IGNORED !!![0m
[33m- 5740 !!! IGNORED !!![0m
[33m- 5741 !!! IGNORED !!![0m
[33m- 5742 !!! IGNORED !!![0m
[33m- 5743 !!! IGNORED !!![0m
[33m- 5744 !!! IGNORED !!![0m
[33m- 5745 !!! IGNORED !!![0m
[33m- 5746 !!! IGNORED !!![0m
[33m- 5747 !!! IGNORED !!![0m
[33m- 5748 !!! IGNORED !!![0m
[33m- 5749 !!! IGNORED !!![0m
[33m- 5750 !!! IGNORED !!![0m
[33m- 5751 !!! IGNORED !!![0m
[33m- 5752 !!! IGNORED !!![0m
[33m- 5753 !!! IGNORED !!![0m
[33m- 5754 !!! IGNORED !!![0m
[33m- 5755 !!! IGNORED !!![0m
[33m- 5756 !!! IGNORED !!![0m
[33m- 5757 !!! IGNORED !!![0m
[33m- 5758 !!! IGNORED !!![0m
[33m- 5759 !!! IGNORED !!![0m
[33m- 5760 !!! IGNORED !!![0m
[33m- 5761 !!! IGNORED !!![0m
[33m- 5762 !!! IGNORED !!![0m
[33m- 5763 !!! IGNORED !!![0m
[33m- 5764 !!! IGNORED !!![0m
[33m- 5765 !!! IGNORED !!![0m
[33m- 5766 !!! IGNORED !!![0m
[33m- 5767 !!! IGNORED !!![0m
[33m- 5768 !!! IGNORED !!![0m
[33m- 5769 !!! IGNORED !!![0m
[33m- 5770 !!! IGNORED !!![0m
[33m- 5771 !!! IGNORED !!![0m
[33m- 5772 !!! IGNORED !!![0m
[33m- 5773 !!! IGNORED !!![0m
[33m- 5774 !!! IGNORED !!![0m
[33m- 5775 !!! IGNORED !!![0m
[33m- 5776 !!! IGNORED !!![0m
[33m- 5777 !!! IGNORED !!![0m
[33m- 5778 !!! IGNORED !!![0m
[33m- 5779 !!! IGNORED !!![0m
[33m- 5780 !!! IGNORED !!![0m
[33m- 5781 !!! IGNORED !!![0m
[33m- 5782 !!! IGNORED !!![0m
[33m- 5783 !!! IGNORED !!![0m
[33m- 5784 !!! IGNORED !!![0m
[33m- 5785 !!! IGNORED !!![0m
[33m- 5786 !!! IGNORED !!![0m
[33m- 5787 !!! IGNORED !!![0m
[33m- 5788 !!! IGNORED !!![0m
[33m- 5789 !!! IGNORED !!![0m
[33m- 5790 !!! IGNORED !!![0m
[33m- 5791 !!! IGNORED !!![0m
[33m- 5792 !!! IGNORED !!![0m
[33m- 5793 !!! IGNORED !!![0m
[33m- 5794 !!! IGNORED !!![0m
[33m- 5795 !!! IGNORED !!![0m
[33m- 5796 !!! IGNORED !!![0m
[33m- 5797 !!! IGNORED !!![0m
[33m- 5798 !!! IGNORED !!![0m
[33m- 5799 !!! IGNORED !!![0m
[33m- 5800 !!! IGNORED !!![0m
[33m- 5801 !!! IGNORED !!![0m
[33m- 5802 !!! IGNORED !!![0m
[33m- 5803 !!! IGNORED !!![0m
[33m- 5804 !!! IGNORED !!![0m
[33m- 5805 !!! IGNORED !!![0m
[33m- 5806 !!! IGNORED !!![0m
[33m- 5807 !!! IGNORED !!![0m
[33m- 5808 !!! IGNORED !!![0m
[33m- 5809 !!! IGNORED !!![0m
[33m- 5810 !!! IGNORED !!![0m
[33m- 5811 !!! IGNORED !!![0m
[33m- 5812 !!! IGNORED !!![0m
[33m- 5813 !!! IGNORED !!![0m
[33m- 5814 !!! IGNORED !!![0m
[33m- 5815 !!! IGNORED !!![0m
[33m- 5816 !!! IGNORED !!![0m
[33m- 5817 !!! IGNORED !!![0m
[33m- 5818 !!! IGNORED !!![0m
[33m- 5819 !!! IGNORED !!![0m
[33m- 5820 !!! IGNORED !!![0m
[33m- 5821 !!! IGNORED !!![0m
[33m- 5822 !!! IGNORED !!![0m
[33m- 5823 !!! IGNORED !!![0m
[33m- 5824 !!! IGNORED !!![0m
[33m- 5825 !!! IGNORED !!![0m
[33m- 5826 !!! IGNORED !!![0m
[33m- 5827 !!! IGNORED !!![0m
[33m- 5828 !!! IGNORED !!![0m
[33m- 5829 !!! IGNORED !!![0m
[33m- 5830 !!! IGNORED !!![0m
[33m- 5831 !!! IGNORED !!![0m
[33m- 5832 !!! IGNORED !!![0m
[33m- 5833 !!! IGNORED !!![0m
[33m- 5834 !!! IGNORED !!![0m
[33m- 5835 !!! IGNORED !!![0m
[33m- 5836 !!! IGNORED !!![0m
[33m- 5837 !!! IGNORED !!![0m
[33m- 5838 !!! IGNORED !!![0m
[33m- 5839 !!! IGNORED !!![0m
[33m- 5840 !!! IGNORED !!![0m
[33m- 5841 !!! IGNORED !!![0m
[33m- 5842 !!! IGNORED !!![0m
[33m- 5843 !!! IGNORED !!![0m
[33m- 5844 !!! IGNORED !!![0m
[33m- 5845 !!! IGNORED !!![0m
[33m- 5846 !!! IGNORED !!![0m
[33m- 5847 !!! IGNORED !!![0m
[33m- 5848 !!! IGNORED !!![0m
[33m- 5849 !!! IGNORED !!![0m
[33m- 5850 !!! IGNORED !!![0m
[33m- 5851 !!! IGNORED !!![0m
[33m- 5852 !!! IGNORED !!![0m
[33m- 5853 !!! IGNORED !!![0m
[33m- 5854 !!! IGNORED !!![0m
[33m- 5855 !!! IGNORED !!![0m
[33m- 5856 !!! IGNORED !!![0m
[33m- 5857 !!! IGNORED !!![0m
[33m- 5858 !!! IGNORED !!![0m
[33m- 5859 !!! IGNORED !!![0m
[33m- 5860 !!! IGNORED !!![0m
[33m- 5861 !!! IGNORED !!![0m
[33m- 5862 !!! IGNORED !!![0m
[33m- 5863 !!! IGNORED !!![0m
[33m- 5864 !!! IGNORED !!![0m
[33m- 5865 !!! IGNORED !!![0m
[33m- 5866 !!! IGNORED !!![0m
[33m- 5867 !!! IGNORED !!![0m
[33m- 5868 !!! IGNORED !!![0m
[33m- 5869 !!! IGNORED !!![0m
[33m- 5870 !!! IGNORED !!![0m
[33m- 5871 !!! IGNORED !!![0m
[33m- 5872 !!! IGNORED !!![0m
[33m- 5873 !!! IGNORED !!![0m
[33m- 5874 !!! IGNORED !!![0m
[33m- 5875 !!! IGNORED !!![0m
[33m- 5876 !!! IGNORED !!![0m
[33m- 5877 !!! IGNORED !!![0m
[33m- 5878 !!! IGNORED !!![0m
[33m- 5879 !!! IGNORED !!![0m
[33m- 5880 !!! IGNORED !!![0m
[33m- 5881 !!! IGNORED !!![0m
[33m- 5882 !!! IGNORED !!![0m
[33m- 5883 !!! IGNORED !!![0m
[33m- 5884 !!! IGNORED !!![0m
[33m- 5885 !!! IGNORED !!![0m
[33m- 5886 !!! IGNORED !!![0m
[33m- 5887 !!! IGNORED !!![0m
[33m- 5888 !!! IGNORED !!![0m
[33m- 5889 !!! IGNORED !!![0m
[33m- 5890 !!! IGNORED !!![0m
[33m- 5891 !!! IGNORED !!![0m
[33m- 5892 !!! IGNORED !!![0m
[33m- 5893 !!! IGNORED !!![0m
[33m- 5894 !!! IGNORED !!![0m
[33m- 5895 !!! IGNORED !!![0m
[33m- 5896 !!! IGNORED !!![0m
[33m- 5897 !!! IGNORED !!![0m
[33m- 5898 !!! IGNORED !!![0m
[33m- 5899 !!! IGNORED !!![0m
[33m- 5900 !!! IGNORED !!![0m
[33m- 5901 !!! IGNORED !!![0m
[33m- 5902 !!! IGNORED !!![0m
[33m- 5903 !!! IGNORED !!![0m
[33m- 5904 !!! IGNORED !!![0m
[33m- 5905 !!! IGNORED !!![0m
[33m- 5906 !!! IGNORED !!![0m
[33m- 5907 !!! IGNORED !!![0m
[33m- 5908 !!! IGNORED !!![0m
[33m- 5909 !!! IGNORED !!![0m
[33m- 5910 !!! IGNORED !!![0m
[33m- 5911 !!! IGNORED !!![0m
[33m- 5912 !!! IGNORED !!![0m
[33m- 5913 !!! IGNORED !!![0m
[33m- 5914 !!! IGNORED !!![0m
[33m- 5915 !!! IGNORED !!![0m
[33m- 5916 !!! IGNORED !!![0m
[33m- 5917 !!! IGNORED !!![0m
[33m- 5918 !!! IGNORED !!![0m
[33m- 5919 !!! IGNORED !!![0m
[33m- 5920 !!! IGNORED !!![0m
[33m- 5921 !!! IGNORED !!![0m
[33m- 5922 !!! IGNORED !!![0m
[33m- 5923 !!! IGNORED !!![0m
[33m- 5924 !!! IGNORED !!![0m
[33m- 5925 !!! IGNORED !!![0m
[33m- 5926 !!! IGNORED !!![0m
[33m- 5927 !!! IGNORED !!![0m
[33m- 5928 !!! IGNORED !!![0m
[33m- 5929 !!! IGNORED !!![0m
[33m- 5930 !!! IGNORED !!![0m
[33m- 5931 !!! IGNORED !!![0m
[33m- 5932 !!! IGNORED !!![0m
[33m- 5933 !!! IGNORED !!![0m
[33m- 5934 !!! IGNORED !!![0m
[33m- 5935 !!! IGNORED !!![0m
[33m- 5936 !!! IGNORED !!![0m
[33m- 5937 !!! IGNORED !!![0m
[33m- 5938 !!! IGNORED !!![0m
[33m- 5939 !!! IGNORED !!![0m
[33m- 5940 !!! IGNORED !!![0m
[33m- 5941 !!! IGNORED !!![0m
[33m- 5942 !!! IGNORED !!![0m
[33m- 5943 !!! IGNORED !!![0m
[33m- 5944 !!! IGNORED !!![0m
[33m- 5945 !!! IGNORED !!![0m
[33m- 5946 !!! IGNORED !!![0m
[33m- 5947 !!! IGNORED !!![0m
[33m- 5948 !!! IGNORED !!![0m
[33m- 5949 !!! IGNORED !!![0m
[33m- 5950 !!! IGNORED !!![0m
[33m- 5951 !!! IGNORED !!![0m
[33m- 5952 !!! IGNORED !!![0m
[33m- 5953 !!! IGNORED !!![0m
[33m- 5954 !!! IGNORED !!![0m
[33m- 5955 !!! IGNORED !!![0m
[33m- 5956 !!! IGNORED !!![0m
[33m- 5957 !!! IGNORED !!![0m
[33m- 5958 !!! IGNORED !!![0m
[33m- 5959 !!! IGNORED !!![0m
[33m- 5960 !!! IGNORED !!![0m
[33m- 5961 !!! IGNORED !!![0m
[33m- 5962 !!! IGNORED !!![0m
[33m- 5963 !!! IGNORED !!![0m
[33m- 5964 !!! IGNORED !!![0m
[33m- 5965 !!! IGNORED !!![0m
[33m- 5966 !!! IGNORED !!![0m
[33m- 5967 !!! IGNORED !!![0m
[33m- 5968 !!! IGNORED !!![0m
[33m- 5969 !!! IGNORED !!![0m
[33m- 5970 !!! IGNORED !!![0m
[33m- 5971 !!! IGNORED !!![0m
[33m- 5972 !!! IGNORED !!![0m
[33m- 5973 !!! IGNORED !!![0m
[33m- 5974 !!! IGNORED !!![0m
[33m- 5975 !!! IGNORED !!![0m
[33m- 5976 !!! IGNORED !!![0m
[33m- 5977 !!! IGNORED !!![0m
[33m- 5978 !!! IGNORED !!![0m
[33m- 5979 !!! IGNORED !!![0m
[33m- 5980 !!! IGNORED !!![0m
[33m- 5981 !!! IGNORED !!![0m
[33m- 5982 !!! IGNORED !!![0m
[33m- 5983 !!! IGNORED !!![0m
[33m- 5984 !!! IGNORED !!![0m
[33m- 5985 !!! IGNORED !!![0m
[33m- 5986 !!! IGNORED !!![0m
[33m- 5987 !!! IGNORED !!![0m
[33m- 5988 !!! IGNORED !!![0m
[33m- 5989 !!! IGNORED !!![0m
[33m- 5990 !!! IGNORED !!![0m
[33m- 5991 !!! IGNORED !!![0m
[33m- 5992 !!! IGNORED !!![0m
[33m- 5993 !!! IGNORED !!![0m
[33m- 5994 !!! IGNORED !!![0m
[33m- 5995 !!! IGNORED !!![0m
[33m- 5996 !!! IGNORED !!![0m
[33m- 5997 !!! IGNORED !!![0m
[33m- 5998 !!! IGNORED !!![0m
[33m- 5999 !!! IGNORED !!![0m
[33m- 6000 !!! IGNORED !!![0m
[33m- 6001 !!! IGNORED !!![0m
[33m- 6002 !!! IGNORED !!![0m
[33m- 6003 !!! IGNORED !!![0m
[33m- 6004 !!! IGNORED !!![0m
[33m- 6005 !!! IGNORED !!![0m
[33m- 6006 !!! IGNORED !!![0m
[33m- 6007 !!! IGNORED !!![0m
[33m- 6008 !!! IGNORED !!![0m
[33m- 6009 !!! IGNORED !!![0m
[33m- 6010 !!! IGNORED !!![0m
[33m- 6011 !!! IGNORED !!![0m
[33m- 6012 !!! IGNORED !!![0m
[33m- 6013 !!! IGNORED !!![0m
[33m- 6014 !!! IGNORED !!![0m
[33m- 6015 !!! IGNORED !!![0m
[33m- 6016 !!! IGNORED !!![0m
[33m- 6017 !!! IGNORED !!![0m
[33m- 6018 !!! IGNORED !!![0m
[33m- 6019 !!! IGNORED !!![0m
[33m- 6020 !!! IGNORED !!![0m
[33m- 6021 !!! IGNORED !!![0m
[33m- 6022 !!! IGNORED !!![0m
[33m- 6023 !!! IGNORED !!![0m
[33m- 6024 !!! IGNORED !!![0m
[33m- 6025 !!! IGNORED !!![0m
[33m- 6026 !!! IGNORED !!![0m
[33m- 6027 !!! IGNORED !!![0m
[33m- 6028 !!! IGNORED !!![0m
[33m- 6029 !!! IGNORED !!![0m
[33m- 6030 !!! IGNORED !!![0m
[33m- 6031 !!! IGNORED !!![0m
[33m- 6032 !!! IGNORED !!![0m
[33m- 6033 !!! IGNORED !!![0m
[33m- 6034 !!! IGNORED !!![0m
[33m- 6035 !!! IGNORED !!![0m
[33m- 6036 !!! IGNORED !!![0m
[33m- 6037 !!! IGNORED !!![0m
[33m- 6038 !!! IGNORED !!![0m
[33m- 6039 !!! IGNORED !!![0m
[33m- 6040 !!! IGNORED !!![0m
[33m- 6041 !!! IGNORED !!![0m
[33m- 6042 !!! IGNORED !!![0m
[33m- 6043 !!! IGNORED !!![0m
[33m- 6044 !!! IGNORED !!![0m
[33m- 6045 !!! IGNORED !!![0m
[33m- 6046 !!! IGNORED !!![0m
[33m- 6047 !!! IGNORED !!![0m
[33m- 6048 !!! IGNORED !!![0m
[33m- 6049 !!! IGNORED !!![0m
[33m- 6050 !!! IGNORED !!![0m
[33m- 6051 !!! IGNORED !!![0m
[33m- 6052 !!! IGNORED !!![0m
[33m- 6053 !!! IGNORED !!![0m
[33m- 6054 !!! IGNORED !!![0m
[33m- 6055 !!! IGNORED !!![0m
[33m- 6056 !!! IGNORED !!![0m
[33m- 6057 !!! IGNORED !!![0m
[33m- 6058 !!! IGNORED !!![0m
[33m- 6059 !!! IGNORED !!![0m
[33m- 6060 !!! IGNORED !!![0m
[33m- 6061 !!! IGNORED !!![0m
[33m- 6062 !!! IGNORED !!![0m
[33m- 6063 !!! IGNORED !!![0m
[33m- 6064 !!! IGNORED !!![0m
[33m- 6065 !!! IGNORED !!![0m
[33m- 6066 !!! IGNORED !!![0m
[33m- 6067 !!! IGNORED !!![0m
[33m- 6068 !!! IGNORED !!![0m
[33m- 6069 !!! IGNORED !!![0m
[33m- 6070 !!! IGNORED !!![0m
[33m- 6071 !!! IGNORED !!![0m
[33m- 6072 !!! IGNORED !!![0m
[33m- 6073 !!! IGNORED !!![0m
[33m- 6074 !!! IGNORED !!![0m
[33m- 6075 !!! IGNORED !!![0m
[33m- 6076 !!! IGNORED !!![0m
[33m- 6077 !!! IGNORED !!![0m
[33m- 6078 !!! IGNORED !!![0m
[33m- 6079 !!! IGNORED !!![0m
[33m- 6080 !!! IGNORED !!![0m
[33m- 6081 !!! IGNORED !!![0m
[33m- 6082 !!! IGNORED !!![0m
[33m- 6083 !!! IGNORED !!![0m
[33m- 6084 !!! IGNORED !!![0m
[33m- 6085 !!! IGNORED !!![0m
[33m- 6086 !!! IGNORED !!![0m
[33m- 6087 !!! IGNORED !!![0m
[33m- 6088 !!! IGNORED !!![0m
[33m- 6089 !!! IGNORED !!![0m
[33m- 6090 !!! IGNORED !!![0m
[33m- 6091 !!! IGNORED !!![0m
[33m- 6092 !!! IGNORED !!![0m
[33m- 6093 !!! IGNORED !!![0m
[33m- 6094 !!! IGNORED !!![0m
[33m- 6095 !!! IGNORED !!![0m
[33m- 6096 !!! IGNORED !!![0m
[33m- 6097 !!! IGNORED !!![0m
[33m- 6098 !!! IGNORED !!![0m
[33m- 6099 !!! IGNORED !!![0m
[33m- 6100 !!! IGNORED !!![0m
[33m- 6101 !!! IGNORED !!![0m
[33m- 6102 !!! IGNORED !!![0m
[33m- 6103 !!! IGNORED !!![0m
[33m- 6104 !!! IGNORED !!![0m
[36mRun completed in 4 minutes, 23 seconds.[0m
[36mTotal number of tests run: 78[0m
[36mSuites: completed 2, aborted 0[0m
[36mTests: succeeded 38, failed 40, canceled 0, ignored 2074, pending 0[0m
[31m*** 40 TESTS FAILED ***[0m
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 04:50 min
[INFO] Finished at: 2015-10-19T14:51:05+08:00
[INFO] Final Memory: 41M/1963M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.scalatest:scalatest-maven-plugin:1.0:test (test) on project spark-calcite-parser: There are test failures -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
